{
  "name": "train-ticket",
  "commitID": "57b392013e08dfc6b04a469061187dbd819c8462",
  "microservices": [
    {
      "name": "1-services-analysis",
      "path": "/1-services-analysis",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "repositories": {
              "repositories": [
                "// Use jcenter for resolving your dependencies.",
                "// You can declare any Maven/Ivy/file repository here.",
                "jcenter()"
              ]
            },
            "dependencies": {
              "dependencies": [
                "// This dependency is found on compile classpath of this component and consumers.",
                "compile 'com.google.guava:guava:21.0'",
                "// https://mvnrepository.com/artifact/org.json/json",
                "compile group: 'org.json', name: 'json', version: '20170516'",
                "// Use JUnit test framework",
                "testCompile 'junit:junit:4.12'"
              ]
            },
            "//mainClassName": "\"org.services.analysis.CallAnalysis\"",
            "mainClassName": "\"org.services.analysis.TraceTranslator\""
          },
          "name": "build.gradle",
          "path": "/1-services-analysis/build.gradle",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-1",
      "path": "/1-services/rest-service-1",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/hello1",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "Value",
              "microserviceName": "rest-service-1",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello1"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello1",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "log",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "AsyncRestTemplate",
              "name": "asyncRestTemplate",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "hello1",
              "parameterContents": "Double.valueOf(cal)",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "log10",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "hello1",
              "parameterContents": "cal",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello1",
              "parameterContents": "String.valueOf(cal2)",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "hello1",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "hello1",
              "parameterContents": "",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "random",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "asyncRestTemplate",
              "objectType": "AsyncRestTemplate",
              "calledFrom": "hello1",
              "parameterContents": "\"http://rest-service-end:16000/test?cal=\" + cal2,String.class",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "getForEntity",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "future",
              "objectType": "ListenableFuture",
              "calledFrom": "hello1",
              "parameterContents": "",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "get",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "hello1",
              "parameterContents": "entity.getBody()",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "println",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entity",
              "objectType": "ResponseEntity",
              "calledFrom": "hello1",
              "parameterContents": "",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "getBody",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "e",
              "objectType": "InterruptedException",
              "calledFrom": "hello1",
              "parameterContents": "",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "printStackTrace",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "e",
              "objectType": "ExecutionException",
              "calledFrom": "hello1",
              "parameterContents": "",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "printStackTrace",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/greeting?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello1",
              "parameterContents": "\"http://rest-service-external:16100/greeting?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/test?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello1",
              "parameterContents": "\"http://rest-service-python:16101/test?cal=\" + cal2,String.class",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello1",
              "parameterContents": "\"---------: \" + result",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "value",
              "objectType": "Value",
              "calledFrom": "hello1",
              "parameterContents": "result.length() > 0",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "setContent",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "result",
              "objectType": "String",
              "calledFrom": "hello1",
              "parameterContents": "",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "length",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/test?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello1",
              "parameterContents": "\"http://rest-service-go:16102/test?cal=\" + cal2,String.class",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello1",
              "parameterContents": "\"---------: \" + result",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "value",
              "objectType": "Value",
              "calledFrom": "hello1",
              "parameterContents": "result.length() > 0",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "setContent",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "result",
              "objectType": "String",
              "calledFrom": "hello1",
              "parameterContents": "",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "length",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello1",
              "parameterContents": "value.toString()",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "value",
              "objectType": "Value",
              "calledFrom": "hello1",
              "parameterContents": "",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "toString",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/1-services/rest-service-1/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-1"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 16001
            }
          },
          "name": "application.yml",
          "path": "/1-services/rest-service-1/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.myrestservice.sample",
                "artifactId": "rest-service-cluster",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-1",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-1",
              "version": "0.1.0",
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/1-services/rest-service-1/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-2",
      "path": "/1-services/rest-service-2",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/hello2",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "Value",
              "microserviceName": "rest-service-2",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello2"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello2",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "log",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "hello2",
              "parameterContents": "Double.valueOf(cal)",
              "microserviceName": "rest-service-2",
              "className": "HelloController",
              "name": "sqrt",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "hello2",
              "parameterContents": "cal",
              "microserviceName": "rest-service-2",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello2",
              "parameterContents": "String.valueOf(cal2)",
              "microserviceName": "rest-service-2",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "hello2",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-2",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello1?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello2",
              "parameterContents": "\"http://rest-service-1:16001/hello1?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-2",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello2",
              "parameterContents": "value.toString()",
              "microserviceName": "rest-service-2",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "value",
              "objectType": "Value",
              "calledFrom": "hello2",
              "parameterContents": "",
              "microserviceName": "rest-service-2",
              "className": "HelloController",
              "name": "toString",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/1-services/rest-service-2/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.myrestservice.sample",
                "artifactId": "rest-service-cluster",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-2",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-2",
              "version": "0.1.0",
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-quartz",
                    "version": "2.0.0.BUILD-SNAPSHOT"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/1-services/rest-service-2/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-2"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 16002
            }
          },
          "name": "application.yml",
          "path": "/1-services/rest-service-2/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-3",
      "path": "/1-services/rest-service-3",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/hello3",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "Value",
              "microserviceName": "rest-service-3",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello3"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello3",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "RestbackService",
              "name": "restbackService",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "Logger",
              "name": "log",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "hello3",
              "parameterContents": "Double.valueOf(cal),2",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "pow",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "hello3",
              "parameterContents": "cal",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello3",
              "parameterContents": "String.valueOf(cal2)",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "hello3",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello2?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello3",
              "parameterContents": "\"http://rest-service-2:16002/hello2?cal=\" + cal,Value.class",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello1?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello3",
              "parameterContents": "\"http://rest-service-1:16001/hello1?cal=\" + cal,Value.class",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello2?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello3",
              "parameterContents": "\"http://rest-service-2:16002/hello2?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "System",
              "objectType": "System",
              "calledFrom": "hello3",
              "parameterContents": "",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "currentTimeMillis",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "restbackService",
              "objectType": "RestbackService",
              "calledFrom": "hello3",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "callbackResult",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "e",
              "objectType": "InterruptedException",
              "calledFrom": "hello3",
              "parameterContents": "",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "printStackTrace",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello3",
              "parameterContents": "\"Elapsed time: \" + (System.currentTimeMillis() - start)",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "System",
              "objectType": "System",
              "calledFrom": "hello3",
              "parameterContents": "",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "currentTimeMillis",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello1?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello3",
              "parameterContents": "\"http://rest-service-1:16001/hello1?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/greeting?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello3",
              "parameterContents": "\"http://rest-service-end:16000/greeting?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello3",
              "parameterContents": "value.toString()",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "value",
              "objectType": "Value",
              "calledFrom": "hello3",
              "parameterContents": "",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "toString",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/1-services/rest-service-3/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "double",
                  "annotations": [],
                  "name": "cal2",
                  "packageAndClassName": "hello.RestbackService"
                }
              ],
              "returnType": "Future<Boolean>",
              "microserviceName": "rest-service-3",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Async",
                  "packageAndClassName": "hello.RestbackService"
                }
              ],
              "className": "RestbackService",
              "name": "callbackResult",
              "packageAndClassName": "hello.RestbackService"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "log",
              "packageAndClassName": "hello.RestbackService"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.RestbackService"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "hello.RestbackService"
            }
          ],
          "methodCalls": [
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "callbackResult",
              "parameterContents": "\"call back: \" + cal2",
              "microserviceName": "rest-service-3",
              "className": "RestbackService",
              "name": "info",
              "packageAndClassName": "hello.RestbackService"
            },
            {
              "url": "/hello6_1?cal2={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "callbackResult",
              "parameterContents": "\"http://rest-service-6:16006/hello6_1?cal2=\" + cal2,Boolean.class",
              "microserviceName": "rest-service-3",
              "className": "RestbackService",
              "name": "getForObject",
              "packageAndClassName": "hello.RestbackService"
            },
            {
              "objectName": "Thread",
              "objectType": "Thread",
              "calledFrom": "callbackResult",
              "parameterContents": "1000L",
              "microserviceName": "rest-service-3",
              "className": "RestbackService",
              "name": "sleep",
              "packageAndClassName": "hello.RestbackService"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "callbackResult",
              "parameterContents": "\"-----------call back complete-------------\"",
              "microserviceName": "rest-service-3",
              "className": "RestbackService",
              "name": "info",
              "packageAndClassName": "hello.RestbackService"
            }
          ],
          "name": "RestbackService",
          "path": "/1-services/rest-service-3/src/main/java/hello/RestbackService.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.myrestservice.sample",
                "artifactId": "rest-service-cluster",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-3",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-3",
              "version": "0.1.0",
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/1-services/rest-service-3/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-3"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 16003
            }
          },
          "name": "application.yml",
          "path": "/1-services/rest-service-3/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-4",
      "path": "/1-services/rest-service-4",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/getdata1",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "String",
              "microserviceName": "rest-service-4",
              "annotations": [
                {
                  "attributes": {
                    "default": "/getdata1"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "getdata1",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello4",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "Value",
              "microserviceName": "rest-service-4",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello4"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello4",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "log",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "EntityManagerFactory",
              "name": "entityManagerFactory",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "hello4",
              "parameterContents": "cal",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello4",
              "parameterContents": "String.valueOf(cal2)",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "hello4",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello3?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello4",
              "parameterContents": "\"http://rest-service-3:16003/hello3?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello4",
              "parameterContents": "value.toString()",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "value",
              "objectType": "Value",
              "calledFrom": "hello4",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "toString",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "getdata1",
              "parameterContents": "\"----------------\"",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManagerFactory",
              "objectType": "EntityManagerFactory",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "createEntityManager",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "begin",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "getTransaction",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "new Event(\"Our very first event!\", new Date())",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "persist",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "new Event(\"A follow up event\", new Date())",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "persist",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "commit",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "getTransaction",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "close",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManagerFactory",
              "objectType": "EntityManagerFactory",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "createEntityManager",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "begin",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "getTransaction",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "getResultList",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "\"from Event\",Event.class",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "createQuery",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getdata1",
              "parameterContents": "\"Event (\" + event.getDate() + \") : \" + event.getTitle()",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "println",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "event",
              "objectType": "Event",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "getDate",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "event",
              "objectType": "Event",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "getTitle",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "commit",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "getTransaction",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "entityManager",
              "objectType": "EntityManager",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "close",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "result",
              "objectType": "Event",
              "calledFrom": "getdata1",
              "parameterContents": "",
              "microserviceName": "rest-service-4",
              "className": "HelloController",
              "name": "toString",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/1-services/rest-service-4/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [
            {
              "parameters": [],
              "returnType": "Long",
              "microserviceName": "rest-service-4",
              "annotations": [
                {
                  "attributes": {
                    "name": "increment",
                    "strategy": "increment"
                  },
                  "name": "GenericGenerator",
                  "packageAndClassName": "hello.Event"
                },
                {
                  "attributes": {},
                  "name": "Id",
                  "packageAndClassName": "hello.Event"
                },
                {
                  "attributes": {
                    "generator": "increment"
                  },
                  "name": "GeneratedValue",
                  "packageAndClassName": "hello.Event"
                }
              ],
              "className": "Event",
              "name": "getId",
              "packageAndClassName": "hello.Event"
            },
            {
              "parameters": [],
              "returnType": "Date",
              "microserviceName": "rest-service-4",
              "annotations": [
                {
                  "attributes": {
                    "name": "EVENT_DATE"
                  },
                  "name": "Column",
                  "packageAndClassName": "hello.Event"
                },
                {
                  "attributes": {},
                  "name": "Temporal",
                  "packageAndClassName": "hello.Event"
                }
              ],
              "className": "Event",
              "name": "getDate",
              "packageAndClassName": "hello.Event"
            },
            {
              "parameters": [
                {
                  "type": "Long",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "hello.Event"
                }
              ],
              "returnType": "void",
              "microserviceName": "rest-service-4",
              "annotations": [],
              "className": "Event",
              "name": "setId",
              "packageAndClassName": "hello.Event"
            },
            {
              "parameters": [],
              "returnType": "String",
              "microserviceName": "rest-service-4",
              "annotations": [],
              "className": "Event",
              "name": "getTitle",
              "packageAndClassName": "hello.Event"
            },
            {
              "parameters": [
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "hello.Event"
                }
              ],
              "returnType": "void",
              "microserviceName": "rest-service-4",
              "annotations": [],
              "className": "Event",
              "name": "setDate",
              "packageAndClassName": "hello.Event"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "title",
                  "packageAndClassName": "hello.Event"
                }
              ],
              "returnType": "void",
              "microserviceName": "rest-service-4",
              "annotations": [],
              "className": "Event",
              "name": "setTitle",
              "packageAndClassName": "hello.Event"
            }
          ],
          "fields": [
            {
              "type": "Long",
              "name": "id",
              "packageAndClassName": "hello.Event"
            },
            {
              "type": "String",
              "name": "title",
              "packageAndClassName": "hello.Event"
            },
            {
              "type": "Date",
              "name": "date",
              "packageAndClassName": "hello.Event"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "EVENTS"
              },
              "name": "Table",
              "packageAndClassName": "hello.Event"
            },
            {
              "attributes": {},
              "name": "Entity",
              "packageAndClassName": "hello.Event"
            }
          ],
          "methodCalls": [],
          "name": "Event",
          "path": "/1-services/rest-service-4/src/main/java/hello/Event.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-4"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 16004
            }
          },
          "name": "application.yml",
          "path": "/1-services/rest-service-4/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.myrestservice.sample",
                "artifactId": "rest-service-cluster",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-4",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-4",
              "version": "0.1.0",
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  },
                  {
                    "groupId": "org.hibernate",
                    "artifactId": "hibernate-core",
                    "version": "5.2.10.Final"
                  },
                  {
                    "groupId": "org.slf4j",
                    "artifactId": "slf4j-simple",
                    "version": "1.7.5"
                  },
                  {
                    "groupId": "junit",
                    "artifactId": "junit",
                    "version": 4.12
                  },
                  {
                    "groupId": "com.h2database",
                    "artifactId": "h2",
                    "version": "1.3.176"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java",
                    "version": "5.1.43"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/1-services/rest-service-4/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-5",
      "path": "/1-services/rest-service-5",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/monitor",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "String",
              "microserviceName": "rest-service-5",
              "annotations": [
                {
                  "attributes": {
                    "default": "/monitor"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "monitor",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello5",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "Value",
              "microserviceName": "rest-service-5",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello5"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello5",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "log",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "hello5",
              "parameterContents": "Double.valueOf(cal) + 3",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "abs",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "hello5",
              "parameterContents": "cal",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello5",
              "parameterContents": "String.valueOf(cal2)",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "hello5",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello4?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello5",
              "parameterContents": "\"http://rest-service-4:16004/hello4?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello5",
              "parameterContents": "value.toString()",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "value",
              "objectType": "Value",
              "calledFrom": "hello5",
              "parameterContents": "",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "toString",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "monitor",
              "parameterContents": "Double.valueOf(cal) + 3",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "abs",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "monitor",
              "parameterContents": "cal",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "monitor",
              "parameterContents": "String.valueOf(cal2)",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "monitor",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "monitor",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-5",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/1-services/rest-service-5/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.myrestservice.sample",
                "artifactId": "rest-service-cluster",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": [
                    {
                      "groupId": "org.springframework.boot",
                      "artifactId": "spring-boot-maven-plugin"
                    },
                    {
                      "configuration": {
                        "useSystemClassLoader": false
                      },
                      "groupId": "org.apache.maven.plugins",
                      "artifactId": "maven-surefire-plugin"
                    }
                  ]
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-5",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-5",
              "version": "0.1.0",
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-webflux",
                    "version": "2.0.0.M3"
                  },
                  {
                    "groupId": "io.projectreactor",
                    "artifactId": "reactor-core",
                    "version": "3.0.0.RC2"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/1-services/rest-service-5/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-5"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 16005
            }
          },
          "name": "application.yml",
          "path": "/1-services/rest-service-5/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-6",
      "path": "/1-services/rest-service-6",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/hello6",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "Value",
              "microserviceName": "rest-service-6",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello6"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello6",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello6_1",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal2"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.HelloController"
                    }
                  ],
                  "name": "cal2",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "returnType": "Boolean",
              "microserviceName": "rest-service-6",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello6_1"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello6_1",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "log",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "hello6",
              "parameterContents": "Double.valueOf(cal)",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "abs",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "hello6",
              "parameterContents": "cal",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello6",
              "parameterContents": "String.valueOf(cal2)",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "hello6",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello5?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello6",
              "parameterContents": "\"http://rest-service-5:16005/hello5?cal=\" + cal,Value.class",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello4?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello6",
              "parameterContents": "\"http://rest-service-4:16004/hello4?cal=\" + cal,Value.class",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello5?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello6",
              "parameterContents": "\"http://rest-service-5:16005/hello5?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello4?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello6",
              "parameterContents": "\"http://rest-service-4:16004/hello4?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "url": "/hello3?cal={?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello6",
              "parameterContents": "\"http://rest-service-3:16003/hello3?cal=\" + cal2,Value.class",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello6",
              "parameterContents": "value.toString()",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "value",
              "objectType": "Value",
              "calledFrom": "hello6",
              "parameterContents": "",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "toString",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello6",
              "parameterContents": "\"=============end================\"",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "hello6_1",
              "parameterContents": "Double.valueOf(cal2) * 2 - 100",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "abs",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "hello6_1",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "valueOf",
              "packageAndClassName": "hello.HelloController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "hello6_1",
              "parameterContents": "\"---------callback--------\" + calx",
              "microserviceName": "rest-service-6",
              "className": "HelloController",
              "name": "info",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/1-services/rest-service-6/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-6"
              },
              "rabbitmq": {
                "host": "rabbitmq"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              },
              "cloud": {
                "stream": {
                  "bindings": {
                    "input": {
                      "destination": "my-rest-service-queue-1",
                      "contentType": "text/plain",
                      "binder": "rabbit"
                    }
                  }
                }
              }
            },
            "server": {
              "port": 16006
            }
          },
          "name": "application.yml",
          "path": "/1-services/rest-service-6/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.myrestservice.sample",
                "artifactId": "rest-service-cluster",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-6",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-6",
              "version": "0.1.0",
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.cloud",
                    "artifactId": "spring-cloud-stream",
                    "version": "1.2.0.RELEASE"
                  },
                  {
                    "groupId": "org.springframework.cloud",
                    "artifactId": "spring-cloud-stream-binder-rabbit",
                    "version": "1.2.0.RELEASE"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/1-services/rest-service-6/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-end",
      "path": "/1-services/rest-service-end",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/greeting",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.GreetingController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.GreetingController"
                }
              ],
              "returnType": "Greeting",
              "microserviceName": "rest-service-end",
              "annotations": [
                {
                  "attributes": {
                    "default": "/greeting"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.GreetingController"
                }
              ],
              "className": "GreetingController",
              "name": "greeting",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "url": "/test",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "50",
                        "value": "cal"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.GreetingController"
                    }
                  ],
                  "name": "cal",
                  "packageAndClassName": "hello.GreetingController"
                }
              ],
              "returnType": "String",
              "microserviceName": "rest-service-end",
              "annotations": [
                {
                  "attributes": {
                    "default": "/test"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.GreetingController"
                }
              ],
              "className": "GreetingController",
              "name": "test",
              "packageAndClassName": "hello.GreetingController"
            }
          ],
          "fields": [
            {
              "type": "MsgSendingBean",
              "name": "sendingBean",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "type": "Logger",
              "name": "log",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "type": "AtomicLong",
              "name": "counter",
              "packageAndClassName": "hello.GreetingController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.GreetingController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "greeting",
              "parameterContents": "Double.valueOf(cal) - 50",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "abs",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "greeting",
              "parameterContents": "cal",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "valueOf",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "greeting",
              "parameterContents": "String.valueOf(cal2)",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "info",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "greeting",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "valueOf",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "greeting",
              "parameterContents": "\"message 1\"",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "info",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "sendingBean",
              "objectType": "MsgSendingBean",
              "calledFrom": "greeting",
              "parameterContents": "\"message 1:\" + cal2",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "sayHello",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "greeting",
              "parameterContents": "\"message 2\"",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "info",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "sendingBean",
              "objectType": "MsgSendingBean",
              "calledFrom": "greeting",
              "parameterContents": "\"message 2:\" + cal2 * 2",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "sayHello",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "greeting",
              "parameterContents": "\"message 3\"",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "info",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "sendingBean",
              "objectType": "MsgSendingBean",
              "calledFrom": "greeting",
              "parameterContents": "\"message 3:\" + cal2 * 3",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "sayHello",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "counter",
              "objectType": "AtomicLong",
              "calledFrom": "greeting",
              "parameterContents": "",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "incrementAndGet",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "greeting",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "valueOf",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "greeting",
              "parameterContents": "\"--------service end-----------\"",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "info",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "log",
              "objectType": "Logger",
              "calledFrom": "greeting",
              "parameterContents": "value.toString()",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "info",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "value",
              "objectType": "Greeting",
              "calledFrom": "greeting",
              "parameterContents": "",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "toString",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "test",
              "parameterContents": "Double.valueOf(cal) - 50",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "abs",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "test",
              "parameterContents": "cal",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "valueOf",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "test",
              "parameterContents": "cal2",
              "microserviceName": "rest-service-end",
              "className": "GreetingController",
              "name": "valueOf",
              "packageAndClassName": "hello.GreetingController"
            }
          ],
          "name": "GreetingController",
          "path": "/1-services/rest-service-end/src/main/java/hello/GreetingController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-end"
              },
              "rabbitmq": {
                "host": "rabbitmq"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              },
              "cloud": {
                "stream": {
                  "bindings": {
                    "output": {
                      "destination": "my-rest-service-queue-1",
                      "contentType": "text/plain",
                      "binder": "rabbit"
                    }
                  }
                }
              }
            },
            "server": {
              "port": 16000
            }
          },
          "name": "application.yml",
          "path": "/1-services/rest-service-end/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "pluginRepositories": {
                "pluginRepository": {
                  "id": "spring-releases",
                  "url": "https://repo.spring.io/libs-release"
                }
              },
              "parent": {
                "relativePath": "../",
                "groupId": "org.myrestservice.sample",
                "artifactId": "rest-service-cluster",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "version": "0.1.0",
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.cloud",
                    "artifactId": "spring-cloud-stream",
                    "version": "1.2.0.RELEASE"
                  },
                  {
                    "groupId": "org.springframework.cloud",
                    "artifactId": "spring-cloud-stream-binder-rabbit",
                    "version": "1.2.0.RELEASE"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.jayway.jsonpath",
                    "scope": "test",
                    "artifactId": "json-path"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "rest-service-end",
              "artifactId": "rest-service-end",
              "properties": {
                "java.version": 1.8
              }
            }
          },
          "name": "pom.xml",
          "path": "/1-services/rest-service-end/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "akka-quickstart-java",
      "path": "/akka-quickstart-java",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "build": {
                "plugins": {
                  "plugin": [
                    {
                      "configuration": {
                        "source": 1.8,
                        "target": 1.8
                      },
                      "groupId": "org.apache.maven.plugins",
                      "artifactId": "maven-compiler-plugin",
                      "version": "3.5.1"
                    },
                    {
                      "configuration": {
                        "arguments": {
                          "argument": [
                            "-classpath",
                            "com.lightbend.akka.sample.AkkaQuickstart"
                          ],
                          "classpath": ""
                        },
                        "executable": "java"
                      },
                      "groupId": "org.codehaus.mojo",
                      "artifactId": "exec-maven-plugin",
                      "version": "1.6.0"
                    }
                  ]
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "hello-akka-java",
              "artifactId": "app",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "com.typesafe.akka",
                    "artifactId": "akka-actor_2.12",
                    "version": "2.5.2"
                  },
                  {
                    "groupId": "com.typesafe.akka",
                    "artifactId": "akka-testkit_2.12",
                    "version": "2.5.2"
                  },
                  {
                    "groupId": "junit",
                    "artifactId": "junit",
                    "version": 4.12
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/akka-quickstart-java/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "repositories": {
              "repositories": [
                "jcenter()",
                "mavenLocal()"
              ]
            },
            "dependencies": {
              "dependencies": [
                "compile 'com.typesafe.akka:akka-actor_2.12:2.5.2'",
                "testCompile 'com.typesafe.akka:akka-testkit_2.12:2.5.2'",
                "testCompile 'junit:junit:4.12'"
              ]
            },
            "mainClassName": "\"com.lightbend.akka.sample.AkkaQuickstart\"",
            "run": {
              "standardInput": "System.in"
            }
          },
          "name": "build.gradle",
          "path": "/akka-quickstart-java/build.gradle",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-1",
      "path": "/kubernetes-services/rest-service-1",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/hello",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "rest-service-1",
              "annotations": [
                {
                  "attributes": {
                    "value": "/hello"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "url": "/hello",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello",
              "parameterContents": "\"http://rest-service-2:16002/hello\",String.class",
              "microserviceName": "rest-service-1",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/kubernetes-services/rest-service-1/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-1"
              }
            },
            "server": {
              "port": 16001
            }
          },
          "name": "application.yml",
          "path": "/kubernetes-services/rest-service-1/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "fdse.jichao",
                "artifactId": "kubernetes-services",
                "version": 1
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-1",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-1",
              "version": 1,
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/kubernetes-services/rest-service-1/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-2",
      "path": "/kubernetes-services/rest-service-2",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/hello",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "rest-service-2",
              "annotations": [
                {
                  "attributes": {
                    "value": "/hello"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello2",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "Thread",
              "objectType": "Thread",
              "calledFrom": "hello2",
              "parameterContents": "3000",
              "microserviceName": "rest-service-2",
              "className": "HelloController",
              "name": "sleep",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/kubernetes-services/rest-service-2/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-2"
              }
            },
            "server": {
              "port": 16002
            }
          },
          "name": "application.yml",
          "path": "/kubernetes-services/rest-service-2/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "fdse.jichao",
                "artifactId": "kubernetes-services",
                "version": 1
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-2",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-2",
              "version": 1,
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/kubernetes-services/rest-service-2/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-3",
      "path": "/kubernetes-services/rest-service-3",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/hello",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "rest-service-3",
              "annotations": [
                {
                  "attributes": {
                    "value": "/hello"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.HelloController"
                }
              ],
              "className": "HelloController",
              "name": "hello",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "methodCalls": [
            {
              "url": "/hello",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "hello",
              "parameterContents": "\"http://rest-service-1:16001/hello\",String.class",
              "microserviceName": "rest-service-3",
              "className": "HelloController",
              "name": "getForObject",
              "packageAndClassName": "hello.HelloController"
            }
          ],
          "name": "HelloController",
          "path": "/kubernetes-services/rest-service-3/src/main/java/hello/HelloController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-service-3"
              }
            },
            "server": {
              "port": 16003
            }
          },
          "name": "application.yml",
          "path": "/kubernetes-services/rest-service-3/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "fdse.jichao",
                "artifactId": "kubernetes-services",
                "version": 1
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "rest-service-3",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "rest-service-3",
              "version": 1,
              "properties": {
                "java.version": 1.8
              },
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "com.fasterxml.jackson.core",
                    "artifactId": "jackson-databind"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/kubernetes-services/rest-service-3/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ms-monitoring-core",
      "path": "/ms-monitoring-core",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "modelVersion": "4.0.0",
              "groupId": "myproject.microservices",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "micro-service-monitoring-core",
              "description": "micro-service-monitoring-core",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "micro-service-monitoring-core",
              "packaging": "jar",
              "version": "0.1.0",
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-websocket",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-configuration-processor",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-actuator",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework.integration",
                    "artifactId": "spring-integration-core",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework",
                    "artifactId": "spring-context"
                  },
                  {
                    "groupId": "org.springframework.data",
                    "artifactId": "spring-data-rest-webmvc",
                    "optional": true
                  },
                  {
                    "groupId": "org.apache.httpcomponents",
                    "artifactId": "httpclient",
                    "optional": true
                  },
                  {
                    "groupId": "org.aspectj",
                    "artifactId": "aspectjrt"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/ms-monitoring-core/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "rest-service-update",
      "path": "/rest-service-update",
      "controllers": [
        {
          "packageName": "hello",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/greeting",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "World",
                        "value": "name"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "hello.GreetingController"
                    }
                  ],
                  "name": "name",
                  "packageAndClassName": "hello.GreetingController"
                }
              ],
              "returnType": "Greeting",
              "microserviceName": "rest-service-update",
              "annotations": [
                {
                  "attributes": {
                    "default": "/greeting"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "hello.GreetingController"
                }
              ],
              "className": "GreetingController",
              "name": "greeting",
              "packageAndClassName": "hello.GreetingController"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "template",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "type": "AtomicLong",
              "name": "counter",
              "packageAndClassName": "hello.GreetingController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "hello.GreetingController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "counter",
              "objectType": "AtomicLong",
              "calledFrom": "greeting",
              "parameterContents": "",
              "microserviceName": "rest-service-update",
              "className": "GreetingController",
              "name": "incrementAndGet",
              "packageAndClassName": "hello.GreetingController"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "greeting",
              "parameterContents": "template,name",
              "microserviceName": "rest-service-update",
              "className": "GreetingController",
              "name": "format",
              "packageAndClassName": "hello.GreetingController"
            }
          ],
          "name": "GreetingController",
          "path": "/rest-service-update/src/main/java/hello/GreetingController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "pluginRepositories": {
                "pluginRepository": {
                  "id": "spring-releases",
                  "url": "https://repo.spring.io/libs-release"
                }
              },
              "parent": {
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-parent",
                "version": "1.4.2.RELEASE"
              },
              "modelVersion": "4.0.0",
              "groupId": "org.springframework",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "version": "0.1.0",
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "scope": "test",
                    "artifactId": "spring-boot-starter-test"
                  },
                  {
                    "groupId": "com.jayway.jsonpath",
                    "scope": "test",
                    "artifactId": "json-path"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "repositories": {
                "travel.repository": {
                  "id": "spring-releases",
                  "url": "https://repo.spring.io/libs-release"
                }
              },
              "artifactId": "rest-travel.service-update",
              "properties": {
                "java.version": 1.8
              }
            }
          },
          "name": "pom.xml",
          "path": "/rest-service-update/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "rest-travel.service-update"
              }
            },
            "server": {
              "port": 15100
            }
          },
          "name": "application.yml",
          "path": "/rest-service-update/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "sample-test-1",
      "path": "/sample-test-1",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "executions": {
                      "execution": {
                        "phase": "package",
                        "configuration": {
                          "transformers": {
                            "transformer": {
                              "mainClass": "example.RemoteDriverTest2",
                              "implementation": "org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"
                            }
                          }
                        },
                        "goals": {
                          "goal": "shade"
                        }
                      }
                    },
                    "groupId": "org.apache.maven.plugins",
                    "artifactId": "maven-shade-plugin",
                    "version": "3.0.0"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "myproject",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "sample-test-1",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.seleniumhq.selenium",
                  "artifactId": "selenium-server",
                  "version": "3.3.1"
                }
              }
            }
          },
          "name": "pom.xml",
          "path": "/sample-test-1/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "spring-transaction-consumer",
      "path": "/spring-transaction-consumer",
      "controllers": [],
      "services": [
        {
          "packageName": "com.springsource.open.foo",
          "implementedTypes": [
            "Handler"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "msg",
                  "packageAndClassName": "com.springsource.open.foo.FooHandler"
                }
              ],
              "returnType": "void",
              "microserviceName": "spring-transaction-consumer",
              "annotations": [
                {
                  "attributes": {
                    "queues": "async"
                  },
                  "name": "RabbitListener",
                  "packageAndClassName": "com.springsource.open.foo.FooHandler"
                }
              ],
              "className": "FooHandler",
              "name": "handle",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "parameters": [],
              "returnType": "int",
              "microserviceName": "spring-transaction-consumer",
              "annotations": [],
              "className": "FooHandler",
              "name": "getItemCount",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "parameters": [],
              "returnType": "void",
              "microserviceName": "spring-transaction-consumer",
              "annotations": [],
              "className": "FooHandler",
              "name": "resetItemCount",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            }
          ],
          "fields": [
            {
              "type": "AtomicInteger",
              "name": "count",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "type": "JdbcTemplate",
              "name": "jdbcTemplate",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "type": "Log",
              "name": "log",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            }
          ],
          "methodCalls": [
            {
              "objectName": "log",
              "objectType": "Log",
              "calledFrom": "handle",
              "parameterContents": "\"Received message: [\" + msg + \"]\"",
              "microserviceName": "spring-transaction-consumer",
              "className": "FooHandler",
              "name": "info",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "objectName": "jdbcTemplate",
              "objectType": "JdbcTemplate",
              "calledFrom": "handle",
              "parameterContents": "\"INSERT INTO T_FOOS (ID, name, foo_date) values (?, ?,?)\",count.getAndIncrement(),msg,date",
              "microserviceName": "spring-transaction-consumer",
              "className": "FooHandler",
              "name": "update",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "objectName": "count",
              "objectType": "AtomicInteger",
              "calledFrom": "handle",
              "parameterContents": "",
              "microserviceName": "spring-transaction-consumer",
              "className": "FooHandler",
              "name": "getAndIncrement",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "objectName": "log",
              "objectType": "Log",
              "calledFrom": "handle",
              "parameterContents": "String.format(\"Inserted foo with name=%s, date=%s\", msg, date)",
              "microserviceName": "spring-transaction-consumer",
              "className": "FooHandler",
              "name": "info",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "objectName": "String",
              "objectType": "String",
              "calledFrom": "handle",
              "parameterContents": "\"Inserted foo with name=%s, date=%s\",msg,date",
              "microserviceName": "spring-transaction-consumer",
              "className": "FooHandler",
              "name": "format",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "objectName": "count",
              "objectType": "AtomicInteger",
              "calledFrom": "resetItemCount",
              "parameterContents": "0",
              "microserviceName": "spring-transaction-consumer",
              "className": "FooHandler",
              "name": "set",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            },
            {
              "objectName": "count",
              "objectType": "AtomicInteger",
              "calledFrom": "getItemCount",
              "parameterContents": "",
              "microserviceName": "spring-transaction-consumer",
              "className": "FooHandler",
              "name": "get",
              "packageAndClassName": "com.springsource.open.foo.FooHandler"
            }
          ],
          "name": "FooHandler",
          "path": "/spring-transaction-consumer/src/main/java/com/springsource/open/foo/FooHandler.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "",
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-parent",
                "version": "1.4.0.RELEASE"
              },
              "modelVersion": "4.0.0",
              "groupId": "com.springsource.open",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd",
              "profiles": {
                "profile": [
                  {
                    "id": "strict",
                    "properties": {
                      "maven.test.failure.ignore": false
                    }
                  },
                  {
                    "id": "fast",
                    "properties": {
                      "maven.test.skip": true
                    }
                  }
                ]
              },
              "description": "Sample project showing message driven transaction \r\nprocessing with Spring with best efforts 1PC.\r\n",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": "2.0.0.CI-SNAPSHOT",
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.hsqldb",
                    "scope": "test",
                    "artifactId": "hsqldb"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-amqp"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-aop"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-jdbc"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "scope": "test",
                    "artifactId": "spring-boot-starter-test"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "name": "Spring Best Efforts JMS-DB",
              "artifactId": "spring-transaction-consumer",
              "properties": {
                "java.version": 1.8,
                "maven.test.failure.ignore": true
              }
            }
          },
          "name": "pom.xml",
          "path": "/spring-transaction-consumer/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "rabbitmq": {
              "image": "rabbitmq:management",
              "ports": [
                "5672:5672",
                "15672:15672"
              ]
            }
          },
          "name": "docker-compose.yml",
          "path": "/spring-transaction-consumer/docker-compose.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "spring-transaction-producer",
      "path": "/spring-transaction-producer",
      "controllers": [],
      "services": [
        {
          "packageName": "sample.atomikos",
          "implementedTypes": [],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "username",
                  "packageAndClassName": "sample.atomikos.AccountService"
                }
              ],
              "returnType": "void",
              "microserviceName": "spring-transaction-producer",
              "annotations": [],
              "className": "AccountService",
              "name": "createAccountAndNotify",
              "packageAndClassName": "sample.atomikos.AccountService"
            }
          ],
          "fields": [
            {
              "type": "JmsTemplate",
              "name": "jmsTemplate",
              "packageAndClassName": "sample.atomikos.AccountService"
            },
            {
              "type": "AccountRepository",
              "name": "accountRepository",
              "packageAndClassName": "sample.atomikos.AccountService"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Transactional",
              "packageAndClassName": "sample.atomikos.AccountService"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "JmsTemplate",
              "calledFrom": "createAccountAndNotify",
              "parameterContents": "\"accounts\",username",
              "microserviceName": "spring-transaction-producer",
              "className": "AccountService",
              "name": "convertAndSend",
              "packageAndClassName": "sample.atomikos.AccountService"
            },
            {
              "objectName": "",
              "objectType": "AccountRepository",
              "calledFrom": "createAccountAndNotify",
              "parameterContents": "new Account(username)",
              "microserviceName": "spring-transaction-producer",
              "className": "AccountService",
              "name": "save",
              "packageAndClassName": "sample.atomikos.AccountService"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "createAccountAndNotify",
              "parameterContents": "username",
              "microserviceName": "spring-transaction-producer",
              "className": "AccountService",
              "name": "equals",
              "packageAndClassName": "sample.atomikos.AccountService"
            }
          ],
          "name": "AccountService",
          "path": "/spring-transaction-producer/src/main/java/sample/atomikos/AccountService.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [
        {
          "packageName": "sample.atomikos",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [
            {
              "parameters": [],
              "returnType": "String",
              "microserviceName": "spring-transaction-producer",
              "annotations": [],
              "className": "Account",
              "name": "getUsername",
              "packageAndClassName": "sample.atomikos.Account"
            }
          ],
          "fields": [
            {
              "type": "Long",
              "name": "id",
              "packageAndClassName": "sample.atomikos.Account"
            },
            {
              "type": "String",
              "name": "username",
              "packageAndClassName": "sample.atomikos.Account"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Entity",
              "packageAndClassName": "sample.atomikos.Account"
            }
          ],
          "methodCalls": [],
          "name": "Account",
          "path": "/spring-transaction-producer/src/main/java/sample/atomikos/Account.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "",
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-parent",
                "version": "1.4.0.RELEASE"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "organization": {
                "name": "Pivotal Software, Inc.",
                "url": "http://www.spring.io"
              },
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "Spring Boot Atomikos JTA Sample",
              "description": "Spring Boot Atomikos JTA Sample",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "spring-transaction-producer",
              "url": "http://projects.spring.io/spring-boot/",
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework",
                    "artifactId": "spring-jms"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-jta-atomikos"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-artemis"
                  },
                  {
                    "groupId": "org.apache.activemq",
                    "artifactId": "artemis-jms-server",
                    "exclusions": {
                      "exclusion": {
                        "groupId": "org.apache.geronimo.specs",
                        "artifactId": "geronimo-jms_2.0_spec"
                      }
                    }
                  },
                  {
                    "groupId": "com.h2database",
                    "artifactId": "h2"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "scope": "test",
                    "artifactId": "spring-boot-starter-test"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/spring-transaction-producer/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-basic-info-service",
      "path": "/ts-admin-basic-info-service",
      "controllers": [
        {
          "packageName": "adminbasic.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/adminbasic/deleteTrain",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TrainInfo2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "t",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/deleteTrain"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deleteTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/getAllConfigs/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "GetAllConfigResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/getAllConfigs/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllConfigs",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/modifyPrice",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PriceInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "pi",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/modifyPrice"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyPrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/getAllStations/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "GetAllStationResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/getAllStations/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllStations",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/addContacts",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Contacts",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "c",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "AddContactsResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/addContacts"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/deleteContacts",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteContactsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "dci",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "DeleteContactsResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/deleteContacts"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deleteContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/modifyTrain",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TrainType",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "t",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/modifyTrain"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/addTrain",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TrainType",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "t",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/addTrain"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/deleteStation",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Station",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "s",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/deleteStation"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deleteStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/addPrice",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PriceInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "pi",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "ReturnSinglePriceConfigResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/addPrice"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addPrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/modifyConfig",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Config",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "c",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/modifyConfig"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/deletePrice",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PriceInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "pi",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/deletePrice"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deletePrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "home",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/modifyStation",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Station",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "s",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/modifyStation"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/addStation",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Station",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "s",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/addStation"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/deleteConfig",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ConfigInfo2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "c",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/deleteConfig"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deleteConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/addConfig",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Config",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "c",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/addConfig"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/modifyContacts",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ModifyContactsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "mci",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "ModifyContactsResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/modifyContacts"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/getAllTrains/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "GetAllTrainResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/getAllTrains/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllTrains",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/getAllContacts/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "GetAllContactsResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/getAllContacts/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/adminbasic/getAllPrices/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "GetAllPriceResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/getAllPrices/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllPrices",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            }
          ],
          "fields": [
            {
              "type": "AdminBasicInfoService",
              "name": "adminBasicInfoService",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"[Admin Basic Info Service][Find All Contacts by admin: \" + id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllContacts",
              "parameterContents": "id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteContacts",
              "parameterContents": "\"[Admin Basic Info Service][Delete Contacts by admin: \" + dci.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "dci",
              "objectType": "DeleteContactsInfo",
              "calledFrom": "deleteContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deleteContacts",
              "parameterContents": "dci.getLoginId(),dci",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deleteContact",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "dci",
              "objectType": "DeleteContactsInfo",
              "calledFrom": "deleteContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyContacts",
              "parameterContents": "\"[Admin Basic Info Service][Modify Contacts by admin: \" + mci.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "mci",
              "objectType": "ModifyContactsInfo",
              "calledFrom": "modifyContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyContacts",
              "parameterContents": "mci.getLoginId(),mci",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyContact",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "mci",
              "objectType": "ModifyContactsInfo",
              "calledFrom": "modifyContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addContacts",
              "parameterContents": "\"[Admin Basic Info Service][Modify Contacts by admin: \" + c.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "c",
              "objectType": "Contacts",
              "calledFrom": "addContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addContacts",
              "parameterContents": "c.getLoginId(),c",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addContact",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "c",
              "objectType": "Contacts",
              "calledFrom": "addContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllStations",
              "parameterContents": "\"[Admin Basic Info Service][Find All Station by admin: \" + id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllStations",
              "parameterContents": "id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllStations",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteStation",
              "parameterContents": "\"[Admin Basic Info Service][Delete Station by admin: \" + s.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "deleteStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deleteStation",
              "parameterContents": "s",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deleteStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyStation",
              "parameterContents": "\"[Admin Basic Info Service][Modify Station by admin: \" + s.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "modifyStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyStation",
              "parameterContents": "s",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addStation",
              "parameterContents": "\"[Admin Basic Info Service][Modify Station by admin: \" + s.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "addStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addStation",
              "parameterContents": "s",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllTrains",
              "parameterContents": "\"[Admin Basic Info Service][Find All Train by admin: \" + id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllTrains",
              "parameterContents": "id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllTrains",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteTrain",
              "parameterContents": "\"[Admin Basic Info Service][Delete Train by admin: \" + t.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "t",
              "objectType": "TrainInfo2",
              "calledFrom": "deleteTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deleteTrain",
              "parameterContents": "t",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deleteTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyTrain",
              "parameterContents": "\"[Admin Basic Info Service][Modify Train by admin: \" + t.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "t",
              "objectType": "TrainType",
              "calledFrom": "modifyTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyTrain",
              "parameterContents": "t",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addTrain",
              "parameterContents": "\"[Admin Basic Info Service][Modify Train by admin: \" + t.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "t",
              "objectType": "TrainType",
              "calledFrom": "addTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addTrain",
              "parameterContents": "t",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllConfigs",
              "parameterContents": "\"[Admin Basic Info Service][Find All Config by admin: \" + id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllConfigs",
              "parameterContents": "id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllConfigs",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteConfig",
              "parameterContents": "\"[Admin Basic Info Service][Delete Config by admin: \" + c.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "c",
              "objectType": "ConfigInfo2",
              "calledFrom": "deleteConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deleteConfig",
              "parameterContents": "c",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deleteConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyConfig",
              "parameterContents": "\"[Admin Basic Info Service][Modify Config by admin: \" + c.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "c",
              "objectType": "Config",
              "calledFrom": "modifyConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyConfig",
              "parameterContents": "c",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addConfig",
              "parameterContents": "\"[Admin Basic Info Service][Modify Config by admin: \" + c.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "c",
              "objectType": "Config",
              "calledFrom": "addConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addConfig",
              "parameterContents": "c",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllPrices",
              "parameterContents": "\"[Admin Basic Info Service][Find All Price by admin: \" + id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllPrices",
              "parameterContents": "id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllPrices",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deletePrice",
              "parameterContents": "\"[Admin Basic Info Service][Delete Price by admin: \" + pi.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "deletePrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deletePrice",
              "parameterContents": "pi",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deletePrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyPrice",
              "parameterContents": "\"[Admin Basic Info Service][Modify Price by admin: \" + pi.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "modifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyPrice",
              "parameterContents": "pi",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyPrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addPrice",
              "parameterContents": "\"[Admin Basic Info Service][Add Price by admin: \" + pi.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "println",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "addPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addPrice",
              "parameterContents": "pi",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addPrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            }
          ],
          "name": "AdminBasicInfoController",
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "adminbasic.service",
          "implementedTypes": [
            "AdminBasicInfoService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "TrainInfo2",
                  "annotations": [],
                  "name": "t",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "deleteTrain",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "GetAllConfigResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "getAllConfigs",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Contacts",
                  "annotations": [],
                  "name": "c",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "AddContactsResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addContact",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "GetAllTrainResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "getAllTrains",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "PriceInfo",
                  "annotations": [],
                  "name": "pi",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "ReturnSinglePriceConfigResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addPrice",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "TrainType",
                  "annotations": [],
                  "name": "t",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addTrain",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "PriceInfo",
                  "annotations": [],
                  "name": "pi",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "deletePrice",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "GetAllStationResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "getAllStations",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Station",
                  "annotations": [],
                  "name": "s",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addStation",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "GetAllPriceResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "getAllPrices",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Config",
                  "annotations": [],
                  "name": "c",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addConfig",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ConfigInfo2",
                  "annotations": [],
                  "name": "ci",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "deleteConfig",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "GetAllContactsResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "getAllContacts",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteContactsInfo",
                  "annotations": [],
                  "name": "dci",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "DeleteContactsResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "deleteContact",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "ModifyContactsInfo",
                  "annotations": [],
                  "name": "mci",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "ModifyContactsResult",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "modifyContact",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "adminID",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "getAllContacts",
              "parameterContents": "loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/contacts/findAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"http://ts-contacts-service:12347/contacts/findAll\",GetAllContactsResult.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllContactsResult",
              "calledFrom": "getAllContacts",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllContactsResult",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"The loginId is Wrong: \" + loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "deleteContact",
              "parameterContents": "loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/contacts/deleteContacts",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteContact",
              "parameterContents": "\"http://ts-contacts-service:12347/contacts/deleteContacts\",dci,DeleteContactsResult.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteContactsResult",
              "calledFrom": "deleteContact",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteContactsResult",
              "calledFrom": "deleteContact",
              "parameterContents": "\"The loginId is Wrong: \" + loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "modifyContact",
              "parameterContents": "loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/contacts/modifyContacts",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyContact",
              "parameterContents": "\"http://ts-contacts-service:12347/contacts/modifyContacts\",mci,ModifyContactsResult.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyContactsResult",
              "calledFrom": "modifyContact",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyContactsResult",
              "calledFrom": "modifyContact",
              "parameterContents": "\"The loginId is Wrong: \" + loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "addContact",
              "parameterContents": "loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/contacts/admincreate",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addContact",
              "parameterContents": "\"http://ts-contacts-service:12347/contacts/admincreate\",c,AddContactsResult.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddContactsResult",
              "calledFrom": "addContact",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddContactsResult",
              "calledFrom": "addContact",
              "parameterContents": "\"The Contact add operation failed.\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "getAllStations",
              "parameterContents": "loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/station/query",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllStations",
              "parameterContents": "\"http://ts-station-service:12345/station/query\",l.getClass()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "l",
              "objectType": "Station",
              "calledFrom": "getAllStations",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getClass",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllStationResult",
              "calledFrom": "getAllStations",
              "parameterContents": "true",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllStationResult",
              "calledFrom": "getAllStations",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllStationResult",
              "calledFrom": "getAllStations",
              "parameterContents": "l",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStationList",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllStationResult",
              "calledFrom": "getAllStations",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllStationResult",
              "calledFrom": "getAllStations",
              "parameterContents": "\"The loginId is Wrong: \" + loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "addStation",
              "parameterContents": "s.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "addStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/station/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addStation",
              "parameterContents": "\"http://ts-station-service:12345/station/create\",s,Boolean.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "deleteStation",
              "parameterContents": "s.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "deleteStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/station/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteStation",
              "parameterContents": "\"http://ts-station-service:12345/station/delete\",s,Boolean.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "modifyStation",
              "parameterContents": "s.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "modifyStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/station/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyStation",
              "parameterContents": "\"http://ts-station-service:12345/station/update\",s,Boolean.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "getAllTrains",
              "parameterContents": "loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/train/query",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllTrains",
              "parameterContents": "\"http://ts-train-service:14567/train/query\",l.getClass()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "l",
              "objectType": "TrainType",
              "calledFrom": "getAllTrains",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getClass",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllTrainResult",
              "calledFrom": "getAllTrains",
              "parameterContents": "true",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllTrainResult",
              "calledFrom": "getAllTrains",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllTrainResult",
              "calledFrom": "getAllTrains",
              "parameterContents": "l",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setTrainList",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllTrainResult",
              "calledFrom": "getAllTrains",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllTrainResult",
              "calledFrom": "getAllTrains",
              "parameterContents": "\"The loginId is wrong:\" + loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "addTrain",
              "parameterContents": "t.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "TrainType",
              "calledFrom": "addTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/train/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addTrain",
              "parameterContents": "\"http://ts-train-service:14567/train/create\",t,Boolean.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "deleteTrain",
              "parameterContents": "t.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "TrainInfo2",
              "calledFrom": "deleteTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/train/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteTrain",
              "parameterContents": "\"http://ts-train-service:14567/train/delete\",t,Boolean.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "modifyTrain",
              "parameterContents": "t.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "TrainType",
              "calledFrom": "modifyTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/train/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyTrain",
              "parameterContents": "\"http://ts-train-service:14567/train/update\",t,Boolean.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "getAllConfigs",
              "parameterContents": "loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/config/queryAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllConfigs",
              "parameterContents": "\"http://ts-config-service:15679/config/queryAll\",l.getClass()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "l",
              "objectType": "Config",
              "calledFrom": "getAllConfigs",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getClass",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllConfigResult",
              "calledFrom": "getAllConfigs",
              "parameterContents": "true",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllConfigResult",
              "calledFrom": "getAllConfigs",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllConfigResult",
              "calledFrom": "getAllConfigs",
              "parameterContents": "l",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setConfigs",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllConfigResult",
              "calledFrom": "getAllConfigs",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllConfigResult",
              "calledFrom": "getAllConfigs",
              "parameterContents": "\"The loginId is wrong:\" + loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "addConfig",
              "parameterContents": "c.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "Config",
              "calledFrom": "addConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/config/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addConfig",
              "parameterContents": "\"http://ts-config-service:15679/config/create\",c,String.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "deleteConfig",
              "parameterContents": "ci.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "ci",
              "objectType": "ConfigInfo2",
              "calledFrom": "deleteConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/config/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteConfig",
              "parameterContents": "\"http://ts-config-service:15679/config/delete\",ci,String.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "modifyConfig",
              "parameterContents": "c.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "Config",
              "calledFrom": "modifyConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/config/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyConfig",
              "parameterContents": "\"http://ts-config-service:15679/config/update\",c,String.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "getAllPrices",
              "parameterContents": "loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/price/queryAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllPrices",
              "parameterContents": "\"http://ts-price-service:16579/price/queryAll\",GetAllPriceResult.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllPrices",
              "parameterContents": "\"[!!!!GetAllPriceResult] \" + result.getPriceConfig()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "println",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllPriceResult",
              "calledFrom": "getAllPrices",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getPriceConfig",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllPriceResult",
              "calledFrom": "getAllPrices",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllPriceResult",
              "calledFrom": "getAllPrices",
              "parameterContents": "\"The loginId is wrong:\" + loginId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "addPrice",
              "parameterContents": "pi.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "addPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/price/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addPrice",
              "parameterContents": "\"http://ts-price-service:16579/price/create\",pi,ReturnSinglePriceConfigResult.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "addPrice",
              "parameterContents": "false",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "addPrice",
              "parameterContents": "\"The loginId is wrong:\" + pi.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "addPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "deletePrice",
              "parameterContents": "pi.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "deletePrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/price/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deletePrice",
              "parameterContents": "\"http://ts-price-service:16579/price/delete\",pi,Boolean.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "adminID",
              "objectType": "String",
              "calledFrom": "modifyPrice",
              "parameterContents": "pi.getLoginId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "modifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/price/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyPrice",
              "parameterContents": "\"http://ts-price-service:16579/price/update\",pi,Boolean.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            }
          ],
          "name": "AdminBasicInfoServiceImpl",
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservices",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-actuator"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-basic-info-service",
              "artifactId": "ts-admin-basic-info-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-basic-info-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18767
            },
            "spring": {
              "application": {
                "name": "ts-admin-basic-info-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-basic-info-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-order-service",
      "path": "/ts-admin-order-service",
      "controllers": [
        {
          "packageName": "adminorder.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/adminorder/deleteOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteOrderRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "DeleteOrderResult",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminorder/deleteOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "deleteOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "url": "/adminorder/updateOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "UpdateOrderRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "UpdateOrderResult",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminorder/updateOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "updateOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "url": "/adminorder/findAll/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "GetAllOrderResult",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminorder/findAll/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "getAllOrders",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "url": "/adminorder/addOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AddOrderRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "AddOrderResult",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminorder/addOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "addOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            }
          ],
          "fields": [
            {
              "type": "AdminOrderService",
              "name": "adminOrderService",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "adminOrderService",
              "objectType": "AdminOrderService",
              "calledFrom": "getAllOrders",
              "parameterContents": "id",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "getAllOrders",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "adminOrderService",
              "objectType": "AdminOrderService",
              "calledFrom": "addOrder",
              "parameterContents": "request",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "addOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "adminOrderService",
              "objectType": "AdminOrderService",
              "calledFrom": "updateOrder",
              "parameterContents": "request",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "updateOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "adminOrderService",
              "objectType": "AdminOrderService",
              "calledFrom": "deleteOrder",
              "parameterContents": "request",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "deleteOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            }
          ],
          "name": "AdminOrderController",
          "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "adminorder.service",
          "implementedTypes": [
            "AdminOrderService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UpdateOrderRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "UpdateOrderResult",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "className": "AdminOrderServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddOrderRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "AddOrderResult",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "className": "AdminOrderServiceImpl",
              "name": "addOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "GetAllOrderResult",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "className": "AdminOrderServiceImpl",
              "name": "getAllOrders",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-order-service",
              "annotations": [],
              "className": "AdminOrderServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteOrderRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "DeleteOrderResult",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "className": "AdminOrderServiceImpl",
              "name": "deleteOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllOrders",
              "parameterContents": "id",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[Admin Order Service][Get All Orders]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/order/findAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"http://ts-order-service:12031/order/findAll\",QueryOrderResult.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "QueryOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[Admin Order Service][Get Orders From ts-order-service successfully!]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "getAllOrders",
              "parameterContents": "result.getOrders()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "addAll",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "QueryOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrders",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[Admin Order Service][Get Orders From ts-order-service fail!]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/orderOther/findAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/findAll\",QueryOrderResult.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "QueryOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[Admin Order Service][Get Orders From ts-order-other-service successfully!]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "getAllOrders",
              "parameterContents": "result.getOrders()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "addAll",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "QueryOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrders",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[Admin Order Service][Get Orders From ts-order-other-service fail!]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "getAllOrderResult",
              "objectType": "GetAllOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "true",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "getAllOrderResult",
              "objectType": "GetAllOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"Get the orders successfully!\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "getAllOrderResult",
              "objectType": "GetAllOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "orders",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setOrders",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[Admin Order Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "false",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllOrderResult",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"The loginId is Wrong: \" + id",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "request.getLoginid()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteOrderRequest",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getLoginid",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "deleteOrderInfo",
              "objectType": "DeleteOrderInfo",
              "calledFrom": "deleteOrder",
              "parameterContents": "request.getOrderId()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteOrderRequest",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "DeleteOrderRequest",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteOrderRequest",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "DeleteOrderRequest",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteOrderRequest",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[Admin Order Service][Delete Order]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/order/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/delete\",deleteOrderInfo,DeleteOrderResult.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[Admin Order Service][Delete Order Other]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/orderOther/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/delete\",deleteOrderInfo,DeleteOrderResult.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[Admin Order Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "false",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"The loginId is Wrong: \" + request.getLoginid()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteOrderRequest",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getLoginid",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "request.getLoginid()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getLoginid",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[Admin Order Service][Update Order]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/order/adminUpdate",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/adminUpdate\",request.getOrder(),UpdateOrderResult.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[Admin Order Service][Add New Order Other]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/orderOther/adminUpdate",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/adminUpdate\",request.getOrder(),UpdateOrderResult.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[Admin Order Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "false",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "\"The loginId is Wrong: \" + request.getLoginid()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateOrderRequest",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getLoginid",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addOrder",
              "parameterContents": "request.getLoginid()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getLoginid",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addOrder",
              "parameterContents": "\"[Admin Order Service][Add New Order]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/order/adminAddOrder",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/adminAddOrder\",request.getOrder(),AddOrderResult.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addOrder",
              "parameterContents": "\"[Admin Order Service][Add New Order Other]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/orderOther/adminAddOrder",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/adminAddOrder\",request.getOrder(),AddOrderResult.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addOrder",
              "parameterContents": "\"[Admin Order Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "println",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addOrder",
              "parameterContents": "false",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addOrder",
              "parameterContents": "\"The loginId is Wrong: \" + request.getLoginid()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddOrderRequest",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getLoginid",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "checkId",
              "parameterContents": "id",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            }
          ],
          "name": "AdminOrderServiceImpl",
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 16112
            },
            "spring": {
              "application": {
                "name": "ts-admin-order-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-order-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-order-service",
              "artifactId": "ts-admin-order-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-order-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-route-service",
      "path": "/ts-admin-route-service",
      "controllers": [
        {
          "packageName": "adminroute.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/adminroute/findAll/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "returnType": "GetRoutesListlResult",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                },
                {
                  "attributes": {
                    "path": "/adminroute/findAll/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "className": "AdminRouteController",
              "name": "getAllRoutes",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "url": "/adminroute/deleteRoute",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteRouteRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "returnType": "DeleteRouteResult",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminroute/deleteRoute"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "className": "AdminRouteController",
              "name": "deleteRoute",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "url": "/adminroute/createAndModifyRoute",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateAndModifyRouteRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "returnType": "CreateAndModifyRouteResult",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminroute/createAndModifyRoute"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "className": "AdminRouteController",
              "name": "addRoute",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            }
          ],
          "fields": [
            {
              "type": "AdminRouteService",
              "name": "adminRouteService",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "adminRouteService",
              "objectType": "AdminRouteService",
              "calledFrom": "getAllRoutes",
              "parameterContents": "id",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "getAllRoutes",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "adminRouteService",
              "objectType": "AdminRouteService",
              "calledFrom": "addRoute",
              "parameterContents": "request",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "createAndModifyRoute",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "adminRouteService",
              "objectType": "AdminRouteService",
              "calledFrom": "deleteRoute",
              "parameterContents": "request",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "deleteRoute",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            }
          ],
          "name": "AdminRouteController",
          "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "adminroute.service",
          "implementedTypes": [
            "AdminRouteService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-route-service",
              "annotations": [],
              "className": "AdminRouteServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CreateAndModifyRouteRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "CreateAndModifyRouteResult",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "className": "AdminRouteServiceImpl",
              "name": "createAndModifyRoute",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "GetRoutesListlResult",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "className": "AdminRouteServiceImpl",
              "name": "getAllRoutes",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteRouteRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "DeleteRouteResult",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "className": "AdminRouteServiceImpl",
              "name": "deleteRoute",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllRoutes",
              "parameterContents": "id",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "url": "/route/queryAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllRoutes",
              "parameterContents": "\"http://ts-route-service:11178/route/queryAll\",GetRoutesListlResult.class",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllRoutes",
              "parameterContents": "\"[Admin Route Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "println",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRoutesListlResult",
              "calledFrom": "getAllRoutes",
              "parameterContents": "false",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRoutesListlResult",
              "calledFrom": "getAllRoutes",
              "parameterContents": "\"The loginId is Wrong: \" + id",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRoutesListlResult",
              "calledFrom": "getAllRoutes",
              "parameterContents": "null",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setRoutes",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "request.getLoginId()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "CreateAndModifyRouteRequest",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "createAndModifyRouteInfo",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "request.getId()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "CreateAndModifyRouteRequest",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "createAndModifyRouteInfo",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "request.getStationList()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setStationList",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "CreateAndModifyRouteRequest",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "createAndModifyRouteInfo",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "request.getDistanceList()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setDistanceList",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "CreateAndModifyRouteRequest",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getDistanceList",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "createAndModifyRouteInfo",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "request.getStartStation()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "CreateAndModifyRouteRequest",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "createAndModifyRouteInfo",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "request.getEndStation()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "CreateAndModifyRouteRequest",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "url": "/route/createAndModify",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "\"http://ts-route-service:11178/route/createAndModify\",createAndModifyRouteInfo,CreateAndModifyRouteResult.class",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "\"[Admin Route Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "println",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateAndModifyRouteResult",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "false",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateAndModifyRouteResult",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "\"The loginId is Wrong: \" + request.getLoginId()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "CreateAndModifyRouteRequest",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateAndModifyRouteResult",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "null",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteRoute",
              "parameterContents": "request.getLoginId()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteRouteRequest",
              "calledFrom": "deleteRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "deleteRouteInfo",
              "objectType": "DeleteRouteInfo",
              "calledFrom": "deleteRoute",
              "parameterContents": "request.getRouteId()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteRouteRequest",
              "calledFrom": "deleteRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "url": "/route/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteRoute",
              "parameterContents": "\"http://ts-route-service:11178/route/delete\",deleteRouteInfo,DeleteRouteResult.class",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteRoute",
              "parameterContents": "\"[Admin Route Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "println",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteRouteResult",
              "calledFrom": "deleteRoute",
              "parameterContents": "false",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteRouteResult",
              "calledFrom": "deleteRoute",
              "parameterContents": "\"The loginId is Wrong: \" + request.getLoginId()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteRouteRequest",
              "calledFrom": "deleteRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "checkId",
              "parameterContents": "id",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            }
          ],
          "name": "AdminRouteServiceImpl",
          "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-route-service",
              "artifactId": "ts-admin-route-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-route-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 16113
            },
            "spring": {
              "application": {
                "name": "ts-admin-route-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-route-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-travel-service",
      "path": "/ts-admin-travel-service",
      "controllers": [
        {
          "packageName": "admintravel.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/admintravel/findAll/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "AdminFindAllResult",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                },
                {
                  "attributes": {
                    "path": "/admintravel/findAll/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "getAllTravels",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "url": "/admintravel/addTravel",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AddAndModifyTravelRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "ResponseBean",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/admintravel/addTravel"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "addTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "url": "/admintravel/deleteTravel",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteTravelRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "ResponseBean",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/admintravel/deleteTravel"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "deleteTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "url": "/admintravel/updateTravel",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AddAndModifyTravelRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "ResponseBean",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/admintravel/updateTravel"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "updateTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            }
          ],
          "fields": [
            {
              "type": "AdminTravelService",
              "name": "adminTravelService",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "adminTravelService",
              "objectType": "AdminTravelService",
              "calledFrom": "getAllTravels",
              "parameterContents": "id",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getAllTravels",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "adminTravelService",
              "objectType": "AdminTravelService",
              "calledFrom": "addTravel",
              "parameterContents": "request",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "addTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "adminTravelService",
              "objectType": "AdminTravelService",
              "calledFrom": "updateTravel",
              "parameterContents": "request",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "updateTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "adminTravelService",
              "objectType": "AdminTravelService",
              "calledFrom": "deleteTravel",
              "parameterContents": "request",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "deleteTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            }
          ],
          "name": "AdminTravelController",
          "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "admintravel.service",
          "implementedTypes": [
            "AdminTravelService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [],
              "className": "AdminTravelServiceImpl",
              "name": "checkId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "AdminFindAllResult",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "className": "AdminTravelServiceImpl",
              "name": "getAllTravels",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddAndModifyTravelRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "ResponseBean",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "className": "AdminTravelServiceImpl",
              "name": "addTravel",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteTravelRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "ResponseBean",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "className": "AdminTravelServiceImpl",
              "name": "deleteTravel",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllTravels",
              "parameterContents": "id",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "checkId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[Admin Travel Service][Get All Travels]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/travel/adminQueryAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"http://ts-travel-service:12346/travel/adminQueryAll\",AdminFindAllResult.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[Admin Travel Service][Get Travel From ts-travel-service successfully!]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "AdminTrip",
              "calledFrom": "getAllTravels",
              "parameterContents": "result.getTrips()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "addAll",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTrips",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[Admin Travel Service][Get Travel From ts-travel-service fail!]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/travel2/adminQueryAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/adminQueryAll\",AdminFindAllResult.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[Admin Travel Service][Get Travel From ts-travel2-service successfully!]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "AdminTrip",
              "calledFrom": "getAllTravels",
              "parameterContents": "result.getTrips()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "addAll",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTrips",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[Admin Travel Service][Get Travel From ts-travel2-service fail!]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "getAllTravels",
              "parameterContents": "trips",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setTrips",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "getAllTravels",
              "parameterContents": "false",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"Admin find all travel result fail: wrong login id\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "getAllTravels",
              "parameterContents": "null",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setTrips",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addTravel",
              "parameterContents": "request.getLoginId()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "checkId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "addTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "addTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/travel/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addTravel",
              "parameterContents": "\"http://ts-travel-service:12346/travel/create\",request,String.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/travel2/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addTravel",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/create\",request,String.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addTravel",
              "parameterContents": "\"[Admin Travel Service][Admin add new travel]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "addTravel",
              "parameterContents": "true",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addTravel",
              "parameterContents": "\"[Admin Travel Service][Admin add new travel fail]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "addTravel",
              "parameterContents": "false",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "addTravel",
              "parameterContents": "result",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateTravel",
              "parameterContents": "request.getLoginId()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "checkId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "updateTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "updateTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddAndModifyTravelRequest",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/travel/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateTravel",
              "parameterContents": "\"http://ts-travel-service:12346/travel/update\",request,String.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/travel2/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateTravel",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/update\",request,String.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateTravel",
              "parameterContents": "\"[Admin Travel Service][Admin update travel]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "updateTravel",
              "parameterContents": "true",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateTravel",
              "parameterContents": "\"[Admin Travel Service][Admin update travel fail]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "updateTravel",
              "parameterContents": "false",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "updateTravel",
              "parameterContents": "result",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteTravel",
              "parameterContents": "request.getLoginId()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "checkId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteTravelRequest",
              "calledFrom": "deleteTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "DeleteTravelRequest",
              "calledFrom": "deleteTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteTravelRequest",
              "calledFrom": "deleteTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "DeleteTravelRequest",
              "calledFrom": "deleteTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteTravelRequest",
              "calledFrom": "deleteTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/travel/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"http://ts-travel-service:12346/travel/delete\",request,String.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/travel2/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/delete\",request,String.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"[Admin Travel Service][Admin delete travel]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "deleteTravel",
              "parameterContents": "true",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"[Admin Travel Service][Admin delete travel fail]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "println",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "deleteTravel",
              "parameterContents": "false",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "responseBean",
              "objectType": "ResponseBean",
              "calledFrom": "deleteTravel",
              "parameterContents": "result",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "checkId",
              "parameterContents": "id",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "equals",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            }
          ],
          "name": "AdminTravelServiceImpl",
          "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-travel-service",
              "artifactId": "ts-admin-travel-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-travel-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 16114
            },
            "spring": {
              "application": {
                "name": "ts-admin-travel-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-travel-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-user-service",
      "path": "/ts-admin-user-service",
      "controllers": [
        {
          "packageName": "adminuser.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/adminuser/findAll/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "FindAllAccountResult",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminuser/findAll/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "getAllUsers",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "url": "/adminuser/addUser",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AddAccountRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "RegisterResult",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminuser/addUser"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "addUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "url": "/adminuser/updateUser",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "UpdateAccountRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "ModifyAccountResult",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminuser/updateUser"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "updateOrder",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "url": "/adminuser/deleteUser",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteAccountRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "DeleteAccountResult",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminuser/deleteUser"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "deleteOrder",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            }
          ],
          "fields": [
            {
              "type": "AdminUserService",
              "name": "adminUserService",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "adminUserService",
              "objectType": "AdminUserService",
              "calledFrom": "getAllUsers",
              "parameterContents": "id",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "getAllUsers",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "adminUserService",
              "objectType": "AdminUserService",
              "calledFrom": "addUser",
              "parameterContents": "request",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "addUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "adminUserService",
              "objectType": "AdminUserService",
              "calledFrom": "updateOrder",
              "parameterContents": "request",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "updateUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "adminUserService",
              "objectType": "AdminUserService",
              "calledFrom": "deleteOrder",
              "parameterContents": "request",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "deleteUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            }
          ],
          "name": "AdminUserController",
          "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "adminuser.service",
          "implementedTypes": [
            "AdminUserService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UpdateAccountRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "ModifyAccountResult",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "className": "AdminUserServiceImpl",
              "name": "updateUser",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-admin-user-service",
              "annotations": [],
              "className": "AdminUserServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddAccountRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "RegisterResult",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "className": "AdminUserServiceImpl",
              "name": "addUser",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteAccountRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "DeleteAccountResult",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "className": "AdminUserServiceImpl",
              "name": "deleteUser",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "FindAllAccountResult",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "className": "AdminUserServiceImpl",
              "name": "getAllUsers",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllUsers",
              "parameterContents": "id",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"[Admin User Service][Get All Users]\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "println",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "url": "/account/findAll",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"http://ts-sso-service:12349/account/findAll\",FindAllAccountResult.class",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"[Admin User Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "println",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "FindAllAccountResult",
              "calledFrom": "getAllUsers",
              "parameterContents": "false",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "FindAllAccountResult",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"The loginId is Wrong: \" + id",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteUser",
              "parameterContents": "request.getLoginId()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteAccountRequest",
              "calledFrom": "deleteUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "adminDeleteAccountRequest",
              "objectType": "AdminDeleteAccountRequest",
              "calledFrom": "deleteUser",
              "parameterContents": "request.getAccountId()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteAccountRequest",
              "calledFrom": "deleteUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "url": "/account/admindelete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteUser",
              "parameterContents": "\"http://ts-sso-service:12349/account/admindelete\",adminDeleteAccountRequest,DeleteAccountResult.class",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteUser",
              "parameterContents": "\"[Admin User Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "println",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteAccountResult",
              "calledFrom": "deleteUser",
              "parameterContents": "false",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteAccountResult",
              "calledFrom": "deleteUser",
              "parameterContents": "\"The loginId is Wrong: \" + request.getLoginId()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "DeleteAccountRequest",
              "calledFrom": "deleteUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "request.getLoginId()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateAccountRequest",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "url": "/account/modify",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateUser",
              "parameterContents": "\"http://ts-sso-service:12349/account/modify\",request.getModifyAccountInfo(),ModifyAccountResult.class",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateAccountRequest",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getModifyAccountInfo",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateUser",
              "parameterContents": "\"[Admin User Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "println",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyAccountResult",
              "calledFrom": "updateUser",
              "parameterContents": "false",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyAccountResult",
              "calledFrom": "updateUser",
              "parameterContents": "\"The loginId is Wrong: \" + request.getLoginId()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "UpdateAccountRequest",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addUser",
              "parameterContents": "request.getLoginId()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "checkId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddAccountRequest",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "url": "/account/register",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addUser",
              "parameterContents": "\"http://ts-sso-service:12349/account/register\",request,RegisterResult.class",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addUser",
              "parameterContents": "\"[Admin User Service][Wrong Admin ID]\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "println",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "RegisterResult",
              "calledFrom": "addUser",
              "parameterContents": "false",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "RegisterResult",
              "calledFrom": "addUser",
              "parameterContents": "\"The loginId is Wrong: \" + request.getLoginId()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "AddAccountRequest",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "checkId",
              "parameterContents": "id",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "equals",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            }
          ],
          "name": "AdminUserServiceImpl",
          "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 16115
            },
            "spring": {
              "application": {
                "name": "ts-admin-user-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-user-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-user-service",
              "artifactId": "ts-admin-user-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-user-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-assurance-service",
      "path": "/ts-assurance-service",
      "controllers": [
        {
          "packageName": "assurance.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/assurance/deleteAssuranceByOrderId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "value": "orderId"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "DeleteAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurance/deleteAssuranceByOrderId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "deleteAssuranceByOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/assurance/getAssuranceById",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "GetAssuranceById",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "gabi",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "Assurance",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurance/getAssuranceById"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "getAssuranceById",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/assurance/findAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "GetAllAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/assurance/findAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "getAllAssurances",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/assurance/getAllAssuranceType",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<AssuranceTypeBean>",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurance/getAllAssuranceType"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "getAllAssuranceType",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/assurance/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AddAssuranceInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "addAssuranceInfo",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "AddAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/assurance/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "createNewAssurance",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "home",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/assurance/deleteAssurance",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "value": "assuranceId"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "assuranceId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "DeleteAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurance/deleteAssurance"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "deleteAssurance",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [],
              "className": "AssuranceController",
              "name": "verifySsoLogin",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/assurance/modifyAssurance",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ModifyAssuranceInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "modifyAssuranceInfo",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "ModifyAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurance/modifyAssurance"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "modifyAssurance",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/assurance/findAssuranceByOrderId",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "FindAssuranceByOrderId",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "gabi",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "Assurance",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/assurance/findAssuranceByOrderId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "findAssuranceByOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            }
          ],
          "fields": [
            {
              "type": "AssuranceService",
              "name": "assuranceService",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "assurance.controller.AssuranceController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "assurance.controller.AssuranceController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllAssurances",
              "parameterContents": "\"[Assurances Service][Get All Assurances]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "println",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "getAllAssurances",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllAssuranceType",
              "parameterContents": "\"[Assurances Service][Get Assurance Type]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "println",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "getAllAssuranceType",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "getAllAssuranceTypes",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteAssurance",
              "parameterContents": "\"[Assurances Service][Delete Assurance]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "println",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "deleteAssurance",
              "parameterContents": "UUID.fromString(assuranceId)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "deleteById",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteAssurance",
              "parameterContents": "assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "fromString",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteAssuranceByOrderId",
              "parameterContents": "\"[Assurances Service][Delete Assurance by orderId]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "println",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "deleteAssuranceByOrderId",
              "parameterContents": "UUID.fromString(orderId)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "deleteByOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteAssuranceByOrderId",
              "parameterContents": "orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "fromString",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyAssurance",
              "parameterContents": "\"[Assurances Service][Modify Assurance]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "println",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "modifyAssurance",
              "parameterContents": "modifyAssuranceInfo",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "modify",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "createNewAssurance",
              "parameterContents": "addAssuranceInfo",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "create",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "getAssuranceById",
              "parameterContents": "UUID.fromString(gabi.getAssuranceId())",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "findAssuranceById",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getAssuranceById",
              "parameterContents": "gabi.getAssuranceId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "fromString",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "gabi",
              "objectType": "GetAssuranceById",
              "calledFrom": "getAssuranceById",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "getAssuranceId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "UUID.fromString(gabi.getOrderId())",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "findAssuranceByOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "gabi.getOrderId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "fromString",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "gabi",
              "objectType": "FindAssuranceByOrderId",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "getOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"[Assurance Service][Verify Login] Verifying....\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "println",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"http://ts-sso-service:12349/verifyLoginToken/\" + loginToken,VerifyResult.class",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "getForObject",
              "packageAndClassName": "assurance.controller.AssuranceController"
            }
          ],
          "name": "AssuranceController",
          "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "assurance.service",
          "implementedTypes": [
            "AssuranceService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "returnType": "Assurance",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "findAssuranceById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "assuranceId",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "returnType": "DeleteAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddAssuranceInfo",
                  "annotations": [],
                  "name": "aai",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "returnType": "AddAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "create",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "List<AssuranceTypeBean>",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "getAllAssuranceTypes",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ModifyAssuranceInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "returnType": "ModifyAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "modify",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "GetAllAssuranceResult",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "getAllAssurances",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "AssuranceRepository",
              "name": "assuranceRepository",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "findAssuranceById",
              "parameterContents": "id",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "create",
              "parameterContents": "UUID.fromString(aai.getOrderId())",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "aai.getOrderId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aai",
              "objectType": "AddAssuranceInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "AssuranceType",
              "objectType": "Solving AssuranceType",
              "calledFrom": "create",
              "parameterContents": "aai.getTypeIndex()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getTypeByIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aai",
              "objectType": "AddAssuranceInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getTypeIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Assurance-Add&Delete-Service][AddAssurance] Fail.Assurance already exists\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "false",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "\"Assurance Already Exists\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "null",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setAssurance",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Assurance-Add&Delete-Service][AddAssurance] Fail.Assurance type doesn't exist\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "false",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "\"Assurance type doesn't exist\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "null",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setAssurance",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "aai.getOrderId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aai",
              "objectType": "AddAssuranceInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "create",
              "parameterContents": "assurance",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "save",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Assurance-Add&Delete-Service][AddAssurance] Success.\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "true",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "aar",
              "objectType": "AddAssuranceResult",
              "calledFrom": "create",
              "parameterContents": "assurance",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setAssurance",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "deleteById",
              "parameterContents": "assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "deleteById",
              "parameterContents": "assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteById",
              "parameterContents": "\"[Assurance-Add&Delete-Service][DeleteAssurance] Success.\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "dar",
              "objectType": "DeleteAssuranceResult",
              "calledFrom": "deleteById",
              "parameterContents": "true",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "dar",
              "objectType": "DeleteAssuranceResult",
              "calledFrom": "deleteById",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteById",
              "parameterContents": "\"[Assurance-Add&Delete-Service][DeleteAssurance] Fail.Assurance not clear.\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "dar",
              "objectType": "DeleteAssuranceResult",
              "calledFrom": "deleteById",
              "parameterContents": "false",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "dar",
              "objectType": "DeleteAssuranceResult",
              "calledFrom": "deleteById",
              "parameterContents": "\"Reason Not clear\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "removeAssuranceByOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "\"[Assurance-Add&Delete-Service][DeleteAssurance] Success.\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "dar",
              "objectType": "DeleteAssuranceResult",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "true",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "dar",
              "objectType": "DeleteAssuranceResult",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "\"[Assurance-Add&Delete-Service][DeleteAssurance] Fail.Assurance not clear.\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "dar",
              "objectType": "DeleteAssuranceResult",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "false",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "dar",
              "objectType": "DeleteAssuranceResult",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "\"Reason Not clear\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modify",
              "parameterContents": "UUID.fromString(info.getAssuranceId())",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findAssuranceById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "modify",
              "parameterContents": "info.getAssuranceId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyAssuranceInfo",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getAssuranceId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modify",
              "parameterContents": "\"[Assurance-Modify-Service][ModifyAssurance] Fail.Assurance not found.\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "false",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "\"Contacts not found\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "null",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setAssurance",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "AssuranceType",
              "objectType": "Solving AssuranceType",
              "calledFrom": "modify",
              "parameterContents": "info.getTypeIndex()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getTypeByIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyAssuranceInfo",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getTypeIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "oldAssurance",
              "objectType": "Assurance",
              "calledFrom": "modify",
              "parameterContents": "at",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setType",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "modify",
              "parameterContents": "oldAssurance",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "save",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modify",
              "parameterContents": "\"[Assurance-Modify-Service][ModifyAssurance] Success.\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "true",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "oldAssurance",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setAssurance",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modify",
              "parameterContents": "\"[Assurance-Modify-Service][ModifyAssurance] Fail.Assurance Type not exist.\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "println",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "false",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "\"Assurance Type not exist\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyAssuranceResult",
              "calledFrom": "modify",
              "parameterContents": "null",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setAssurance",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findAll",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "gar",
              "objectType": "GetAllAssuranceResult",
              "calledFrom": "getAllAssurances",
              "parameterContents": "true",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "gar",
              "objectType": "GetAllAssuranceResult",
              "calledFrom": "getAllAssurances",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getOrderId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getType().getIndex()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setTypeIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getType",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getType().getName()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setTypeName",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getName",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getType",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getType().getPrice()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setTypePrice",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getType",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "pa",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "add",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "gar",
              "objectType": "GetAllAssuranceResult",
              "calledFrom": "getAllAssurances",
              "parameterContents": "result",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setAssurances",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "AssuranceType",
              "objectType": "Solving AssuranceType",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "values",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atb",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "at.getIndex()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "at",
              "objectType": "AssuranceType",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atb",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "at.getName()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setName",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "at",
              "objectType": "AssuranceType",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getName",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atb",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "at.getPrice()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "at",
              "objectType": "AssuranceType",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atlist",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "atb",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "add",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            }
          ],
          "name": "AssuranceServiceImpl",
          "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "assurance.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-assurance-service",
              "annotations": [],
              "className": "AssuranceRepository",
              "name": "deleteById",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Assurance>",
              "microserviceName": "ts-assurance-service",
              "annotations": [],
              "className": "AssuranceRepository",
              "name": "findAll",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "returnType": "Assurance",
              "microserviceName": "ts-assurance-service",
              "annotations": [],
              "className": "AssuranceRepository",
              "name": "findById",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "returnType": "Assurance",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'orderId' : ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "className": "AssuranceRepository",
              "name": "findByOrderId",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            }
          ],
          "methodCalls": [],
          "name": "AssuranceRepository",
          "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-assurance-service",
              "artifactId": "ts-assurance-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-assurance-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18888
            },
            "spring": {
              "application": {
                "name": "ts-assurance-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-assurance-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-assurance-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-basic-service",
      "path": "/ts-basic-service",
      "controllers": [
        {
          "packageName": "fdse.microservice.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/basic/queryForTravel",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryForTravel",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "returnType": "ResultForTravel",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/basic/queryForTravel"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "className": "BasicController",
              "name": "queryForTravel",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "url": "/basic/queryForStationId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryStation",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/basic/queryForStationId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "className": "BasicController",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            }
          ],
          "fields": [
            {
              "type": "BasicService",
              "name": "service",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "BasicService",
              "calledFrom": "queryForTravel",
              "parameterContents": "info",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "queryForTravel",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "service",
              "objectType": "BasicService",
              "calledFrom": "queryForStationId",
              "parameterContents": "info",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            }
          ],
          "name": "BasicController",
          "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "fdse.microservice.service",
          "implementedTypes": [
            "BasicService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "QueryForTravel",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "ResultForTravel",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "className": "BasicServiceImpl",
              "name": "queryForTravel",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "QueryStation",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "className": "BasicServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "PriceConfig",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "queryPriceConfigByRouteIdAndTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeId",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "queryTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "checkStationExists",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "result",
              "objectType": "ResultForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "true",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "info.getStartingPlace()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "checkStationExists",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "checkStationExists",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ResultForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "false",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "info.getTrip().getTrainTypeId()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "queryTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "QueryForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"traintype doesn't exist\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "println",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ResultForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "false",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ResultForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "trainType",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "QueryForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "routeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "routeId,trainTypeString",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "queryPriceConfigByRouteIdAndTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "new QueryStation(info.getStartingPlace())",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "new QueryStation(info.getEndPlace())",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "startingPlaceId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "endPlaceId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "indexEnd",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "indexStart",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"economyClass\",\"\" + priceForEconomyClass",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"confortClass\",\"\" + priceForConfortClass",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ResultForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "prices",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setPrices",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ResultForTravel",
              "calledFrom": "queryForTravel",
              "parameterContents": "1.0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setPercent",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[Basic Information Service][Query For Station Id] Station Id:\" + info.getName()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "println",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryStation",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/station/queryForId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"http://ts-station-service:12345/station/queryForId\",info,String.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "checkStationExists",
              "parameterContents": "\"[Basic Information Service][Check Station Exists] Station Name:\" + stationName",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "println",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/station/exist",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkStationExists",
              "parameterContents": "\"http://ts-station-service:12345/station/exist\",new QueryStation(stationName),Boolean.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "exist",
              "objectType": "Boolean",
              "calledFrom": "checkStationExists",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "booleanValue",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryTrainType",
              "parameterContents": "\"[Basic Information Service][Query Train Type] Train Type:\" + trainTypeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "println",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/train/retrieve",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryTrainType",
              "parameterContents": "\"http://ts-train-service:14567/train/retrieve\",new QueryTrainType(trainTypeId),TrainType.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Basic Information Service][Get Route By Id] Route ID：\" + routeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "println",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/route/queryById/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"http://ts-route-service:11178/route/queryById/\" + routeId,GetRouteByIdResult.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteByIdResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Basic Information Service][Get Route By Id] Fail.\" + result.getMessage()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "println",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteByIdResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Basic Information Service][Get Route By Id] Success.\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "println",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteByIdResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "\"[Basic Information Service][Query For Price Config] RouteId:\" + routeId + \"TrainType:\" + trainType",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "println",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryPriceConfigByTrainAndRoute",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "routeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryPriceConfigByTrainAndRoute",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "trainType",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/price/query",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "\"http://ts-price-service:16579/price/query\",info,ReturnSinglePriceConfigResult.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getPriceConfig",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            }
          ],
          "name": "BasicServiceImpl",
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-basic-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-basic-service",
              "artifactId": "ts-basic-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-basic-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 15680
            },
            "spring": {
              "application": {
                "name": "ts-basic-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-basic-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-cancel-service",
      "path": "/ts-cancel-service",
      "controllers": [
        {
          "packageName": "cancel.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/cancelCalculateRefund",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CancelOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "cancel.controller.CancelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "returnType": "CalculateRefundResult",
              "microserviceName": "ts-cancel-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/cancelCalculateRefund"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "cancel.controller.CancelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "className": "CancelController",
              "name": "calculate",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelController",
              "name": "verifySsoLogin",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "url": "/cancelOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "cancel.controller.CancelController"
                    }
                  ],
                  "name": "loginToken",
                  "packageAndClassName": "cancel.controller.CancelController"
                },
                {
                  "type": "CancelOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "cancel.controller.CancelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "returnType": "CancelOrderResult",
              "microserviceName": "ts-cancel-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/cancelOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "cancel.controller.CancelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "className": "CancelController",
              "name": "cancelTicket",
              "packageAndClassName": "cancel.controller.CancelController"
            }
          ],
          "fields": [
            {
              "type": "CancelService",
              "name": "cancelService",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "cancel.controller.CancelController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "cancel.controller.CancelController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculate",
              "parameterContents": "\"[Cancel Order Service][Calculate Cancel Refund] OrderId:\" + info.getOrderId()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "println",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "info",
              "objectType": "CancelOrderInfo",
              "calledFrom": "calculate",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "getOrderId",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "cancelService",
              "objectType": "CancelService",
              "calledFrom": "calculate",
              "parameterContents": "info",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"[Cancel Order Service][Cancel Ticket] info:\" + info.getOrderId()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "println",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "info",
              "objectType": "CancelOrderInfo",
              "calledFrom": "cancelTicket",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "getOrderId",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] order ID:\" + info.getOrderId() + \"  loginToken:\" + loginToken",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "println",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "info",
              "objectType": "CancelOrderInfo",
              "calledFrom": "cancelTicket",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "getOrderId",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Not receive any login token\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "println",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelTicket",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "setStatus",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"No Login Token\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "setMessage",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelTicket",
              "parameterContents": "loginToken",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "verifySsoLogin",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "verifyResult",
              "objectType": "VerifyResult",
              "calledFrom": "cancelTicket",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "isStatus",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Do not login.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "println",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelTicket",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "setStatus",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "setMessage",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"[Cancel Order Service][Cancel Ticket] Verify Success\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "println",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "cancelService",
              "objectType": "CancelService",
              "calledFrom": "cancelTicket",
              "parameterContents": "info,loginToken,loginId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "cancelOrder",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "cancelTicket",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "printStackTrace",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"[Cancel Order Service][Verify Login] Verifying....\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "println",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"http://ts-sso-service:12349/verifyLoginToken/\" + loginToken,VerifyResult.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "getForObject",
              "packageAndClassName": "cancel.controller.CancelController"
            }
          ],
          "name": "CancelController",
          "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "cancel.service",
          "implementedTypes": [
            "CancelService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "CancelOrderInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "CalculateRefundResult",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "NotifyInfo",
                  "annotations": [],
                  "name": "notifyInfo",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetAccountByIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "GetAccountByIdResult",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CancelOrderInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "CancelOrderResult",
              "microserviceName": "ts-cancel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "className": "CancelServiceImpl",
              "name": "cancelOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "money",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "drawbackMoney",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ChangeOrderInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "ChangeOrderResult",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "cancelFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetOrderByIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "GetOrderResult",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "AsyncTask",
              "name": "asyncTask",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "getFromOrderInfo",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CancelOrderInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "getFromOrderInfo",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "GetOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Order found G|H\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "GetOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "loginToken",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setLoginToken",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "changeOrderInfo",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "cancelFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "ChangeOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "true",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Success.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "money,loginId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "drawbackMoney",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Draw Back Money] Success.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "getAccountByIdInfo",
              "objectType": "GetAccountByIdInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getAccountId().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "getAccountByIdInfo",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "new Date().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setDate",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "result.getAccount().getEmail()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setEmail",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTo",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "result.getAccount().getName()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setUsername",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getName",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getId().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setOrderNumber",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "SeatClass.getNameByCode(order.getSeatClass())",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "SeatClass",
              "objectType": "Solving SeatClass",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getNameByCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getTravelTime().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "notifyInfo",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Draw Back Money] Fail.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "changeOrderResult.getMessage()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "ChangeOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Fail.Reason:\" + changeOrderResult.getMessage()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "ChangeOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Order Status Cancel Not Permitted\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Order Status Not Permitted.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "getFromOtherOrderInfo",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CancelOrderInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "getFromOtherOrderInfo",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrderOther",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "GetOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Order found Z|K|Other\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "GetOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Order status ok\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "loginToken",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setLoginToken",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "changeOrderInfo",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "cancelFromOtherOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "ChangeOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "true",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Success.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "money,loginId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "drawbackMoney",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Draw Back Money] Success.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Draw Back Money] Fail.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "changeOrderResult.getMessage()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "ChangeOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Fail.Reason:\" + changeOrderResult.getMessage()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "ChangeOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Order Status Cancel Not Permitted\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Order Status Not Permitted.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Order Service][Cancel Order] Order Not Found.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "sendEmail",
              "parameterContents": "\"[Cancel Order Service][Send Email]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/notification/order_cancel_success",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "sendEmail",
              "parameterContents": "\"http://ts-notification-service:17853/notification/order_cancel_success\",notifyInfo,Boolean.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "getFromOrderInfo",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "calculateRefund",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CancelOrderInfo",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateRefund",
              "parameterContents": "getFromOrderInfo",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "GetOrderResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "GetOrderResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "true",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"0\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price] From Order Service.Not Paid.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "true",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "calculateRefund(order)",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateRefund",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price] From Order Service.Paid.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"Order Status Cancel Not Permitted\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"error\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price] Order. Cancel Not Permitted.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "getFromOtherOrderInfo",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "calculateRefund",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CancelOrderInfo",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateRefund",
              "parameterContents": "getFromOtherOrderInfo",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrderOther",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "GetOrderResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "GetOrderResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "true",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"0\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price] From Order Other Service.Not Paid.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "true",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "calculateRefund(order)",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateRefund",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price] From Order Other Service.Paid.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"Order Status Cancel Not Permitted\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"error\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price] Order Other. Cancel Not Permitted.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "false",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CalculateRefundResult",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"error\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price] Order not found.\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order] Order Travel Date:\" + order.getTravelDate().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal2",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal2",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.HOUR",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal2",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.MINUTE",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal2",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.SECOND",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order] nowDate  :\" + nowDate.toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "nowDate",
              "objectType": "Date",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order] startTime:\" + startTime.toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "startTime",
              "objectType": "Date",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "nowDate",
              "objectType": "Date",
              "calledFrom": "calculateRefund",
              "parameterContents": "startTime",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "after",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order] Ticket expire refund 0\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "calculateRefund",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "parseDouble",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "priceFormat",
              "objectType": "DecimalFormat",
              "calledFrom": "calculateRefund",
              "parameterContents": "price",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "format",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order]calculate refund - \" + str",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "\"[Cancel Order Service][Change Order Status] Changing....\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/order/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/update\",info,ChangeOrderResult.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "\"[Cancel Order Service][Change Order Status] Changing....\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/orderOther/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/update\",info,ChangeOrderResult.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "drawbackMoney",
              "parameterContents": "\"[Cancel Order Service][Draw Back Money] Draw back money...\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DrawBackInfo",
              "calledFrom": "drawbackMoney",
              "parameterContents": "money",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DrawBackInfo",
              "calledFrom": "drawbackMoney",
              "parameterContents": "userId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/inside_payment/drawBack",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "drawbackMoney",
              "parameterContents": "\"http://ts-inside-payment-service:18673/inside_payment/drawBack\",info,String.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "String",
              "calledFrom": "drawbackMoney",
              "parameterContents": "\"true\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "equals",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAccount",
              "parameterContents": "\"[Cancel Order Service][Get By Id]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/account/findById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAccount",
              "parameterContents": "\"http://ts-sso-service:12349/account/findById\",info,GetAccountByIdResult.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "\"[Cancel Order Service][Get Order] Getting....\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/order/getById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/getById/\",info,GetOrderResult.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "\"[Cancel Order Service][Get Order] Getting....\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "println",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/orderOther/getById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/getById/\",info,GetOrderResult.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            }
          ],
          "name": "CancelServiceImpl",
          "path": "/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-cancel-service",
              "artifactId": "ts-cancel-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-cancel-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18885
            },
            "spring": {
              "application": {
                "name": "ts-cancel-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-cancel-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-config-service",
      "path": "/ts-config-service",
      "controllers": [
        {
          "packageName": "config.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/config/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/config/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "delete",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/config/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/config/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "delete",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/config/query",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/config/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "query",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/config/retrieve",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "Config",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/config/retrieve"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "retrieve",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/config/queryAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<Config>",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/config/queryAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "queryAll",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/config/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/config/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "update",
              "packageAndClassName": "config.controller.ConfigController"
            }
          ],
          "fields": [
            {
              "type": "ConfigService",
              "name": "configService",
              "packageAndClassName": "config.controller.ConfigController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "config.controller.ConfigController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "delete",
              "parameterContents": "info",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "create",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "update",
              "parameterContents": "info",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "update",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "retrieve",
              "parameterContents": "info",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "retrieve",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "query",
              "parameterContents": "info",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "query",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "delete",
              "parameterContents": "info",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "delete",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "queryAll",
              "packageAndClassName": "config.controller.ConfigController"
            }
          ],
          "name": "ConfigController",
          "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "config.service",
          "implementedTypes": [
            "ConfigService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [],
              "returnType": "List<Config>",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "className": "ConfigServiceImpl",
              "name": "queryAll",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "returnType": "Config",
              "microserviceName": "ts-config-service",
              "annotations": [],
              "className": "ConfigServiceImpl",
              "name": "retrieve",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-config-service",
              "annotations": [],
              "className": "ConfigServiceImpl",
              "name": "create",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-config-service",
              "annotations": [],
              "className": "ConfigServiceImpl",
              "name": "query",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "ConfigRepository",
              "name": "repository",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "create",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getValue",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getDescription",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "create",
              "parameterContents": "config",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "save",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "update",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getValue",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getDescription",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "update",
              "parameterContents": "config",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "save",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "retrieve",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "retrieve",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "retrieve",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "retrieve",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "query",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getValue",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "query",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "delete",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "delete",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "deleteByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findAll",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            }
          ],
          "name": "ConfigServiceImpl",
          "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-config-service",
              "artifactId": "ts-config-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-config-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-config-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-config-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 15679
            }
          },
          "name": "application.yml",
          "path": "/ts-config-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-consign-price-service",
      "path": "/ts-consign-price-service",
      "controllers": [
        {
          "packageName": "consignprice.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/consignPrice/modifyPriceConfig",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PriceConfig",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "priceConfig",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consignPrice/modifyPriceConfig"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "modifyPriceConfig",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "url": "/consignPrice/getPriceConfig",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "PriceConfig",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consignPrice/getPriceConfig"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "getPriceConfig",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "url": "/consignPrice/getPrice",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetPriceDomain",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "returnType": "double",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consignPrice/getPrice"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "getPriceByWeightAndRegion",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "url": "/consignPrice/getPriceInfo",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consignPrice/getPriceInfo"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "getPriceInfo",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            }
          ],
          "fields": [
            {
              "type": "ConsignPriceService",
              "name": "service",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "ConsignPriceService",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "info",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "getPriceByWeightAndRegion",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignPriceService",
              "calledFrom": "getPriceInfo",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "queryPriceInformation",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignPriceService",
              "calledFrom": "getPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "getPriceConfig",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignPriceService",
              "calledFrom": "modifyPriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "createAndModifyPrice",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            }
          ],
          "name": "ConsignPriceController",
          "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "consignprice.service",
          "implementedTypes": [
            "ConsignPriceService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "PriceConfig",
                  "annotations": [],
                  "name": "config",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "className": "ConsignPriceServiceImpl",
              "name": "createAndModifyPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetPriceDomain",
                  "annotations": [],
                  "name": "domain",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "returnType": "double",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "className": "ConsignPriceServiceImpl",
              "name": "getPriceByWeightAndRegion",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "className": "ConsignPriceServiceImpl",
              "name": "queryPriceInformation",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "PriceConfig",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "className": "ConsignPriceServiceImpl",
              "name": "getPriceConfig",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "ConsignPriceConfigRepository",
              "name": "repository",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "domain",
              "objectType": "GetPriceDomain",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "domain",
              "objectType": "GetPriceDomain",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "domain",
              "objectType": "GetPriceDomain",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "isWithinRegion",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getWithinPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getBeyondPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\"The price of weight within \"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "price.getInitialWeight()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "price",
              "objectType": "PriceConfig",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\" is \"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "price.getInitialPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "price",
              "objectType": "PriceConfig",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\". The price of extra weight within the region is \"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "price.getWithinPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "price",
              "objectType": "PriceConfig",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getWithinPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\" and beyond the region is \"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "price.getBeyondPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "price",
              "objectType": "PriceConfig",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getBeyondPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\"\\n\"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "toString",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "\"[Consign Price Service][Create New Price Config]\"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "println",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getId()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getInitialPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setInitialPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getInitialWeight()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getWithinPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setWithinPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getWithinPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getBeyondPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setBeyondPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "PriceConfig",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getBeyondPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "originalConfig",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "save",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "getPriceConfig",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            }
          ],
          "name": "ConsignPriceServiceImpl",
          "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "consignprice.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "index",
                  "packageAndClassName": "consignprice.repository.ConsignPriceConfigRepository"
                }
              ],
              "returnType": "PriceConfig",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'index': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "consignprice.repository.ConsignPriceConfigRepository"
                }
              ],
              "className": "ConsignPriceConfigRepository",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.repository.ConsignPriceConfigRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "consignprice.repository.ConsignPriceConfigRepository"
            }
          ],
          "methodCalls": [],
          "name": "ConsignPriceConfigRepository",
          "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-consign-price-service",
              "artifactId": "ts-consign-price-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-consign-price-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-consign-price-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-consign-price-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 16110
            }
          },
          "name": "application.yml",
          "path": "/ts-consign-price-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-consign-service",
      "path": "/ts-consign-service",
      "controllers": [
        {
          "packageName": "consign.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/consign/insertConsign",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ConsignRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "InsertConsignRecordResult",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consign/insertConsign"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "insertConsign",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "url": "/consign/findByConsignee",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "value": "consignee"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "consignee",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "List<ConsignRecord>",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consign/findByConsignee"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "findByConsignee",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "url": "/consign/updateConsign",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ConsignRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consign/updateConsign"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "updateConsign",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "url": "/consign/findByAccountId/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "List<ConsignRecord>",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consign/findByAccountId/{id}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "findByAccountId",
              "packageAndClassName": "consign.controller.ConsignController"
            }
          ],
          "fields": [
            {
              "type": "ConsignService",
              "name": "service",
              "packageAndClassName": "consign.controller.ConsignController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "consign.controller.ConsignController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "insertConsign",
              "parameterContents": "request",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "insertConsignRecord",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "updateConsign",
              "parameterContents": "request",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "updateConsignRecord",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findByAccountId",
              "parameterContents": "id",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "fromString",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "findByAccountId",
              "parameterContents": "newid",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "queryByAccountId",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "findByConsignee",
              "parameterContents": "consignee",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "queryByConsignee",
              "packageAndClassName": "consign.controller.ConsignController"
            }
          ],
          "name": "ConsignController",
          "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "consign.service",
          "implementedTypes": [
            "ConsignService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "ConsignRequest",
                  "annotations": [],
                  "name": "consignRequest",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "returnType": "InsertConsignRecordResult",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "className": "ConsignServiceImpl",
              "name": "insertConsignRecord",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "consignee",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "returnType": "ArrayList<ConsignRecord>",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "className": "ConsignServiceImpl",
              "name": "queryByConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ConsignRequest",
                  "annotations": [],
                  "name": "consignRequest",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "className": "ConsignServiceImpl",
              "name": "updateConsignRecord",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "returnType": "ArrayList<ConsignRecord>",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "className": "ConsignServiceImpl",
              "name": "queryByAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "ConsignRepository",
              "name": "repository",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"[Consign servie] [ Insert new consign record]\"",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "println",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getAccountId()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"The handle date is %s\",consignRequest.getHandleDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "printf",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"The target date is %s\",consignRequest.getTargetDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "printf",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getHandleDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getTargetDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getFrom()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getTo()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setTo",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTo",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getConsignee()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getPhone()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getWeight()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "domain",
              "objectType": "GetPriceDomain",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getWeight()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "domain",
              "objectType": "GetPriceDomain",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.isWithin()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setWithinRegion",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "isWithin",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "url": "/consignPrice/getPrice",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"http://ts-consign-price-service:16110/consignPrice/getPrice\",domain,double.class",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "price",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRecord",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "save",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "InsertConsignRecordResult",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "true",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "InsertConsignRecordResult",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"You have consigned successfully! The price is \" + result.getPrice()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "InsertConsignRecordResult",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "false",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "InsertConsignRecordResult",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"Consign failed! Please try again later!\"",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "\"[Consign servie] [ Update consign record]\"",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "println",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getId()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "findById",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getAccountId()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getHandleDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getTargetDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getFrom()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getTo()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setTo",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTo",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getConsignee()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getPhone()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "domain",
              "objectType": "GetPriceDomain",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getWeight()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "domain",
              "objectType": "GetPriceDomain",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.isWithin()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setWithinRegion",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "isWithin",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "url": "/consignPrice/getPrice",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "\"http://ts-consign-price-service:16110/consignPrice/getPrice\",domain,double.class",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "price",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "originalRecord.getPrice()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getWeight()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "originalRecord",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "save",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "queryByAccountId",
              "parameterContents": "accountId",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "queryByConsignee",
              "parameterContents": "consignee",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "findByConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            }
          ],
          "name": "ConsignServiceImpl",
          "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "consign.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "consign.repository.ConsignRepository"
                }
              ],
              "returnType": "ArrayList<ConsignRecord>",
              "microserviceName": "ts-consign-service",
              "annotations": [],
              "className": "ConsignRepository",
              "name": "findByAccountId",
              "packageAndClassName": "consign.repository.ConsignRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "consign.repository.ConsignRepository"
                }
              ],
              "returnType": "ConsignRecord",
              "microserviceName": "ts-consign-service",
              "annotations": [],
              "className": "ConsignRepository",
              "name": "findById",
              "packageAndClassName": "consign.repository.ConsignRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "consignee",
                  "packageAndClassName": "consign.repository.ConsignRepository"
                }
              ],
              "returnType": "ArrayList<ConsignRecord>",
              "microserviceName": "ts-consign-service",
              "annotations": [],
              "className": "ConsignRepository",
              "name": "findByConsignee",
              "packageAndClassName": "consign.repository.ConsignRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "consign.repository.ConsignRepository"
            }
          ],
          "methodCalls": [],
          "name": "ConsignRepository",
          "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-consign-price-service",
              "artifactId": "ts-consign-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-consign-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-consign-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-consign-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 16111
            }
          },
          "name": "application.yml",
          "path": "/ts-consign-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-contacts-service",
      "path": "/ts-contacts-service",
      "controllers": [
        {
          "packageName": "contacts.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/contacts/modifyContacts",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ModifyContactsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "contacts.controller.FuckContactsController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "returnType": "ModifyContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts/modifyContacts"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "className": "FuckContactsController",
              "name": "modifyContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "url": "/contacts/deleteContacts",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteContactsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "contacts.controller.FuckContactsController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "returnType": "DeleteContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts/deleteContacts"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "className": "FuckContactsController",
              "name": "deleteContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "className": "FuckContactsController",
              "name": "home",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "url": "/contacts/findAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "GetAllContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/contacts/findAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "className": "FuckContactsController",
              "name": "getAllContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "url": "/contacts/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "contacts.controller.FuckContactsController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                },
                {
                  "type": "AddContactsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "contacts.controller.FuckContactsController"
                    }
                  ],
                  "name": "aci",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "returnType": "AddContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "className": "FuckContactsController",
              "name": "createNewContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "url": "/contacts/getContactsById",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetContactsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "contacts.controller.FuckContactsController"
                    }
                  ],
                  "name": "gci",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "returnType": "GetContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/contacts/getContactsById"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "className": "FuckContactsController",
              "name": "getContactsByContactsId",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [],
              "className": "FuckContactsController",
              "name": "verifySsoLogin",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "url": "/contacts/admincreate",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Contacts",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "contacts.controller.FuckContactsController"
                    }
                  ],
                  "name": "aci",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "returnType": "AddContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts/admincreate"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "className": "FuckContactsController",
              "name": "createNewContactsAdmin",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "url": "/contacts/findContacts",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "contacts.controller.FuckContactsController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "returnType": "ArrayList<Contacts>",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts/findContacts"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "contacts.controller.FuckContactsController"
                }
              ],
              "className": "FuckContactsController",
              "name": "findContactsByAccountId",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            }
          ],
          "fields": [
            {
              "type": "ContactsService",
              "name": "contactsService",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "aci",
              "objectType": "Contacts",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setId",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "randomUUID",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "\"[ContactsService][Create Contacts In Admin]\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "aci",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "createContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "true",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setStatus",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "aci",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setMessage",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"[Contacts Service][Get All Contacts]\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "getAllContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "getAllContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyContacts",
              "parameterContents": "\"[Contacts Service][Modify Contacts] ContactsId:\" + info.getContactsId()",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "info",
              "objectType": "ModifyContactsInfo",
              "calledFrom": "modifyContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "getContactsId",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "modifyContacts",
              "parameterContents": "info",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "modify",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "deleteContacts",
              "parameterContents": "UUID.fromString(info.getContactsId())",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "delete",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteContacts",
              "parameterContents": "info.getContactsId()",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "fromString",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "info",
              "objectType": "DeleteContactsInfo",
              "calledFrom": "deleteContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "getContactsId",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "\"[Contacts Service][Find Contacts By Account Id:\" + loginId",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "loginToken",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "verifySsoLogin",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "isStatus",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "\"[ContactsService][VerifyLogin] Success\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "UUID.fromString(loginId)",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "findContactsByAccountId",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "loginId",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "fromString",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "\"[ContactsService][VerifyLogin] Fail\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "gci.getLoginToken()",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "verifySsoLogin",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gci",
              "objectType": "GetContactsInfo",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "getLoginToken",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "isStatus",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "\"[ContactsService][VerifyLogin] Success.\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "\"[ContactsService][Contacts Id Print] \" + gci.getContactsId()",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gci",
              "objectType": "GetContactsInfo",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "getContactsId",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "UUID.fromString(gci.getContactsId())",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "findContactsById",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "gci.getContactsId()",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "fromString",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gci",
              "objectType": "GetContactsInfo",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "getContactsId",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "false",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setStatus",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "\"Contacts Not Exist.\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setMessage",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "null",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "true",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setStatus",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setMessage",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "contacts",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "\"[ContactsService][VerifyLogin] Fail.\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "false",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setStatus",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "\"Not Login.\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setMessage",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "null",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createNewContacts",
              "parameterContents": "loginToken",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "verifySsoLogin",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "createNewContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "isStatus",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewContacts",
              "parameterContents": "\"[ContactsService][VerifyLogin] Success\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "createNewContacts",
              "parameterContents": "aci,loginId",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "create",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewContacts",
              "parameterContents": "\"[ContactsService][VerifyLogin] Fail\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "createNewContacts",
              "parameterContents": "false",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setStatus",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "createNewContacts",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setMessage",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "createNewContacts",
              "parameterContents": "null",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "setContacts",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"[ContactsService][VerifyLogin] Verifying....\"",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "println",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"http://ts-sso-service:12349/verifyLoginToken/\" + loginToken,VerifyResult.class",
              "microserviceName": "ts-contacts-service",
              "className": "FuckContactsController",
              "name": "getForObject",
              "packageAndClassName": "contacts.controller.FuckContactsController"
            }
          ],
          "name": "FuckContactsController",
          "path": "/ts-contacts-service/src/main/java/contacts/controller/FuckContactsController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "contacts.service",
          "implementedTypes": [
            "ContactsService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "ArrayList<Contacts>",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "findContactsByAccountId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ModifyContactsInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "ModifyContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "modify",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "GetAllContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "getAllContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "contactsId",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "DeleteContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "delete",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddContactsInfo",
                  "annotations": [],
                  "name": "aci",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "AddContactsResult",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "create",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "Contacts",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "findContactsById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Contacts",
                  "annotations": [],
                  "name": "contacts",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "Contacts",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "createContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "ContactsRepository",
              "name": "contactsRepository",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "findContactsById",
              "parameterContents": "id",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "accountId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "\"[Contacts-Query-Service][Query-Contacts] Result Size:\" + arr.size()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "println",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "arr",
              "objectType": "Contacts",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "size",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "createContacts",
              "parameterContents": "contacts.getId()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "createContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createContacts",
              "parameterContents": "\"[Contacts Service][Init Contacts] Already Exists Id:\" + contacts.getId()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "println",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "createContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "createContacts",
              "parameterContents": "contacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "save",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "aci.getName()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setName",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "aci",
              "objectType": "AddContactsInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getName",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "aci.getPhoneNumber()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setPhoneNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "aci",
              "objectType": "AddContactsInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getPhoneNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "aci.getDocumentNumber()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setDocumentNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "aci",
              "objectType": "AddContactsInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "UUID.fromString(accountId)",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "accountId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "fromString",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "aci.getDocumentType()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "aci",
              "objectType": "AddContactsInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "create",
              "parameterContents": "UUID.fromString(accountId)",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "accountId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "fromString",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "accountContacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "contacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "contains",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Contacts-Add&Delete-Service][AddContacts] Fail.Contacts already exists\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "println",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "create",
              "parameterContents": "false",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "create",
              "parameterContents": "\"Contacts Already Exists\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "create",
              "parameterContents": "null",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "create",
              "parameterContents": "contacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "save",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Contacts-Add&Delete-Service][AddContacts] Success.\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "println",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "create",
              "parameterContents": "true",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "create",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "acr",
              "objectType": "AddContactsResult",
              "calledFrom": "create",
              "parameterContents": "contacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "delete",
              "parameterContents": "contactsId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "delete",
              "parameterContents": "contactsId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "delete",
              "parameterContents": "\"[Contacts-Add&Delete-Service][DeleteContacts] Success.\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "println",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "dcr",
              "objectType": "DeleteContactsResult",
              "calledFrom": "delete",
              "parameterContents": "true",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "dcr",
              "objectType": "DeleteContactsResult",
              "calledFrom": "delete",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "delete",
              "parameterContents": "\"[Contacts-Add&Delete-Service][DeleteContacts] Fail.Reason not clear.\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "println",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "dcr",
              "objectType": "DeleteContactsResult",
              "calledFrom": "delete",
              "parameterContents": "false",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "dcr",
              "objectType": "DeleteContactsResult",
              "calledFrom": "delete",
              "parameterContents": "\"Reason Not clear\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modify",
              "parameterContents": "UUID.fromString(info.getContactsId())",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findContactsById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "modify",
              "parameterContents": "info.getContactsId()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "fromString",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyContactsInfo",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modify",
              "parameterContents": "\"[Contacts-Modify-Service][ModifyContacts] Fail.Contacts not found.\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "println",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyContactsResult",
              "calledFrom": "modify",
              "parameterContents": "false",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyContactsResult",
              "calledFrom": "modify",
              "parameterContents": "\"Contacts not found\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyContactsResult",
              "calledFrom": "modify",
              "parameterContents": "null",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setName",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyContactsInfo",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getName",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "info.getDocumentType()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyContactsInfo",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "info.getDocumentNumber()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setDocumentNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyContactsInfo",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "info.getPhoneNumber()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setPhoneNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyContactsInfo",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getPhoneNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "modify",
              "parameterContents": "oldContacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "save",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modify",
              "parameterContents": "\"[Contacts-Modify-Service][ModifyContacts] Success.\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "println",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyContactsResult",
              "calledFrom": "modify",
              "parameterContents": "true",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyContactsResult",
              "calledFrom": "modify",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "mcr",
              "objectType": "ModifyContactsResult",
              "calledFrom": "modify",
              "parameterContents": "oldContacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "getAllContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findAll",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllContactsResult",
              "calledFrom": "getAllContacts",
              "parameterContents": "true",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllContactsResult",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllContactsResult",
              "calledFrom": "getAllContacts",
              "parameterContents": "contacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            }
          ],
          "name": "ContactsServiceImpl",
          "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "contacts.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "returnType": "ArrayList<Contacts>",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'accountId' : ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "className": "ContactsRepository",
              "name": "findByAccountId",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-contacts-service",
              "annotations": [],
              "className": "ContactsRepository",
              "name": "deleteById",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "returnType": "Contacts",
              "microserviceName": "ts-contacts-service",
              "annotations": [],
              "className": "ContactsRepository",
              "name": "findById",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Contacts>",
              "microserviceName": "ts-contacts-service",
              "annotations": [],
              "className": "ContactsRepository",
              "name": "findAll",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            }
          ],
          "methodCalls": [],
          "name": "ContactsRepository",
          "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 12347
            },
            "spring": {
              "application": {
                "name": "ts-contacts-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-contacts-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-contacts-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-contacts-service",
              "artifactId": "ts-contacts-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-contacts-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-execute-service",
      "path": "/ts-execute-service",
      "controllers": [
        {
          "packageName": "execute.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-execute-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "className": "ExecuteControlller",
              "name": "home",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "url": "/execute/execute",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TicketExecuteInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "execute.controller.ExecuteControlller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "returnType": "TicketExecuteResult",
              "microserviceName": "ts-execute-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/execute/execute"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "className": "ExecuteControlller",
              "name": "executeTicket",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "url": "/execute/collected",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TicketExecuteInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "execute.controller.ExecuteControlller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "returnType": "TicketExecuteResult",
              "microserviceName": "ts-execute-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                },
                {
                  "attributes": {
                    "path": "/execute/collected"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "className": "ExecuteControlller",
              "name": "collectTicket",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            }
          ],
          "fields": [
            {
              "type": "ExecuteService",
              "name": "executeService",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "executeTicket",
              "parameterContents": "\"[Execute Service][Execute] Id:\" + info.getOrderId()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "println",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "info",
              "objectType": "TicketExecuteInfo",
              "calledFrom": "executeTicket",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "getOrderId",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "executeService",
              "objectType": "ExecuteService",
              "calledFrom": "executeTicket",
              "parameterContents": "info",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "ticketExecute",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "collectTicket",
              "parameterContents": "\"[Execute Service][Collect] Id:\" + info.getOrderId()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "println",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "info",
              "objectType": "TicketExecuteInfo",
              "calledFrom": "collectTicket",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "getOrderId",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "executeService",
              "objectType": "ExecuteService",
              "calledFrom": "collectTicket",
              "parameterContents": "info",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "ticketCollect",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            }
          ],
          "name": "ExecuteControlller",
          "path": "/ts-execute-service/src/main/java/execute/controller/ExecuteControlller.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "execute.serivce",
          "implementedTypes": [
            "ExecuteService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "GetOrderByIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "returnType": "GetOrderResult",
              "microserviceName": "ts-execute-service",
              "annotations": [],
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "TicketExecuteInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "returnType": "TicketExecuteResult",
              "microserviceName": "ts-execute-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "className": "ExecuteServiceImpl",
              "name": "ticketExecute",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ModifyOrderStatusInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "returnType": "ModifyOrderStatusResult",
              "microserviceName": "ts-execute-service",
              "annotations": [],
              "className": "ExecuteServiceImpl",
              "name": "executeOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "getOrderByIdInfo",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "ticketExecute",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TicketExecuteInfo",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketExecute",
              "parameterContents": "getOrderByIdInfo",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "GetOrderResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "GetOrderResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"Order Status Wrong\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "executeInfo",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "ticketExecute",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TicketExecuteInfo",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "executeInfo",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "ticketExecute",
              "parameterContents": "OrderStatus.USED.getCode()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "USED",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketExecute",
              "parameterContents": "executeInfo",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "executeOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "true",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "resultExecute.getMessage()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketExecute",
              "parameterContents": "getOrderByIdInfo",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrderOther",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "GetOrderResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "GetOrderResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"Order Status Wrong\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "executeInfo",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "ticketExecute",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TicketExecuteInfo",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "executeInfo",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "ticketExecute",
              "parameterContents": "OrderStatus.USED.getCode()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "USED",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketExecute",
              "parameterContents": "executeInfo",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "executeOrderOther",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "true",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "resultExecute.getMessage()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "getOrderByIdInfo",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "ticketCollect",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TicketExecuteInfo",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketCollect",
              "parameterContents": "getOrderByIdInfo",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "GetOrderResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "GetOrderResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"Order Status Wrong\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "executeInfo",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "ticketCollect",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TicketExecuteInfo",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "executeInfo",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "ticketCollect",
              "parameterContents": "OrderStatus.COLLECTED.getCode()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketCollect",
              "parameterContents": "executeInfo",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "executeOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "true",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "resultExecute.getMessage()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketCollect",
              "parameterContents": "getOrderByIdInfo",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrderOther",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "GetOrderResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "GetOrderResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"Order Status Wrong\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "executeInfo",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "ticketCollect",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TicketExecuteInfo",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "executeInfo",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "ticketCollect",
              "parameterContents": "OrderStatus.COLLECTED.getCode()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketCollect",
              "parameterContents": "executeInfo",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "executeOrderOther",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "true",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "resultExecute.getMessage()",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "false",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TicketExecuteResult",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "executeOrder",
              "parameterContents": "\"[Execute Service][Execute Order] Executing....\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "println",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "url": "/order/modifyOrderStatus",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "executeOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/modifyOrderStatus\",info,ModifyOrderStatusResult.class",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "executeOrderOther",
              "parameterContents": "\"[Execute Service][Execute Order] Executing....\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "println",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "url": "/order/modifyOrderStatus",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "executeOrderOther",
              "parameterContents": "\"http://ts-order-other-service:12032/order/modifyOrderStatus\",info,ModifyOrderStatusResult.class",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "\"[Execute Service][Get Order] Getting....\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "println",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "url": "/order/getById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/getById/\",info,GetOrderResult.class",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "\"[Execute Service][Get Order] Getting....\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "println",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "url": "/orderOther/getById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/getById/\",info,GetOrderResult.class",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            }
          ],
          "name": "ExecuteServiceImpl",
          "path": "/ts-execute-service/src/main/java/execute/serivce/ExecuteServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-execute-service",
              "artifactId": "ts-execute-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-execute-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12386
            },
            "spring": {
              "application": {
                "name": "ts-execute-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-execute-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-food-map-service",
      "path": "/ts-food-map-service",
      "controllers": [
        {
          "packageName": "food.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/foodmap/getAllFoodStores",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "GetFoodStoresListResult",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "food.controller.FoodMapController"
                },
                {
                  "attributes": {
                    "path": "/foodmap/getAllFoodStores"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "food.controller.FoodMapController"
                }
              ],
              "className": "FoodMapController",
              "name": "getAllFoodStores",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "food.controller.FoodMapController"
                }
              ],
              "className": "FoodMapController",
              "name": "home",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "url": "/foodmap/getTrainFoodOfTrip",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryTrainFoodInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "food.controller.FoodMapController"
                    }
                  ],
                  "name": "qtf",
                  "packageAndClassName": "food.controller.FoodMapController"
                }
              ],
              "returnType": "GetTrainFoodListResult",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/foodmap/getTrainFoodOfTrip"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "food.controller.FoodMapController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "food.controller.FoodMapController"
                }
              ],
              "className": "FoodMapController",
              "name": "getTrainFoodOfTrip",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "url": "/foodmap/getFoodStoresOfStation",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryFoodStoresInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "food.controller.FoodMapController"
                    }
                  ],
                  "name": "qfs",
                  "packageAndClassName": "food.controller.FoodMapController"
                }
              ],
              "returnType": "GetFoodStoresListResult",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "food.controller.FoodMapController"
                },
                {
                  "attributes": {
                    "path": "/foodmap/getFoodStoresOfStation"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "food.controller.FoodMapController"
                }
              ],
              "className": "FoodMapController",
              "name": "getFoodStoresOfStation",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "url": "/foodmap/getAllTrainFood",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "GetTrainFoodListResult",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "food.controller.FoodMapController"
                },
                {
                  "attributes": {
                    "path": "/foodmap/getAllTrainFood"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "food.controller.FoodMapController"
                }
              ],
              "className": "FoodMapController",
              "name": "getAllTrainFood",
              "packageAndClassName": "food.controller.FoodMapController"
            }
          ],
          "fields": [
            {
              "type": "FoodMapService",
              "name": "foodMapService",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "food.controller.FoodMapController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "food.controller.FoodMapController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllFoodStores",
              "parameterContents": "\"[Food Map Service][Get All FoodStores]\"",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "println",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "foodMapService",
              "objectType": "FoodMapService",
              "calledFrom": "getAllFoodStores",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "listFoodStores",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllTrainFood",
              "parameterContents": "\"[Food Map Service][Get All TrainFoods]\"",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "println",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "foodMapService",
              "objectType": "FoodMapService",
              "calledFrom": "getAllTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "listTrainFood",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getFoodStoresOfStation",
              "parameterContents": "\"[Food Map Service][Get FoodStores By StationId]\"",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "println",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "foodMapService",
              "objectType": "FoodMapService",
              "calledFrom": "getFoodStoresOfStation",
              "parameterContents": "qfs.getStationId()",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "listFoodStoresByStationId",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "qfs",
              "objectType": "QueryFoodStoresInfo",
              "calledFrom": "getFoodStoresOfStation",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "getStationId",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTrainFoodOfTrip",
              "parameterContents": "\"[Food Map Service][Get TrainFoods By TripId]\"",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "println",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "foodMapService",
              "objectType": "FoodMapService",
              "calledFrom": "getTrainFoodOfTrip",
              "parameterContents": "qtf.getTripId()",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "listTrainFoodByTripId",
              "packageAndClassName": "food.controller.FoodMapController"
            },
            {
              "objectName": "qtf",
              "objectType": "QueryTrainFoodInfo",
              "calledFrom": "getTrainFoodOfTrip",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapController",
              "name": "getTripId",
              "packageAndClassName": "food.controller.FoodMapController"
            }
          ],
          "name": "FoodMapController",
          "path": "/ts-food-map-service/src/main/java/food/controller/FoodMapController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "food.service",
          "implementedTypes": [
            "FoodMapService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "TrainFood",
                  "annotations": [],
                  "name": "tf",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "returnType": "TrainFood",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "className": "FoodMapServiceImpl",
              "name": "createTrainFood",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "GetFoodStoresListResult",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "className": "FoodMapServiceImpl",
              "name": "listFoodStores",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "FoodStore",
                  "annotations": [],
                  "name": "fs",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "returnType": "FoodStore",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "className": "FoodMapServiceImpl",
              "name": "createFoodStore",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "GetTrainFoodListResult",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "className": "FoodMapServiceImpl",
              "name": "listTrainFood",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "returnType": "GetTrainFoodListResult",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "className": "FoodMapServiceImpl",
              "name": "listTrainFoodByTripId",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationId",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "returnType": "GetFoodStoresListResult",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.FoodMapServiceImpl"
                }
              ],
              "className": "FoodMapServiceImpl",
              "name": "listFoodStoresByStationId",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "FoodStoreRepository",
              "name": "foodStoreRepository",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "type": "TrainFoodRepository",
              "name": "trainFoodRepository",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "foodStoreRepository",
              "objectType": "FoodStoreRepository",
              "calledFrom": "createFoodStore",
              "parameterContents": "fs.getId()",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "findById",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "fs",
              "objectType": "FoodStore",
              "calledFrom": "createFoodStore",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "getId",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createFoodStore",
              "parameterContents": "\"[Food Map Service][Init FoodStore] Already Exists Id:\" + fs.getId()",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "println",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "fs",
              "objectType": "FoodStore",
              "calledFrom": "createFoodStore",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "getId",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "foodStoreRepository",
              "objectType": "FoodStoreRepository",
              "calledFrom": "createFoodStore",
              "parameterContents": "fs",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "save",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "createTrainFood",
              "parameterContents": "tf.getId()",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "findById",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "tf",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "getId",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createTrainFood",
              "parameterContents": "\"[Food Map Service][Init TrainFood] Already Exists Id:\" + tf.getId()",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "println",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "tf",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "getId",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "createTrainFood",
              "parameterContents": "tf",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "save",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "foodStoreRepository",
              "objectType": "FoodStoreRepository",
              "calledFrom": "listFoodStores",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "findAll",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "listFoodStores",
              "parameterContents": "true",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "listFoodStores",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "listFoodStores",
              "parameterContents": "fsList",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setFoodStoreList",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "listTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "findAll",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "listTrainFood",
              "parameterContents": "true",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "listTrainFood",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "listTrainFood",
              "parameterContents": "tfList",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setTrainFoodList",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "foodStoreRepository",
              "objectType": "FoodStoreRepository",
              "calledFrom": "listFoodStoresByStationId",
              "parameterContents": "stationId",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "findByStationId",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "listFoodStoresByStationId",
              "parameterContents": "true",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "listFoodStoresByStationId",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "listFoodStoresByStationId",
              "parameterContents": "fsList",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setFoodStoreList",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "listTrainFoodByTripId",
              "parameterContents": "tripId",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "listTrainFoodByTripId",
              "parameterContents": "true",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "listTrainFoodByTripId",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "listTrainFoodByTripId",
              "parameterContents": "tfList",
              "microserviceName": "ts-food-map-service",
              "className": "FoodMapServiceImpl",
              "name": "setTrainFoodList",
              "packageAndClassName": "food.service.FoodMapServiceImpl"
            }
          ],
          "name": "FoodMapServiceImpl",
          "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "food.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "food.repository.FoodStoreRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-food-map-service",
              "annotations": [],
              "className": "FoodStoreRepository",
              "name": "deleteById",
              "packageAndClassName": "food.repository.FoodStoreRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "food.repository.FoodStoreRepository"
                }
              ],
              "returnType": "FoodStore",
              "microserviceName": "ts-food-map-service",
              "annotations": [],
              "className": "FoodStoreRepository",
              "name": "findById",
              "packageAndClassName": "food.repository.FoodStoreRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationId",
                  "packageAndClassName": "food.repository.FoodStoreRepository"
                }
              ],
              "returnType": "List<FoodStore>",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'stationId' : ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "food.repository.FoodStoreRepository"
                }
              ],
              "className": "FoodStoreRepository",
              "name": "findByStationId",
              "packageAndClassName": "food.repository.FoodStoreRepository"
            },
            {
              "parameters": [],
              "returnType": "List<FoodStore>",
              "microserviceName": "ts-food-map-service",
              "annotations": [],
              "className": "FoodStoreRepository",
              "name": "findAll",
              "packageAndClassName": "food.repository.FoodStoreRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "food.repository.FoodStoreRepository"
            }
          ],
          "methodCalls": [],
          "name": "FoodStoreRepository",
          "path": "/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java",
          "fileType": "JCLASS"
        },
        {
          "packageName": "food.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "food.repository.TrainFoodRepository"
                }
              ],
              "returnType": "TrainFood",
              "microserviceName": "ts-food-map-service",
              "annotations": [],
              "className": "TrainFoodRepository",
              "name": "findById",
              "packageAndClassName": "food.repository.TrainFoodRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "food.repository.TrainFoodRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-food-map-service",
              "annotations": [],
              "className": "TrainFoodRepository",
              "name": "deleteById",
              "packageAndClassName": "food.repository.TrainFoodRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "food.repository.TrainFoodRepository"
                }
              ],
              "returnType": "List<TrainFood>",
              "microserviceName": "ts-food-map-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'tripId' : ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "food.repository.TrainFoodRepository"
                }
              ],
              "className": "TrainFoodRepository",
              "name": "findByTripId",
              "packageAndClassName": "food.repository.TrainFoodRepository"
            },
            {
              "parameters": [],
              "returnType": "List<TrainFood>",
              "microserviceName": "ts-food-map-service",
              "annotations": [],
              "className": "TrainFoodRepository",
              "name": "findAll",
              "packageAndClassName": "food.repository.TrainFoodRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "food.repository.TrainFoodRepository"
            }
          ],
          "methodCalls": [],
          "name": "TrainFoodRepository",
          "path": "/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-mongodb"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-actuator"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-food-map-service",
              "artifactId": "ts-food-map-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-food-map-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18855
            },
            "spring": {
              "application": {
                "name": "ts-food-map-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-food-map-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-food-map-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-food-service",
      "path": "/ts-food-service",
      "controllers": [
        {
          "packageName": "foodsearch.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/food/cancelFoodOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CancelFoodOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "cfoi",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "CancelFoodOrderResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/food/cancelFoodOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "cancelFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/food/createFoodOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AddFoodOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "afoi",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "AddFoodOrderResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/food/createFoodOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "createFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/food/findAllFoodOrder",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<FoodOrder>",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/food/findAllFoodOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "findAllFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "home",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/food/getFood",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetAllFoodOfTripInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "gati",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "GetAllFoodOfTripResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/food/getFood"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "getFood",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/food/findFoodOrderByOrderId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "FindByOrderIdInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "foi",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "FindByOrderIdResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/food/findFoodOrderByOrderId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "findFoodOrderByOrderId",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/food/updateFoodOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "UpdateFoodOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "ufoi",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "UpdateFoodOrderResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/food/updateFoodOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "updateFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            }
          ],
          "fields": [
            {
              "type": "FoodService",
              "name": "foodService",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "foodsearch.controller.FoodController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "foodsearch.controller.FoodController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getFood",
              "parameterContents": "\"[Food Service]Get the Get Food Request!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "println",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "getFood",
              "parameterContents": "gati.getDate(),gati.getStartStation(),gati.getEndStation(),gati.getTripId()",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "getAllFood",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "gati",
              "objectType": "GetAllFoodOfTripInfo",
              "calledFrom": "getFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "getDate",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "gati",
              "objectType": "GetAllFoodOfTripInfo",
              "calledFrom": "getFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "getStartStation",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "gati",
              "objectType": "GetAllFoodOfTripInfo",
              "calledFrom": "getFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "getEndStation",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "gati",
              "objectType": "GetAllFoodOfTripInfo",
              "calledFrom": "getFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "getTripId",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[Food Service]Try to Create a FoodOrder!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "println",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "createFoodOrder",
              "parameterContents": "afoi",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "createFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "\"[Food Service]Try to Cancel a FoodOrder!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "println",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "cfoi",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "cancelFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "\"[Food Service]Try to Update a FoodOrder!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "println",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "ufoi",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "updateFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "\"[Food Service]Try to Find all FoodOrder!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "println",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "findAllFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findFoodOrderByOrderId",
              "parameterContents": "\"[Food Service]Try to Find all FoodOrder!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "println",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "findFoodOrderByOrderId",
              "parameterContents": "foi.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foi",
              "objectType": "FindByOrderIdInfo",
              "calledFrom": "findFoodOrderByOrderId",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.controller.FoodController"
            }
          ],
          "name": "FoodController",
          "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "foodsearch.service",
          "implementedTypes": [
            "FoodService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "GetAllFoodOfTripResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "getAllFood",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UpdateFoodOrderInfo",
                  "annotations": [],
                  "name": "ufoi",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "UpdateFoodOrderResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "updateFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "FindByOrderIdResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CancelFoodOrderInfo",
                  "annotations": [],
                  "name": "cfoi",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "CancelFoodOrderResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "cancelFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddFoodOrderInfo",
                  "annotations": [],
                  "name": "afoi",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "AddFoodOrderResult",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "List<FoodOrder>",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "findAllFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "FoodOrderRepository",
              "name": "foodOrderRepository",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllFood",
              "parameterContents": "\"data=\" + date + \"start=\" + startStation + \"end=\" + endStation + \"tripid=\" + tripId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "length",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "false",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "\"The tripId is null or too short\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "qti",
              "objectType": "QueryTrainFoodInfo",
              "calledFrom": "getAllFood",
              "parameterContents": "tripId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "url": "/foodmap/getTrainFoodOfTrip",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllFood",
              "parameterContents": "\"http://ts-food-map-service:18855/foodmap/getTrainFoodOfTrip\",qti,GetTrainFoodListResult.class",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "trainFoodListResult",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "trainFoodListResult",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getTrainFoodList",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[Food Service]Get Train Food List!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[Food Service]Get the Get Food Request Failed!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "false",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "trainFoodListResult.getMessage()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "trainFoodListResult",
              "objectType": "GetTrainFoodListResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "url": "/travel/getRouteByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllFood",
              "parameterContents": "\"http://ts-travel-service:12346/travel/getRouteByTripId/\" + tripId,GetRouteResult.class",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stationResult",
              "objectType": "GetRouteResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stationResult",
              "objectType": "GetRouteResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStations",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "startStation",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "q1",
              "objectType": "QueryForId",
              "calledFrom": "getAllFood",
              "parameterContents": "startStation",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "url": "/station/queryForId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllFood",
              "parameterContents": "\"http://ts-station-service:12345/station/queryForId\",q1,String.class",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "size",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "startStationId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "i",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "get",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "i",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "remove",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "endStation",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "q2",
              "objectType": "QueryForId",
              "calledFrom": "getAllFood",
              "parameterContents": "endStation",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "url": "/station/queryForId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllFood",
              "parameterContents": "\"http://ts-station-service:12345/station/queryForId\",q2,String.class",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "size",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "endStationId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "i",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "get",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "i",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "remove",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "qsi",
              "objectType": "QueryFoodStoresInfo",
              "calledFrom": "getAllFood",
              "parameterContents": "s",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStationId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "url": "/foodmap/getFoodStoresOfStation",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllFood",
              "parameterContents": "\"http://ts-food-map-service:18855/foodmap/getFoodStoresOfStation\",qsi,GetFoodStoresListResult.class",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodStoresListResult",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodStoresListResult",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodStoreList",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[Food Service]Get the Food Store!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodStoreListMap",
              "objectType": "FoodStore",
              "calledFrom": "getAllFood",
              "parameterContents": "s,foodStoresListResult.getFoodStoreList()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "put",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodStoresListResult",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodStoreList",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "false",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "foodStoresListResult.getMessage()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodStoresListResult",
              "objectType": "GetFoodStoresListResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "false",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "stationResult.getMessage()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stationResult",
              "objectType": "GetRouteResult",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "true",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "\"Successed\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "trainFoodList",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setTrainFoodList",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllFoodOfTripResult",
              "calledFrom": "getAllFood",
              "parameterContents": "foodStoreListMap",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodStoreListMap",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "createFoodOrder",
              "parameterContents": "UUID.fromString(afoi.getOrderId())",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createFoodOrder",
              "parameterContents": "afoi.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[Food-Service][AddFoodOrder] Order Id Has Existed.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddFoodOrderResult",
              "calledFrom": "createFoodOrder",
              "parameterContents": "false",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddFoodOrderResult",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"OrderId has existed\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddFoodOrderResult",
              "calledFrom": "createFoodOrder",
              "parameterContents": "null",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "UUID.fromString(afoi.getOrderId())",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createFoodOrder",
              "parameterContents": "afoi.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "afoi.getFoodType()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "afoi.getStationName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "afoi.getStoreName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "afoi.getFoodName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "afoi.getPrice()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "createFoodOrder",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "save",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[Food-Service][AddFoodOrder] Success.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddFoodOrderResult",
              "calledFrom": "createFoodOrder",
              "parameterContents": "true",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddFoodOrderResult",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddFoodOrderResult",
              "calledFrom": "createFoodOrder",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "UUID.fromString(cfoi.getOrderId())",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "cfoi.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "cfoi",
              "objectType": "CancelFoodOrderInfo",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "\"[Food-Service][Cancel FoodOrder] Order Id Is Non-Existent.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelFoodOrderResult",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "false",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelFoodOrderResult",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "\"Order Id Is Non-Existent.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelFoodOrderResult",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "null",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "UUID.fromString(cfoi.getOrderId())",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "deleteFoodOrderByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "cfoi.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "cfoi",
              "objectType": "CancelFoodOrderInfo",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "\"[Food-Service][Cancel FoodOrder] Success.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelFoodOrderResult",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "true",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelFoodOrderResult",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CancelFoodOrderResult",
              "calledFrom": "cancelFoodOrder",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "UUID.fromString(ufoi.getId())",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findById",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "ufoi.getId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "ufoi",
              "objectType": "UpdateFoodOrderInfo",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "\"[Food-Service][Update FoodOrder] Order Id Is Non-Existent.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateFoodOrderResult",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "false",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateFoodOrderResult",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "\"Order Id Is Non-Existent.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateFoodOrderResult",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "null",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "ufoi.getFoodType()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "ufoi",
              "objectType": "UpdateFoodOrderInfo",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "ufoi",
              "objectType": "UpdateFoodOrderInfo",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "ufoi.getStationName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "ufoi",
              "objectType": "UpdateFoodOrderInfo",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "ufoi.getStoreName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "ufoi",
              "objectType": "UpdateFoodOrderInfo",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "ufoi.getFoodName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "ufoi",
              "objectType": "UpdateFoodOrderInfo",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "ufoi.getPrice()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "ufoi",
              "objectType": "UpdateFoodOrderInfo",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "save",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "\"[Food-Service][Update FoodOrder] Success.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "println",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateFoodOrderResult",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "true",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateFoodOrderResult",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateFoodOrderResult",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findAll",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "findByOrderId",
              "parameterContents": "UUID.fromString(orderId)",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findByOrderId",
              "parameterContents": "orderId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "FindByOrderIdResult",
              "calledFrom": "findByOrderId",
              "parameterContents": "true",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "FindByOrderIdResult",
              "calledFrom": "findByOrderId",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "FindByOrderIdResult",
              "calledFrom": "findByOrderId",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "FindByOrderIdResult",
              "calledFrom": "findByOrderId",
              "parameterContents": "false",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "FindByOrderIdResult",
              "calledFrom": "findByOrderId",
              "parameterContents": "\"Order Id Is Non-Existent.\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "FindByOrderIdResult",
              "calledFrom": "findByOrderId",
              "parameterContents": "null",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            }
          ],
          "name": "FoodServiceImpl",
          "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "foodsearch.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-food-service",
              "annotations": [],
              "className": "FoodOrderRepository",
              "name": "deleteById",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            },
            {
              "parameters": [],
              "returnType": "List<FoodOrder>",
              "microserviceName": "ts-food-service",
              "annotations": [],
              "className": "FoodOrderRepository",
              "name": "findAll",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "returnType": "FoodOrder",
              "microserviceName": "ts-food-service",
              "annotations": [],
              "className": "FoodOrderRepository",
              "name": "findById",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "returnType": "FoodOrder",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'orderId' : ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "className": "FoodOrderRepository",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            }
          ],
          "methodCalls": [],
          "name": "FoodOrderRepository",
          "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-mongodb"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-actuator"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-food-service",
              "artifactId": "ts-food-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-food-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18856
            },
            "spring": {
              "application": {
                "name": "ts-food-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-food-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-food-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-inside-payment-service",
      "path": "/ts-inside-payment-service",
      "controllers": [
        {
          "packageName": "inside_payment.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/inside_payment/drawBack",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DrawBackInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/drawBack"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "drawBack",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/inside_payment/addMoney",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AddMoneyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/addMoney"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "addMoney",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/inside_payment/queryAccount",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<Balance>",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/queryAccount"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "queryAccount",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/inside_payment/queryPayment",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<Payment>",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/queryPayment"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "queryPayment",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/inside_payment/payDifference",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PaymentDifferenceInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                },
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/payDifference"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "payDifference",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/inside_payment/queryAddMoney",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<AddMoney>",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/queryAddMoney"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "queryAddMoney",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/hello1_callback",
              "httpMethod": "ALL",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "defaultValue": "satan",
                        "value": "result"
                      },
                      "name": "RequestParam",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "cal_back",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello1_callback"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "hello1_callback",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/inside_payment/createAccount",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateAccountInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/createAccount"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "createAccount",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/inside_payment/pay",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                },
                {
                  "type": "PaymentInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/pay"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "pay",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            }
          ],
          "fields": [
            {
              "type": "InsidePaymentService",
              "name": "service",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "pay",
              "parameterContents": "\"[Inside Payment Service][Pay] Pay for:\" + info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "println",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "pay",
              "parameterContents": "info,request",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "pay",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "createAccount",
              "parameterContents": "info",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "createAccount",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "addMoney",
              "parameterContents": "info",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "addMoney",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "queryPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "queryPayment",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "queryAccount",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "drawBack",
              "parameterContents": "info",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "drawBack",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "payDifference",
              "parameterContents": "info,request",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "payDifference",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "queryAddMoney",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "queryAddMoney",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "hello1_callback",
              "parameterContents": "\"Call Back Result:\" + cal_back",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "println",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "hello1_callback",
              "parameterContents": "\"-------------external call back-------------\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "println",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            }
          ],
          "name": "InsidePaymentController",
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "inside_payment.service",
          "implementedTypes": [
            "InsidePaymentService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [],
              "returnType": "List<Balance>",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "queryAccount",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "List<AddMoney>",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "queryAddMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddMoneyInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "addMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Payment",
                  "annotations": [],
                  "name": "payment",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "initPayment",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                },
                {
                  "type": "PaymentInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "pay",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "ModifyOrderStatusResult",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [],
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                },
                {
                  "type": "PaymentDifferenceInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "payDifference",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CreateAccountInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "createAccount",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DrawBackInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "drawBack",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userId",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [],
              "className": "InsidePaymentServiceImpl",
              "name": "queryAccount",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "List<Payment>",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "queryPayment",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "PaymentRepository",
              "name": "paymentRepository",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "type": "AsyncTask",
              "name": "asyncTask",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "type": "AddMoneyRepository",
              "name": "addMoneyRepository",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getValue",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "pay",
              "parameterContents": "request,\"loginId\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getCookieByName",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "getOrderByIdInfo",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/order/getById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "pay",
              "parameterContents": "\"http://ts-order-service:12031/order/getById\",getOrderByIdInfo,GetOrderResult.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/orderOther/getById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "pay",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/getById\",getOrderByIdInfo,GetOrderResult.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getCode",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "pay",
              "parameterContents": "\"[Inside Payment Service][Pay] Error. Order status Not allowed to Pay.\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "println",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "result.getOrder().getPrice()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "pay",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMonies",
              "objectType": "AddMoney",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "pay",
              "parameterContents": "new BigDecimal(p.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "p",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "pay",
              "parameterContents": "new BigDecimal(result.getOrder().getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "AddMoney",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "AddMoney",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "pay",
              "parameterContents": "new BigDecimal(addMoney.getMoney())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "pay",
              "parameterContents": "money",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "compareTo",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "OutsidePaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "OutsidePaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "OutsidePaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "result.getOrder().getPrice()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/payment/pay",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "pay",
              "parameterContents": "\"http://ts-payment-service:19001/payment/pay\",outsidePaymentInfo,Boolean.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "PaymentType.O",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "info.getTripId(),info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "info.getTripId(),info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "PaymentType.P",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "createAccount",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAccountInfo",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "AddMoney",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "size",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "createAccount",
              "parameterContents": "info.getMoney()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAccountInfo",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "createAccount",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAccountInfo",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "createAccount",
              "parameterContents": "AddMoneyType.A",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "createAccount",
              "parameterContents": "addMoney",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "addMoney",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddMoneyInfo",
              "calledFrom": "addMoney",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "addMoney",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddMoneyInfo",
              "calledFrom": "addMoney",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "addMoney",
              "parameterContents": "info.getMoney()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddMoneyInfo",
              "calledFrom": "addMoney",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "addMoney",
              "parameterContents": "AddMoneyType.A",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "addMoney",
              "parameterContents": "addMoney",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findAll",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "ite",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "ite",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "addMoney.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "containsKey",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "addMoney.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "get",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "addMoney.getUserId(),money.add(new BigDecimal(addMoney.getMoney())).toString()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "put",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(addMoney.getMoney())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "addMoney.getUserId(),addMoney.getMoney()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "put",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Set",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "ite1",
              "objectType": "Iterator",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "ite1",
              "objectType": "Iterator",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "entry",
              "objectType": "Entry",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getKey",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "entry",
              "objectType": "Entry",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getValue",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "queryAccount",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "iterator",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "iterator",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "expand",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(p.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "p",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(totalExpand)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "subtract",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "balance",
              "objectType": "Balance",
              "calledFrom": "queryAccount",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "balance",
              "objectType": "Balance",
              "calledFrom": "queryAccount",
              "parameterContents": "balanceMoney",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setBalance",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Balance",
              "calledFrom": "queryAccount",
              "parameterContents": "balance",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "queryAccount",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "queryAccount",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMonies",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(p.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "p",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(addMoney.getMoney())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "totalExpand",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "subtract",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "queryPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findAll",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "drawBack",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DrawBackInfo",
              "calledFrom": "drawBack",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "drawBack",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DrawBackInfo",
              "calledFrom": "drawBack",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "drawBack",
              "parameterContents": "info.getMoney()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DrawBackInfo",
              "calledFrom": "drawBack",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "drawBack",
              "parameterContents": "AddMoneyType.D",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "drawBack",
              "parameterContents": "addMoney",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "info.getPrice()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "payDifference",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "payDifference",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMonies",
              "objectType": "AddMoney",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "new BigDecimal(p.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "p",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "new BigDecimal(info.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "AddMoney",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "AddMoney",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "new BigDecimal(addMoney.getMoney())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "money",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "compareTo",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "OutsidePaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "OutsidePaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "OutsidePaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "info.getPrice()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/payment/pay",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "payDifference",
              "parameterContents": "\"http://ts-payment-service:19001/payment/pay\",outsidePaymentInfo,Boolean.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "PaymentType.E",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "payDifference",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "PaymentType.E",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "payDifference",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "queryAddMoney",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findAll",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "setOrderStatus",
              "parameterContents": "orderId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "setOrderStatus",
              "parameterContents": "1",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "setOrderStatus",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "setOrderStatus",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/order/modifyOrderStatus",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "setOrderStatus",
              "parameterContents": "\"http://ts-order-service:12031/order/modifyOrderStatus\",info,ModifyOrderStatusResult.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/orderOther/modifyOrderStatus",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "setOrderStatus",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/modifyOrderStatus\",info,ModifyOrderStatusResult.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "initPayment",
              "parameterContents": "payment.getId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findById",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "initPayment",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "initPayment",
              "parameterContents": "\"[Inside Payment Service][Init Payment] Already Exists:\" + payment.getId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "println",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            }
          ],
          "name": "InsidePaymentServiceImpl",
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-inside-payment-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-inside-payment-service",
              "artifactId": "ts-inside-payment-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-inside-payment-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18673
            },
            "spring": {
              "application": {
                "name": "ts-inside-payment-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-inside-payment-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-inside-payment-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-login-service",
      "path": "/ts-login-service",
      "controllers": [
        {
          "packageName": "login.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/login",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "login.controller.AccountLoginController"
                    }
                  ],
                  "name": "YsbCaptcha",
                  "packageAndClassName": "login.controller.AccountLoginController"
                },
                {
                  "type": "LoginInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "login.controller.AccountLoginController"
                    }
                  ],
                  "name": "li",
                  "packageAndClassName": "login.controller.AccountLoginController"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "login.controller.AccountLoginController"
                }
              ],
              "returnType": "LoginResult",
              "microserviceName": "ts-login-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/login"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "login.controller.AccountLoginController"
                }
              ],
              "className": "AccountLoginController",
              "name": "login",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "url": "/logout",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "LogoutInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "login.controller.AccountLoginController"
                    }
                  ],
                  "name": "li",
                  "packageAndClassName": "login.controller.AccountLoginController"
                },
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "login.controller.AccountLoginController"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "login.controller.AccountLoginController"
                }
              ],
              "returnType": "LogoutResult",
              "microserviceName": "ts-login-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/logout"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "login.controller.AccountLoginController"
                }
              ],
              "className": "AccountLoginController",
              "name": "logout",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-login-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "login.controller.AccountLoginController"
                }
              ],
              "className": "AccountLoginController",
              "name": "home",
              "packageAndClassName": "login.controller.AccountLoginController"
            }
          ],
          "fields": [
            {
              "type": "AccountLoginService",
              "name": "accountService",
              "packageAndClassName": "login.controller.AccountLoginController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "login.controller.AccountLoginController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "YsbCaptcha",
              "objectType": "String",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "length",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getEmail",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "length",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getEmail",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getPassword",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "length",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getPassword",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getVerificationCode",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "length",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getEmail",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "errorResult",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "null",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "setAccount",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "errorResult",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "\"Verification Code or Email or Password format wrong.\"",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "setMessage",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "errorResult",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "false",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "setStatus",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "errorResult",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "null",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "setToken",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[Login Service][Login] Verification Code:\" + li.getVerificationCode() + \" VerifyCookie:\" + YsbCaptcha",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "println",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getVerificationCode",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "accountService",
              "objectType": "AccountLoginService",
              "calledFrom": "login",
              "parameterContents": "li,YsbCaptcha,response",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "login",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "logout",
              "parameterContents": "\"[Login Service][Logout] Logout ID:\" + li.getId() + \" Token:\" + li.getToken()",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "println",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logout",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getId",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logout",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "getToken",
              "packageAndClassName": "login.controller.AccountLoginController"
            },
            {
              "objectName": "accountService",
              "objectType": "AccountLoginService",
              "calledFrom": "logout",
              "parameterContents": "li,request,response",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginController",
              "name": "logout",
              "packageAndClassName": "login.controller.AccountLoginController"
            }
          ],
          "name": "AccountLoginController",
          "path": "/ts-login-service/src/main/java/login/controller/AccountLoginController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "login.service",
          "implementedTypes": [
            "AccountLoginService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                },
                {
                  "type": "LogoutInfo",
                  "annotations": [],
                  "name": "li",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                }
              ],
              "returnType": "LogoutResult",
              "microserviceName": "ts-login-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                }
              ],
              "className": "AccountLoginServiceImpl",
              "name": "logout",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "LoginInfo",
                  "annotations": [],
                  "name": "li",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "YsbCaptcha",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                }
              ],
              "returnType": "LoginResult",
              "microserviceName": "ts-login-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                }
              ],
              "className": "AccountLoginServiceImpl",
              "name": "login",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "login.service.AccountLoginServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-login-service",
              "annotations": [],
              "className": "AccountLoginServiceImpl",
              "name": "handleLogOutResponse",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "int",
              "name": "COOKIE_EXPIRED",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "requestHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "login",
              "parameterContents": "\"Cookie\",\"YsbCaptcha=\" + YsbCaptcha",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "add",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "body",
              "objectType": "MultiValueMap",
              "calledFrom": "login",
              "parameterContents": "\"verificationCode\",li.getVerificationCode()",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "add",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "getVerificationCode",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "url": "/verification/verify",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "login",
              "parameterContents": "\"http://ts-verification-code-service:15678/verification/verify\",HttpMethod.POST,requestEntity,String.class",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "exchange",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "rssResponse",
              "objectType": "ResponseEntity",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "getBody",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[Login Service][Login] Verification Result:\" + verifyResult",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "println",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "verifyResult",
              "objectType": "String",
              "calledFrom": "login",
              "parameterContents": "\"true\"",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "contains",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "verifyCodeLr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "null",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "verifyCodeLr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "null",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "setToken",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "verifyCodeLr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "false",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "verifyCodeLr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "\"Verification Code Wrong.\"",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "url": "/account/login",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "login",
              "parameterContents": "\"http://ts-sso-service:12349/account/login\",li,LoginResult.class",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[Login Service] Status:\" + lr.getStatus()",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "println",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[Login Service] Status: false. Cookie wrong.\"",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "println",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[Login Service] Status: true. Put Cookie.\"",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "println",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "login",
              "parameterContents": "response,\"loginId\",lr.getAccount().getId().toString(),COOKIE_EXPIRED",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "addCookie",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "toString",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "getId",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "login",
              "parameterContents": "response,\"loginToken\",lr.getToken(),COOKIE_EXPIRED",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "addCookie",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "getToken",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "url": "/logout",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "logout",
              "parameterContents": "\"http://ts-sso-service:12349/logout\",li,LogoutResult.class",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LogoutResult",
              "calledFrom": "logout",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "logout",
              "parameterContents": "\"[Login Service][Logout] Success\"",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "println",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "logout",
              "parameterContents": "\"[Login Service][Logout] Fail.Reason:\" + lr.getMessage()",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "println",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LogoutResult",
              "calledFrom": "logout",
              "parameterContents": "",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "logout",
              "parameterContents": "request,response",
              "microserviceName": "ts-login-service",
              "className": "AccountLoginServiceImpl",
              "name": "handleLogOutResponse",
              "packageAndClassName": "login.service.AccountLoginServiceImpl"
            }
          ],
          "name": "AccountLoginServiceImpl",
          "path": "/ts-login-service/src/main/java/login/service/AccountLoginServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 12342
            },
            "spring": {
              "application": {
                "name": "ts-login-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-login-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-login-service",
              "artifactId": "ts-login-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-login-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-notification-service",
      "path": "/ts-notification-service",
      "controllers": [
        {
          "packageName": "notification.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/notification/order_create_success",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "NotifyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/notification/order_create_success"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "order_create_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/notification/preserve_success",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "NotifyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/notification/preserve_success"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "preserve_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/notification/order_changed_success",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "NotifyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/notification/order_changed_success"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "order_changed_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/notification/order_cancel_success",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "NotifyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/notification/order_cancel_success"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "order_cancel_success",
              "packageAndClassName": "notification.controller.NotificationController"
            }
          ],
          "fields": [
            {
              "type": "NotificationService",
              "name": "service",
              "packageAndClassName": "notification.controller.NotificationController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "notification.controller.NotificationController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "preserve_success",
              "parameterContents": "info",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "preserve_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "order_create_success",
              "parameterContents": "info",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "order_create_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "order_changed_success",
              "parameterContents": "info",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "order_changed_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "order_cancel_success",
              "parameterContents": "info",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "order_cancel_success",
              "packageAndClassName": "notification.controller.NotificationController"
            }
          ],
          "name": "NotificationController",
          "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "notification.service",
          "implementedTypes": [],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "template",
                  "packageAndClassName": "notification.service.MailService"
                },
                {
                  "type": "Mail",
                  "annotations": [],
                  "name": "mail",
                  "packageAndClassName": "notification.service.MailService"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-notification-service",
              "annotations": [],
              "className": "MailService",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.MailService"
            }
          ],
          "fields": [
            {
              "type": "Configuration",
              "name": "freemarkerConfig",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "type": "JavaMailSender",
              "name": "sender",
              "packageAndClassName": "notification.service.MailService"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "notification.service.MailService"
            }
          ],
          "methodCalls": [
            {
              "objectName": "sender",
              "objectType": "JavaMailSender",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "createMimeMessage",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "freemarkerConfig",
              "objectType": "Configuration",
              "calledFrom": "sendEmail",
              "parameterContents": "this.getClass(),\"/templates\"",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setClassForTemplateLoading",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "",
              "objectType": "MailService",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getClass",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "freemarkerConfig",
              "objectType": "Configuration",
              "calledFrom": "sendEmail",
              "parameterContents": "template",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getTemplate",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "FreeMarkerTemplateUtils",
              "objectType": "Solving FreeMarkerTemplateUtils",
              "calledFrom": "sendEmail",
              "parameterContents": "t,mail.getModel()",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "processTemplateIntoString",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getModel",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "helper",
              "objectType": "MimeMessageHelper",
              "calledFrom": "sendEmail",
              "parameterContents": "mail.getMailTo()",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setTo",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getMailTo",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "helper",
              "objectType": "MimeMessageHelper",
              "calledFrom": "sendEmail",
              "parameterContents": "text,true",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setText",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "helper",
              "objectType": "MimeMessageHelper",
              "calledFrom": "sendEmail",
              "parameterContents": "\"fdse_microservices@163.com\"",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setFrom",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "helper",
              "objectType": "MimeMessageHelper",
              "calledFrom": "sendEmail",
              "parameterContents": "mail.getMailSubject()",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setSubject",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getMailSubject",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "sender",
              "objectType": "JavaMailSender",
              "calledFrom": "sendEmail",
              "parameterContents": "message",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "send",
              "packageAndClassName": "notification.service.MailService"
            }
          ],
          "name": "MailService",
          "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
          "fileType": "JCLASS"
        },
        {
          "packageName": "notification.service",
          "implementedTypes": [
            "NotificationService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "NotifyInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "notification.service.NotificationServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "notification.service.NotificationServiceImpl"
                }
              ],
              "className": "NotificationServiceImpl",
              "name": "preserve_success",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "MailService",
              "name": "mailService",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "type": "JavaMailSender",
              "name": "mailSender",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "preserve_success",
              "parameterContents": "\"fdse_microservices@163.com\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailFrom",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "preserve_success",
              "parameterContents": "info.getEmail()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailTo",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "preserve_success",
              "parameterContents": "\"Preserve Success\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailSubject",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserve_success",
              "parameterContents": "\"username\",info.getUsername()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserve_success",
              "parameterContents": "\"startingPlace\",info.getStartingPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserve_success",
              "parameterContents": "\"endPlace\",info.getEndPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserve_success",
              "parameterContents": "\"startingTime\",info.getStartingTime()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserve_success",
              "parameterContents": "\"date\",info.getDate()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getDate",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserve_success",
              "parameterContents": "\"seatClass\",info.getSeatClass()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserve_success",
              "parameterContents": "\"seatNumber\",info.getSeatNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserve_success",
              "parameterContents": "\"price\",info.getPrice()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "preserve_success",
              "parameterContents": "model",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setModel",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mailService",
              "objectType": "MailService",
              "calledFrom": "preserve_success",
              "parameterContents": "mail,\"preserve_success.ftl\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "preserve_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "printStackTrace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_create_success",
              "parameterContents": "\"fdse_microservices@163.com\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailFrom",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_create_success",
              "parameterContents": "info.getEmail()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailTo",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_create_success",
              "parameterContents": "\"Order Create Success\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailSubject",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_create_success",
              "parameterContents": "\"username\",info.getUsername()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_create_success",
              "parameterContents": "\"startingPlace\",info.getStartingPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_create_success",
              "parameterContents": "\"endPlace\",info.getEndPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_create_success",
              "parameterContents": "\"startingTime\",info.getStartingTime()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_create_success",
              "parameterContents": "\"date\",info.getDate()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getDate",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_create_success",
              "parameterContents": "\"seatClass\",info.getSeatClass()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_create_success",
              "parameterContents": "\"seatNumber\",info.getSeatNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_create_success",
              "parameterContents": "\"orderNumber\",info.getOrderNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getOrderNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_create_success",
              "parameterContents": "model",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setModel",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mailService",
              "objectType": "MailService",
              "calledFrom": "order_create_success",
              "parameterContents": "mail,\"order_create_success.ftl\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "order_create_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "printStackTrace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"fdse_microservices@163.com\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailFrom",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_changed_success",
              "parameterContents": "info.getEmail()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailTo",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"Order Changed Success\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailSubject",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"username\",info.getUsername()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"startingPlace\",info.getStartingPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"endPlace\",info.getEndPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"startingTime\",info.getStartingTime()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"date\",info.getDate()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getDate",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"seatClass\",info.getSeatClass()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"seatNumber\",info.getSeatNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_changed_success",
              "parameterContents": "\"orderNumber\",info.getOrderNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getOrderNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_changed_success",
              "parameterContents": "model",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setModel",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mailService",
              "objectType": "MailService",
              "calledFrom": "order_changed_success",
              "parameterContents": "mail,\"order_changed_success.ftl\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "order_changed_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "printStackTrace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_cancel_success",
              "parameterContents": "\"fdse_microservices@163.com\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailFrom",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_cancel_success",
              "parameterContents": "info.getEmail()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailTo",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_cancel_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_cancel_success",
              "parameterContents": "\"Order Cancel Success\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailSubject",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_cancel_success",
              "parameterContents": "\"username\",info.getUsername()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_cancel_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "order_cancel_success",
              "parameterContents": "\"price\",info.getPrice()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "order_cancel_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "order_cancel_success",
              "parameterContents": "model",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setModel",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mailService",
              "objectType": "MailService",
              "calledFrom": "order_cancel_success",
              "parameterContents": "mail,\"order_cancel_success.ftl\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "order_cancel_success",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "printStackTrace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            }
          ],
          "name": "NotificationServiceImpl",
          "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-notification-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-mail"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-freemarker"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-notification-service",
              "artifactId": "ts-notification-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-notification-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 17853
            },
            "spring": {
              "application": {
                "name": "ts-notification-service"
              },
              "mail": {
                "host": "smtp.163.com",
                "username": "fdse_microservices@163.com",
                "password": "fdse1234",
                "properties": {
                  "mail": {
                    "smtp": {
                      "auth": true,
                      "starttls": {
                        "enable": true,
                        "required": true
                      }
                    }
                  }
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-notification-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-order-other-service",
      "path": "/ts-order-other-service",
      "controllers": [
        {
          "packageName": "other.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/orderOther/calculate",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CalculateSoldTicketInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "csti",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "CalculateSoldTicketResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orderOther/calculate"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "calculateSoldTicket",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/price",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetOrderPrice",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "GetOrderPriceResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orderOther/price"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "getOrderPrice",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/getTicketListByDateAndTripId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "SeatRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "seatRequest",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "LeftTicketInfo",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/orderOther/getTicketListByDateAndTripId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "getTicketListByDateAndTripId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "DeleteOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "deleteOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/payOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PayOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "PayOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orderOther/payOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "payOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ChangeOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "orderInfo",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "ChangeOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "saveOrderInfo",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "home",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/adminUpdate",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "order",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "UpdateOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/adminUpdate"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "updateOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/adminAddOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "order",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "AddOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orderOther/adminAddOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "addcreateNewOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/query",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "qi",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orderOther/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "queryOrders",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/getOrderOtherInfoForSecurity",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetOrderInfoForSecurity",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "GetOrderInfoForSecurityResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/getOrderOtherInfoForSecurity"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "securityInfoCheck",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/findAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "QueryOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/findAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "findAllOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [],
              "className": "OrderOtherController",
              "name": "verifySsoLogin",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/modifyOrderStatus",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ModifyOrderStatusInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "ModifyOrderStatusResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/modifyOrderStatus"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "modifyOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "coi",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "CreateOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orderOther/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "createNewOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/orderOther/getById",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetOrderByIdInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "GetOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orderOther/getById"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "getOrderById",
              "packageAndClassName": "other.controller.OrderOtherController"
            }
          ],
          "fields": [
            {
              "type": "OrderOtherService",
              "name": "orderService",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "other.controller.OrderOtherController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "other.controller.OrderOtherController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "\"[Order Other Service][Get Sold Ticket] Date:\" + seatRequest.getTravelDate().toString()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "SeatRequest",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "toString",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getTravelDate",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "seatRequest",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getSoldTickets",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[Order Other Service][Create Order] Create Order form \" + coi.getOrder().getFrom() + \" --->\" + coi.getOrder().getTo() + \" at \" + coi.getOrder().getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getFrom",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getTo",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getTravelDate",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createNewOrder",
              "parameterContents": "coi.getLoginToken()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "verifySsoLogin",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getLoginToken",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "isStatus",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[Order Other Service][Verify Login] Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "createNewOrder",
              "parameterContents": "coi.getOrder()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "create",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[Order Other Service][Verify Login] Fail\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "createNewOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "setStatus",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "setMessage",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "createNewOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "setOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "addcreateNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "addNewOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Query Orders] Query Orders for \" + loginId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrders",
              "parameterContents": "loginToken",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "verifySsoLogin",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "isStatus",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Verify Login] Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "queryOrders",
              "parameterContents": "qi,loginId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "queryOrders",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Verify Login] Fail\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "\"[Order Other Service][Calculate Sold Tickets] Date:\" + csti.getTravelDate() + \" TrainNumber:\" + csti.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getTravelDate",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getTrainNumber",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "csti",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "queryAlreadySoldOrders",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[Order Other Service][Get Order Price] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderPrice",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "getOrderPrice",
              "parameterContents": "info",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderPrice",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "payOrder",
              "parameterContents": "\"[Order Other Service][Pay Order] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "info",
              "objectType": "PayOrderInfo",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "payOrder",
              "parameterContents": "info",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "payOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderById",
              "parameterContents": "\"[Order Other Service][Get Order By Id] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "getOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "getOrderById",
              "parameterContents": "info",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderById",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"[Order Other Service][Modify Order Status] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "info",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "modifyOrder",
              "parameterContents": "info",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "modifyOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "\"[Order Other Service][Security Info Get]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "info",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "checkSecurityAboutOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "orderInfo.getLoginToken()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "verifySsoLogin",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getLoginToken",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "isStatus",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "\"[Order Other Service][Verify Login] Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "orderInfo.getOrder()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "saveChanges",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "\"[Order Other Service][Verify Login] Fail\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "setStatus",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "setMessage",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "setOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "updateOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "updateOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[Order Other Service][Delete Order] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "info",
              "objectType": "DeleteOrderInfo",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "deleteOrder",
              "parameterContents": "info",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "deleteOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findAllOrder",
              "parameterContents": "\"[Order Other Service][Find All Order]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "findAllOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getAllOrders",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"[Order Other Service][Verify Login] Verifying....\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "println",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"http://ts-sso-service:12349/verifyLoginToken/\" + loginToken,VerifyResult.class",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getForObject",
              "packageAndClassName": "other.controller.OrderOtherController"
            }
          ],
          "name": "OrderOtherController",
          "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "other.service",
          "implementedTypes": [
            "OrderOtherService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "SeatRequest",
                  "annotations": [],
                  "name": "seatRequest",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "LeftTicketInfo",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "getSoldTickets",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ModifyOrderStatusInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "ModifyOrderStatusResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "modifyOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteOrderInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "DeleteOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "deleteOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetOrderPrice",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "GetOrderPriceResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "getOrderPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "PayOrderInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "PayOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "payOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetOrderInfoForSecurity",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "GetOrderInfoForSecurityResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "checkSecurityAboutOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "OrderAlterInfo",
                  "annotations": [],
                  "name": "oai",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "OrderAlterResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "alterOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "qi",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "queryOrders",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "UpdateOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CalculateSoldTicketInfo",
                  "annotations": [],
                  "name": "csti",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "CalculateSoldTicketResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "queryAlreadySoldOrders",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Order",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "CreateOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "create",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "QueryOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "getAllOrders",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "ChangeOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "saveChanges",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetOrderByIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "GetOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "getOrderById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CancelOrderInfo",
                  "annotations": [],
                  "name": "coi",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "CancelOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "cancelOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "AddOrderResult",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "addNewOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "initOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "OrderOtherRepository",
              "name": "orderOtherRepository",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "getSoldTickets",
              "parameterContents": "seatRequest.getTravelDate(),seatRequest.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "Integer.parseInt(tempOrder.getSeatNumber())",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatNo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getSeatNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getFrom()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getTo()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ticketSet",
              "objectType": "Set",
              "calledFrom": "getSoldTickets",
              "parameterContents": "ticket",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "add",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "getSoldTickets",
              "parameterContents": "ticketSet",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSoldTickets",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "findOrderById",
              "parameterContents": "id",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Order Other Service][Create Order] Ready Create Order\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "create",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "accountOrders",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "contains",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Order Other Service][Order Create] Fail.Order already exists.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "\"Order already exist\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Order Other Service][Order Create] Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Order Other Service][Order Create] Price:\" + order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "initOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "initOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "initOrder",
              "parameterContents": "\"[Order Other Service][Init Order] Order Already Exists ID:\" + order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPreviousOrderId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[Order Other Service][Alter Order] Fail.Order do not exist.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "\"Old Order Does Not Exists\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOldOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setNewOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "saveChanges",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getNewOrderInfo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oai.getNewOrderInfo()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "create",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getNewOrderInfo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOldOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "newOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setNewOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[Order Other Service][Alter Order] Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "cor.getMessage()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOldOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setNewOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "queryOrders",
              "parameterContents": "UUID.fromString(accountId)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "queryOrders",
              "parameterContents": "accountId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Query Order][Step 1] Get Orders Number of Account:\" + list.size()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableStateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableBoughtDateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableTravelDateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableStateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getState",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Query Order][Step 2][Check Status Fits End]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableTravelDateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getTravelDateEnd()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "before",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDateEnd",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateStart()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "after",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDateStart",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Query Order][Step 2][Check Travel Date End]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableBoughtDateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateEnd()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "before",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDateEnd",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateStart()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "after",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDateStart",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Query Order][Step 2][Check Bought Date End]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "finalList",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "tempOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "add",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Query Order][Step 2][Check All Requirement End]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Query Order] Get order num:\" + finalList.size()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "finalList",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Other Service][Query Order] Get order num:\" + list.size()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[Order Other Service][Modify Order] Fail.Order not found.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getCoachNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setCoachNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCoachNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getStatus()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getContactsName()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getContactsName",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getContactsDocumentNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getDocumentType()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[Order Other Service] Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "coi",
              "objectType": "CancelOrderInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "cancelOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Order Other Service][Cancel Order] Fail.Order not found.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "cancelOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Order Other Service][Cancel Order] Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "csti.getTravelDate(),csti.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "csti.getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "csti.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "\"[Order Other Service][Calculate Sold Ticket] Get Orders Number:\" + orders.size()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NONE",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getNoSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setNoSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getNoSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BUSINESS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getBusinessSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setBusinessSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBusinessSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getFirstClassSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setFirstClassSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFirstClassSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSecondClassSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSecondClassSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSecondClassSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HARDSEAT",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHardSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setHardSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getHardSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SOFTSEAT",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSoftSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSoftSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSoftSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HARDBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHardBed() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setHardBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getHardBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SOFTBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSoftBed() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSoftBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSoftBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HIGHSOFTBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHighSoftBed() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setHighSoftBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getHighSoftBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "\"[Order Other Service][Calculate Sold Tickets] Seat class not exists. Order ID:\" + order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findAll",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "modifyOrder",
              "parameterContents": "UUID.fromString(info.getOrderId())",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "modifyOrder",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "modifyOrder",
              "parameterContents": "info.getStatus()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "modifyOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "getOrderPrice",
              "parameterContents": "UUID.fromString(info.getOrderId())",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getOrderPrice",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderPrice",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"-1.0\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[Order Other Service][Get Order Price] Price:\" + order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "payOrder",
              "parameterContents": "UUID.fromString(info.getOrderId())",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "payOrder",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PayOrderInfo",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payOrder",
              "parameterContents": "OrderStatus.PAID.getCode()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "payOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "getOrderById",
              "parameterContents": "UUID.fromString(info.getOrderId())",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getOrderById",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "getOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "UUID.fromString(info.getAccountId())",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "info.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderInfoForSecurity",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderInfoForSecurity",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCheckDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "dateFrom",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "Calendar.HOUR_OF_DAY,-1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "add",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "dateFrom",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "after",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "countOrderInOneHour",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrderNumInLastOneHour",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "countTotalValidOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrderNumOfValidOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteOrder",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DeleteOrderInfo",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderUuid",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"Order Not Exist.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderUuid",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[Order Service][Admin Add Order] Ready Add Order.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "addNewOrder",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "accountOrders",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "contains",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[Order Service][Admin Add Order] Fail.Order already exists.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"Order already exist\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[Order Service][Admin Add Order] Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[Order Service][Admin Add Order] Price:\" + order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[Order Service][Admin Update Order] Fail.Order not found.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getCoachNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setCoachNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCoachNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getStatus()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getContactsName()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getContactsName",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getContactsDocumentNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getDocumentType()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "updateOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[Order Service] [Admin Update Order] Success.\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            }
          ],
          "name": "OrderOtherServiceImpl",
          "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "other.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "returnType": "Order",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'id': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "className": "OrderOtherRepository",
              "name": "findById",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-order-other-service",
              "annotations": [],
              "className": "OrderOtherRepository",
              "name": "deleteById",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            },
            {
              "parameters": [
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainNumber",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'travelDate' : ?0 , trainNumber : ?1 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "className": "OrderOtherRepository",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'accountId' : ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "className": "OrderOtherRepository",
              "name": "findByAccountId",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-other-service",
              "annotations": [],
              "className": "OrderOtherRepository",
              "name": "findAll",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            }
          ],
          "methodCalls": [],
          "name": "OrderOtherRepository",
          "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-order-other-service",
              "artifactId": "ts-order-other-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-order-other-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12032
            },
            "spring": {
              "application": {
                "name": "ts-order-other-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-order-other-mongo",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-order-other-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-order-service",
      "path": "/ts-order-service",
      "controllers": [
        {
          "packageName": "order.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "home",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/modifyOrderStatus",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ModifyOrderStatusInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "ModifyOrderStatusResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/modifyOrderStatus"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "modifyOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/getOrderInfoForSecurity",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetOrderInfoForSecurity",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "GetOrderInfoForSecurityResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/getOrderInfoForSecurity"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "securityInfoCheck",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/getTicketListByDateAndTripId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "SeatRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "seatRequest",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "LeftTicketInfo",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/order/getTicketListByDateAndTripId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "getTicketListByDateAndTripId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/payOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PayOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "PayOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/payOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "payOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/query",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "qi",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "queryOrders",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/findAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "QueryOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/findAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "findAllOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "coi",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "CreateOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "createNewOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/adminUpdate",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "order",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "UpdateOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/adminUpdate"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "updateOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "DeleteOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "deleteOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ChangeOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "orderInfo",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "ChangeOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "saveOrderInfo",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-order-service",
              "annotations": [],
              "className": "OrderController",
              "name": "verifySsoLogin",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/calculate",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CalculateSoldTicketInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "csti",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "CalculateSoldTicketResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/calculate"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "calculateSoldTicket",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/getById",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetOrderByIdInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "GetOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/getById"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "getOrderById",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/adminAddOrder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "order",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "AddOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/adminAddOrder"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "addcreateNewOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/order/price",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetOrderPrice",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "GetOrderPriceResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/price"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "getOrderPrice",
              "packageAndClassName": "order.controller.OrderController"
            }
          ],
          "fields": [
            {
              "type": "OrderService",
              "name": "orderService",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "order.controller.OrderController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "order.controller.OrderController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "\"[Order Service][Get Sold Ticket] Date:\" + seatRequest.getTravelDate().toString()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "SeatRequest",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "toString",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getTravelDate",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "seatRequest",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getSoldTickets",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[Order Service][Create Order] Create Order form \" + coi.getOrder().getFrom() + \" --->\" + coi.getOrder().getTo() + \" at \" + coi.getOrder().getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getFrom",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getTo",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getTravelDate",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createNewOrder",
              "parameterContents": "coi.getLoginToken()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "verifySsoLogin",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getLoginToken",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "isStatus",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[Order Service][Verify Login] Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "createNewOrder",
              "parameterContents": "coi.getOrder()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "create",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[Order Service][Verify Login] Fail\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "createNewOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "setStatus",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "setMessage",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "createNewOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "setOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "addcreateNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "addNewOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Query Orders] Query Orders for \" + loginId",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrders",
              "parameterContents": "loginToken",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "verifySsoLogin",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "isStatus",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Verify Login] Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "queryOrders",
              "parameterContents": "qi,loginId",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "queryOrders",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Verify Login] Fail\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "\"[Order Service][Calculate Sold Tickets] Date:\" + csti.getTravelDate() + \" TrainNumber:\" + csti.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getTravelDate",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getTrainNumber",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "csti",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "queryAlreadySoldOrders",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[Order Service][Get Order Price] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderPrice",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "getOrderPrice",
              "parameterContents": "info",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderPrice",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "payOrder",
              "parameterContents": "\"[Order Service][Pay Order] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "info",
              "objectType": "PayOrderInfo",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "payOrder",
              "parameterContents": "info",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "payOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderById",
              "parameterContents": "\"[Order Service][Get Order By Id] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "getOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "getOrderById",
              "parameterContents": "info",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderById",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"[Order Service][Modify Order Status] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "info",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "modifyOrder",
              "parameterContents": "info",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "modifyOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "\"[Order Service][Security Info Get]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "info",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "checkSecurityAboutOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "orderInfo.getLoginToken()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "verifySsoLogin",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getLoginToken",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "isStatus",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "\"[Order Service][Verify Login] Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "orderInfo.getOrder()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "saveChanges",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "\"[Order Service][Verify Login] Fail\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "setStatus",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "setMessage",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "setOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "updateOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "updateOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[Order Service][Delete Order] Order Id:\" + info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "info",
              "objectType": "DeleteOrderInfo",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "deleteOrder",
              "parameterContents": "info",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "deleteOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findAllOrder",
              "parameterContents": "\"[Order Service][Find All Order]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "findAllOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getAllOrders",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"[Order Service][Verify Login] Verifying....\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "println",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"http://ts-sso-service:12349/verifyLoginToken/\" + loginToken,VerifyResult.class",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getForObject",
              "packageAndClassName": "order.controller.OrderController"
            }
          ],
          "name": "OrderController",
          "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "order.service",
          "implementedTypes": [
            "OrderService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "ChangeOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "saveChanges",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "AddOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "addNewOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "CreateOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "create",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteOrderInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "DeleteOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "deleteOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "UpdateOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "OrderAlterInfo",
                  "annotations": [],
                  "name": "oai",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "OrderAlterResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "alterOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Order",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "PayOrderInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "PayOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "payOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetOrderInfoForSecurity",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "GetOrderInfoForSecurityResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "checkSecurityAboutOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetOrderByIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "GetOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "getOrderById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ModifyOrderStatusInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "ModifyOrderStatusResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "modifyOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetOrderPrice",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "GetOrderPriceResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "getOrderPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "QueryOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "getAllOrders",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "SeatRequest",
                  "annotations": [],
                  "name": "seatRequest",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "LeftTicketInfo",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "getSoldTickets",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "qi",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "queryOrders",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CalculateSoldTicketInfo",
                  "annotations": [],
                  "name": "csti",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "CalculateSoldTicketResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "queryAlreadySoldOrders",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CancelOrderInfo",
                  "annotations": [],
                  "name": "coi",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "CancelOrderResult",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "cancelOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "initOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "OrderRepository",
              "name": "orderRepository",
              "packageAndClassName": "order.service.OrderServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "order.service.OrderServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "getSoldTickets",
              "parameterContents": "seatRequest.getTravelDate(),seatRequest.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "Integer.parseInt(tempOrder.getSeatNumber())",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatNo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getSeatNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getFrom()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getTo()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ticketSet",
              "objectType": "Set",
              "calledFrom": "getSoldTickets",
              "parameterContents": "ticket",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "add",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "getSoldTickets",
              "parameterContents": "ticketSet",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSoldTickets",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "findOrderById",
              "parameterContents": "id",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Order Service][Create Order] Ready Create Order.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "create",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "accountOrders",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "contains",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Order Service][Order Create] Fail.Order already exists.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "\"Order already exist\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Order Service][Order Create] Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Order Service][Order Create] Price:\" + order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPreviousOrderId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[Order Service][Alter Order] Fail.Order do not exist.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "\"Old Order Does Not Exists\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOldOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setNewOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "saveChanges",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getNewOrderInfo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oai.getNewOrderInfo()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "create",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getNewOrderInfo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOldOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "newOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setNewOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[Order Service][Alter Order] Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "cor.getMessage()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOldOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oar",
              "objectType": "OrderAlterResult",
              "calledFrom": "alterOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setNewOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "queryOrders",
              "parameterContents": "UUID.fromString(accountId)",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "queryOrders",
              "parameterContents": "accountId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "fromString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Query Order][Step 1] Get Orders Number of Account:\" + list.size()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableStateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableBoughtDateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableTravelDateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableStateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getState",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Query Order][Step 2][Check Status Fits End]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableTravelDateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getTravelDateEnd()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "before",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDateEnd",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateStart()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "after",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDateStart",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Query Order][Step 2][Check Travel Date End]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableBoughtDateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateEnd()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "before",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDateEnd",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateStart()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "after",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDateStart",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Query Order][Step 2][Check Bought Date End]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "finalList",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "tempOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "add",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Query Order][Step 2][Check All Requirement End]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Query Order] Get order num:\" + finalList.size()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "finalList",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[Order Service][Query Order] Get order num:\" + list.size()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[Order Service][Modify Order] Fail.Order not found.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getCoachNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setCoachNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCoachNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getStatus()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getContactsName()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getContactsName",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getContactsDocumentNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getDocumentType()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[Order Service] Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "ChangeOrderResult",
              "calledFrom": "saveChanges",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "coi",
              "objectType": "CancelOrderInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "cancelOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Service][Cancel Order] Fail.Order not found.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "cancelOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[Cancel Service][Cancel Order] Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CancelOrderResult",
              "calledFrom": "cancelOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "csti.getTravelDate(),csti.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "csti.getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "csti.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "csti",
              "objectType": "CalculateSoldTicketInfo",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "\"[Order Service][Calculate Sold Ticket] Get Orders Number:\" + orders.size()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NONE",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getNoSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setNoSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getNoSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BUSINESS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getBusinessSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setBusinessSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBusinessSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getFirstClassSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setFirstClassSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFirstClassSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSecondClassSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSecondClassSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSecondClassSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HARDSEAT",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHardSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setHardSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getHardSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SOFTSEAT",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSoftSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSoftSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSoftSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HARDBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHardBed() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setHardBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getHardBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SOFTBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSoftBed() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSoftBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSoftBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HIGHSOFTBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHighSoftBed() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setHighSoftBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "CalculateSoldTicketResult",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getHighSoftBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "\"[Order Service][Calculate Sold Tickets] Seat class not exists. Order ID:\" + order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findAll",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "modifyOrder",
              "parameterContents": "UUID.fromString(info.getOrderId())",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "modifyOrder",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "fromString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "modifyOrder",
              "parameterContents": "info.getStatus()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "ModifyOrderStatusInfo",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "modifyOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyOrderStatusResult",
              "calledFrom": "modifyOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "getOrderPrice",
              "parameterContents": "UUID.fromString(info.getOrderId())",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getOrderPrice",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "fromString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderPrice",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[Other Service][Get Order Price] Order Not Found.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"-1.0\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[Order Service][Get Order Price] Price:\" + order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderPriceResult",
              "calledFrom": "getOrderPrice",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "payOrder",
              "parameterContents": "UUID.fromString(info.getOrderId())",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "payOrder",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "fromString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PayOrderInfo",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payOrder",
              "parameterContents": "OrderStatus.PAID.getCode()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "payOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PayOrderResult",
              "calledFrom": "payOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "getOrderById",
              "parameterContents": "UUID.fromString(info.getOrderId())",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getOrderById",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "fromString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderByIdInfo",
              "calledFrom": "getOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderResult",
              "calledFrom": "getOrderById",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "initOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "initOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "initOrder",
              "parameterContents": "\"[Order Service][Init Order] Order Already Exists ID:\" + order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "UUID.fromString(info.getAccountId())",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "info.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "fromString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderInfoForSecurity",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetOrderInfoForSecurity",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCheckDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "dateFrom",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "Calendar.HOUR_OF_DAY,-1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "add",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "dateFrom",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "after",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "countOrderInOneHour",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrderNumInLastOneHour",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "countTotalValidOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrderNumOfValidOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteOrder",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "fromString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DeleteOrderInfo",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderUuid",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"Order Not Exist.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderUuid",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteOrderResult",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[Order Service][Admin Add Order] Ready Add Order.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "addNewOrder",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "accountOrders",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "contains",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[Order Service][Admin Add Order] Fail.Order already exists.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"Order already exist\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[Order Service][Admin Add Order] Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[Order Service][Admin Add Order] Price:\" + order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AddOrderResult",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[Order Service][Admin Update Order] Fail.Order not found.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "false",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "null",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getCoachNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setCoachNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCoachNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getStatus()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getContactsName()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getContactsName",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getContactsDocumentNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getDocumentType()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "updateOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[Order Service] [Admin Update Order] Success.\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "println",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "true",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "order.service.OrderServiceImpl"
            }
          ],
          "name": "OrderServiceImpl",
          "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "order.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'accountId' : ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "className": "OrderRepository",
              "name": "findByAccountId",
              "packageAndClassName": "order.repository.OrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "order.repository.OrderRepository"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainNumber",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'travelDate' : ?0 , trainNumber : ?1 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "className": "OrderRepository",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "order.repository.OrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-order-service",
              "annotations": [],
              "className": "OrderRepository",
              "name": "deleteById",
              "packageAndClassName": "order.repository.OrderRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-service",
              "annotations": [],
              "className": "OrderRepository",
              "name": "findAll",
              "packageAndClassName": "order.repository.OrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "returnType": "Order",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'id': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "className": "OrderRepository",
              "name": "findById",
              "packageAndClassName": "order.repository.OrderRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "order.repository.OrderRepository"
            }
          ],
          "methodCalls": [],
          "name": "OrderRepository",
          "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 12031
            },
            "spring": {
              "application": {
                "name": "ts-order-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-order-mongo",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-order-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-order-service",
              "artifactId": "ts-order-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-order-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-payment-service",
      "path": "/ts-payment-service",
      "controllers": [
        {
          "packageName": "com.trainticket.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/payment/query",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<Payment>",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/payment/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "className": "PaymentController",
              "name": "query",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "url": "/payment/addMoney",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AddMoneyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "com.trainticket.controller.PaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/payment/addMoney"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "className": "PaymentController",
              "name": "addMoney",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "url": "/payment/pay",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PaymentInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "com.trainticket.controller.PaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/payment/pay"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "className": "PaymentController",
              "name": "pay",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            }
          ],
          "fields": [
            {
              "type": "PaymentService",
              "name": "service",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "PaymentService",
              "calledFrom": "pay",
              "parameterContents": "info",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "pay",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "service",
              "objectType": "PaymentService",
              "calledFrom": "addMoney",
              "parameterContents": "info",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "addMoney",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "service",
              "objectType": "PaymentService",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "query",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            }
          ],
          "name": "PaymentController",
          "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "com.trainticket.service",
          "implementedTypes": [
            "PaymentService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "PaymentInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "className": "PaymentServiceImpl",
              "name": "pay",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddMoneyInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "className": "PaymentServiceImpl",
              "name": "addMoney",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Payment",
                  "annotations": [],
                  "name": "payment",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "className": "PaymentServiceImpl",
              "name": "initPayment",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "List<Payment>",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "className": "PaymentServiceImpl",
              "name": "query",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "PaymentRepository",
              "name": "paymentRepository",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "type": "AddMoneyRepository",
              "name": "addMoneyRepository",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getPrice()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "payment",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "addMoney",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddMoneyInfo",
              "calledFrom": "addMoney",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "AddMoney",
              "calledFrom": "addMoney",
              "parameterContents": "info.getMoney()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddMoneyInfo",
              "calledFrom": "addMoney",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "addMoney",
              "parameterContents": "addMoney",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "findAll",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "initPayment",
              "parameterContents": "payment.getId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "findById",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "initPayment",
              "parameterContents": "payment",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "initPayment",
              "parameterContents": "\"[Payment Service][Init Payment] Already Exists:\" + payment.getId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "println",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            }
          ],
          "name": "PaymentServiceImpl",
          "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-payment-service",
              "artifactId": "ts-payment-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-payment-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 19001
            },
            "spring": {
              "application": {
                "name": "ts-payment-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-payment-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-payment-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-preserve-other-service",
      "path": "/ts-preserve-other-service",
      "controllers": [
        {
          "packageName": "preserveOther.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/preserveOther",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                },
                {
                  "type": "OrderTicketsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                    }
                  ],
                  "name": "oti",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                }
              ],
              "returnType": "OrderTicketsResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                },
                {
                  "attributes": {
                    "value": "/preserveOther"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                }
              ],
              "className": "PreserveOtherController",
              "name": "preserve",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            }
          ],
          "fields": [
            {
              "type": "PreserveOtherService",
              "name": "preserveService",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Preserve] Account \" + loginId + \" order from \" + oti.getFrom() + \" -----> \" + oti.getTo() + \" at \" + oti.getDate()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "println",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "getTo",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "getDate",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "preserveService",
              "objectType": "PreserveOtherService",
              "calledFrom": "preserve",
              "parameterContents": "oti,loginId,loginToken",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "preserve",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            }
          ],
          "name": "PreserveOtherController",
          "path": "/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "preserveOther.service",
          "implementedTypes": [
            "PreserveOtherService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "OrderTicketsInfo",
                  "annotations": [],
                  "name": "oti",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "OrderTicketsResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "className": "PreserveOtherServiceImpl",
              "name": "preserve",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "QueryPriceInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Ticket",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CreateOrderInfo",
                  "annotations": [],
                  "name": "coi",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "CreateOrderResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetTripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "GetTripAllDetailResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetContactsInfo",
                  "annotations": [],
                  "name": "gci",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "GetContactsResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsById",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "assuranceType",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "AddAssuranceResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "addAssuranceForOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CheckInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "CheckResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "checkSecurity",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ConsignRequest",
                  "annotations": [],
                  "name": "cr",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "InsertConsignRecordResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "createConsign",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddFoodOrderInfo",
                  "annotations": [],
                  "name": "afi",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "AddFoodOrderResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "NotifyInfo",
                  "annotations": [],
                  "name": "notifyInfo",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "verifySsoLogin",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetAccountByIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "GetAccountByIdResult",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "loginToken",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "verifySsoLogin",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Verify Login] Success\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 1] Check Security\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "checkInfo",
              "objectType": "CheckInfo",
              "calledFrom": "preserve",
              "parameterContents": "accountId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "checkInfo",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "checkSecurity",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 1] Check Security Fail. Return soon.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "result.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 1] Check Security Complete. \"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service] [Step 2] Find contacts\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service] [Step 2] Contacts Id:\" + oti.getContactsId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gci",
              "objectType": "GetContactsInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getContactsId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setContactsId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gci",
              "objectType": "GetContactsInfo",
              "calledFrom": "preserve",
              "parameterContents": "loginToken",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setLoginToken",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "gci",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsById",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Get Contacts] Fail.\" + gcr.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "gcr.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Step 2] Complete\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service] [Step 3] Check tickets num\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTripId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service] [Step 3] TripId:\" + oti.getTripId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "gtdi",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Search For Trip Detail Information] \" + gcr.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "gcr.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Check seat is enough] \" + gcr.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Seat Not Enough\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Check seat is enough] \" + gcr.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Seat Not Enough\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service] [Step 3] Tickets Enough\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service] [Step 4] Do Order\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getContacts",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTripId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "UUID.fromString(accountId)",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "preserve",
              "parameterContents": "accountId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "fromStationId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "toStationId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "new Date()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "OrderStatus.NOTPAID.getCode()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getDocumentNumber()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getDocumentType()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "queryPriceInfo",
              "objectType": "QueryPriceInfo",
              "calledFrom": "preserve",
              "parameterContents": "fromStationId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartingPlaceId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "queryPriceInfo",
              "objectType": "QueryPriceInfo",
              "calledFrom": "preserve",
              "parameterContents": "toStationId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setEndPlaceId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "queryPriceInfo",
              "objectType": "QueryPriceInfo",
              "calledFrom": "preserve",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Seat Class] Confort Class.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "queryPriceInfo",
              "objectType": "QueryPriceInfo",
              "calledFrom": "preserve",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Seat Class] Economy Class.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "queryPriceInfo",
              "objectType": "QueryPriceInfo",
              "calledFrom": "preserve",
              "parameterContents": "gtdr.getTrip().getTrainTypeId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "preserve",
              "parameterContents": "trip",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "preserve",
              "parameterContents": "new Date()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/ticketinfo/queryForTravel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "preserve",
              "parameterContents": "\"http://ts-ticketinfo-service:15681/ticketinfo/queryForTravel\",query,ResultForTravel.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getSeatType()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Order] Order Travel Date:\" + oti.getDate().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "gtdr.getTripResponse().getStartingTime()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate(),order.getTrainNumber(),fromStationId,toStationId,SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "resultForTravel.getPrices().get(\"confortClass\")",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResultForTravel",
              "calledFrom": "preserve",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "ResultForTravel",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate(),order.getTrainNumber(),fromStationId,toStationId,SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "resultForTravel.getPrices().get(\"economyClass\")",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResultForTravel",
              "calledFrom": "preserve",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "ResultForTravel",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Order Price] Price is: \" + order.getPrice()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "loginToken",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setLoginToken",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "order",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "coi",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Create Order Fail] Create Order Fail.\" + \"Reason:\" + cor.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "cor.getMessage()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service] [Step 4] Do Order Complete\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "true",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 5] Do not need to buy assurance\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getAssurance(),cor.getOrder().getId().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "addAssuranceForOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "addAssuranceResult",
              "objectType": "AddAssuranceResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 5] Buy Assurance Success\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 5] Buy Assurance Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Success.But Buy Assurance Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getId().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodType()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodPrice()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getStationName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getStoreName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "afoi",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "afor",
              "objectType": "AddFoodOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 6] Buy Food Success\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 6] Buy Food Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Success.But Buy Food Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 6] Do not need to buy food\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "equals",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getAccountId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.getHandleDate()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setHandleDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getTravelDate().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTargetDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneePhone()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneePhone",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeWeight()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneeWeight",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.isWithin()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setWithin",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isWithin",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "consignRequest",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "createConsign",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "icresult",
              "objectType": "InsertConsignRecordResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 7] Consign Success\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 7] Consign Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Consign Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 7] Do not need to consign\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "getAccountByIdInfo",
              "objectType": "GetAccountByIdInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getAccountId().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "getAccountByIdInfo",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "new Date().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "getAccountByIdResult.getAccount().getEmail()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setEmail",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "getAccountByIdResult",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "getAccountByIdResult.getAccount().getName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setUsername",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "getAccountByIdResult",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getId().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrderNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.getNameByCode(order.getSeatClass())",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "SeatClass",
              "objectType": "Solving SeatClass",
              "calledFrom": "preserve",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getNameByCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getTravelTime().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "notifyInfo",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Other Service][Verify Login] Fail\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "date",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "tripId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "startStationId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "endStataionId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seatType",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/seat/getSeat",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "dipatchSeat",
              "parameterContents": "\"http://ts-seat-service:18898/seat/getSeat\",seatRequest,Ticket.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "sendEmail",
              "parameterContents": "\"[Preserve Service][Send Email]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/notification/order_cancel_success",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "sendEmail",
              "parameterContents": "\"http://ts-notification-service:17853/notification/order_cancel_success\",notifyInfo,Boolean.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAccount",
              "parameterContents": "\"[Cancel Order Service][Get By Id]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/account/findById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAccount",
              "parameterContents": "\"http://ts-sso-service:12349/account/findById\",info,GetAccountByIdResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "\"[Preserve Service][Add Assurance For Order]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddAssuranceInfo",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddAssuranceInfo",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "assuranceType",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTypeIndex",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/assurance/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "\"http://ts-assurance-service:18888/assurance/create\",info,AddAssuranceResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[Preserve Other Service][Get Station Name]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "queryForId",
              "objectType": "QueryForId",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationName",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/station/queryForId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"http://ts-station-service:12345/station/queryForId\",queryForId,String.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getPrice",
              "parameterContents": "\"[Preserve Other Service][Get Price] Checking....\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/price/query",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getPrice",
              "parameterContents": "\"http://ts-price-service:16579/price/query\",info,String.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "checkSecurity",
              "parameterContents": "\"[Preserve Other Service][Check Security] Checking....\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/security/check",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkSecurity",
              "parameterContents": "\"http://ts-security-service:11188/security/check\",info,CheckResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"[Preserve Other Service][Verify Login] Verifying....\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"http://ts-sso-service:12349/verifyLoginToken/\" + loginToken,VerifyResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"[Preserve Other Service][Get Trip All Detail Information] Getting....\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/travel2/getTripAllDetailInfo",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/getTripAllDetailInfo/\",gtdi,GetTripAllDetailResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getContactsById",
              "parameterContents": "\"[Preserve Other Service][Get Contacts By Id] Getting....\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/contacts/getContactsById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getContactsById",
              "parameterContents": "\"http://ts-contacts-service:12347/contacts/getContactsById/\",gci,GetContactsResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createOrder",
              "parameterContents": "\"[Preserve Other Service][Get Contacts By Id] Creating....\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/orderOther/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/create\",coi,CreateOrderResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[Preserve Service][Add food Order] Creating....\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/food/createFoodOrder",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"http://ts-food-service:18856/food/createFoodOrder\",afi,AddFoodOrderResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createConsign",
              "parameterContents": "\"[Preserve Service][Add Condign] Creating....\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "println",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/consign/insertConsign",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createConsign",
              "parameterContents": "\"http://ts-consign-service:16111/consign/insertConsign\",cr,InsertConsignRecordResult.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            }
          ],
          "name": "PreserveOtherServiceImpl",
          "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-preserve-other-service",
              "artifactId": "ts-preserve-other-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-preserve-other-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 14569
            },
            "spring": {
              "application": {
                "name": "ts-preserve-other-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-preserve-other-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-preserve-service",
      "path": "/ts-preserve-service",
      "controllers": [
        {
          "packageName": "preserve.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/preserve",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "preserve.controller.PreserveController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "preserve.controller.PreserveController"
                },
                {
                  "type": "OrderTicketsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "preserve.controller.PreserveController"
                    }
                  ],
                  "name": "oti",
                  "packageAndClassName": "preserve.controller.PreserveController"
                }
              ],
              "returnType": "OrderTicketsResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/preserve"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "preserve.controller.PreserveController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "preserve.controller.PreserveController"
                }
              ],
              "className": "PreserveController",
              "name": "preserve",
              "packageAndClassName": "preserve.controller.PreserveController"
            }
          ],
          "fields": [
            {
              "type": "PreserveService",
              "name": "preserveService",
              "packageAndClassName": "preserve.controller.PreserveController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "preserve.controller.PreserveController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Preserve] Account \" + loginId + \" order from \" + oti.getFrom() + \" -----> \" + oti.getTo() + \" at \" + oti.getDate()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "println",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "getFrom",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "getTo",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "getDate",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "preserveService",
              "objectType": "PreserveService",
              "calledFrom": "preserve",
              "parameterContents": "oti,loginId,loginToken",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "preserve",
              "packageAndClassName": "preserve.controller.PreserveController"
            }
          ],
          "name": "PreserveController",
          "path": "/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "preserve.service",
          "implementedTypes": [
            "PreserveService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "GetContactsInfo",
                  "annotations": [],
                  "name": "gci",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "GetContactsResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "getContactsById",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CreateOrderInfo",
                  "annotations": [],
                  "name": "coi",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "CreateOrderResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "NotifyInfo",
                  "annotations": [],
                  "name": "notifyInfo",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Ticket",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "OrderTicketsInfo",
                  "annotations": [],
                  "name": "oti",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "OrderTicketsResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "className": "PreserveServiceImpl",
              "name": "preserve",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AddFoodOrderInfo",
                  "annotations": [],
                  "name": "afi",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "AddFoodOrderResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "verifySsoLogin",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetAccountByIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "GetAccountByIdResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetTripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "GetTripAllDetailResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "assuranceType",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "AddAssuranceResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "addAssuranceForOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CheckInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "CheckResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "checkSecurity",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ConsignRequest",
                  "annotations": [],
                  "name": "cr",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "InsertConsignRecordResult",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "createConsign",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "loginToken",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "verifySsoLogin",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "tokenResult",
              "objectType": "VerifyResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Verify Login] Success\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 1] Check Security\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "checkInfo",
              "objectType": "CheckInfo",
              "calledFrom": "preserve",
              "parameterContents": "accountId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "checkInfo",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "checkSecurity",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "result.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 1] Check Security Complete\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 2] Find contacts\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 2] Contacts Id:\" + oti.getContactsId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gci",
              "objectType": "GetContactsInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getContactsId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setContactsId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gci",
              "objectType": "GetContactsInfo",
              "calledFrom": "preserve",
              "parameterContents": "loginToken",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setLoginToken",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "gci",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getContactsById",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Get Contacts] Fail.\" + gcr.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "gcr.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 2] Complete\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 3] Check tickets num\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTripId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 3] TripId:\" + oti.getTripId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "gtdi",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Search For Trip Detail Information] \" + gcr.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "gcr.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Check seat is enough] \" + gcr.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Seat Not Enough\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Check seat is enough] \" + gcr.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Seat Not Enough\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 3] Tickets Enough\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 4] Do Order\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "GetContactsResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getContacts",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTripId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "UUID.fromString(accountId)",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "preserve",
              "parameterContents": "accountId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "fromString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "fromStationId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "toStationId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "new Date()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "OrderStatus.NOTPAID.getCode()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getDocumentNumber()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getDocumentType()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "preserve",
              "parameterContents": "trip",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "preserve",
              "parameterContents": "new Date()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/ticketinfo/queryForTravel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "preserve",
              "parameterContents": "\"http://ts-ticketinfo-service:15681/ticketinfo/queryForTravel\",query,ResultForTravel.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getSeatType()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Order] Order Travel Date:\" + oti.getDate().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "gtdr.getTripResponse().getStartingTime()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate(),order.getTrainNumber(),fromStationId,toStationId,SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "resultForTravel.getPrices().get(\"confortClass\")",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResultForTravel",
              "calledFrom": "preserve",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "get",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "ResultForTravel",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate(),order.getTrainNumber(),fromStationId,toStationId,SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "resultForTravel.getPrices().get(\"economyClass\")",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResultForTravel",
              "calledFrom": "preserve",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "get",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "ResultForTravel",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Order Price] Price is: \" + order.getPrice()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "loginToken",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setLoginToken",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "coi",
              "objectType": "CreateOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "order",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "coi",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Create Order Fail] Create Order Fail.\" + \"Reason:\" + cor.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "cor.getMessage()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service] [Step 4] Do Order Complete\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "true",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 5] Do not need to buy assurance\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getAssurance(),cor.getOrder().getId().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "addAssuranceForOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "addAssuranceResult",
              "objectType": "AddAssuranceResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 5] Buy Assurance Success\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 5] Buy Assurance Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Success.But Buy Assurance Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getId().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodType()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodPrice()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getStationName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getStoreName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Food Service]!!!!!!!!!!!!!!!foodstore=\" + afoi.getFoodType() + \"   \" + afoi.getStationName() + \"   \" + afoi.getStoreName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afoi",
              "objectType": "AddFoodOrderInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "afoi",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afor",
              "objectType": "AddFoodOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 6] Buy Food Success\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 6] Buy Food Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Success.But Buy Food Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 6] Do not need to buy food\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "equals",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getAccountId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.getHandleDate()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setHandleDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getTravelDate().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTargetDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "cor.getOrder().getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "CreateOrderResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneePhone()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneePhone",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeWeight()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneeWeight",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "ConsignRequest",
              "calledFrom": "preserve",
              "parameterContents": "oti.isWithin()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setWithin",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isWithin",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "consignRequest",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "createConsign",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "icresult",
              "objectType": "InsertConsignRecordResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 7] Consign Success\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 7] Consign Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Consign Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Step 7] Do not need to consign\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "getAccountByIdInfo",
              "objectType": "GetAccountByIdInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getAccountId().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "getAccountByIdInfo",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "new Date().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "getAccountByIdResult.getAccount().getEmail()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setEmail",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "getAccountByIdResult",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "getAccountByIdResult.getAccount().getName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setUsername",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "getAccountByIdResult",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getId().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrderNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.getNameByCode(order.getSeatClass())",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "SeatClass",
              "objectType": "Solving SeatClass",
              "calledFrom": "preserve",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getNameByCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getTravelTime().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "notifyInfo",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve Service][Verify Login] Fail\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "false",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "otr",
              "objectType": "OrderTicketsResult",
              "calledFrom": "preserve",
              "parameterContents": "null",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "date",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "tripId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "startStationId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "endStataionId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seatType",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/seat/getSeat",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "dipatchSeat",
              "parameterContents": "\"http://ts-seat-service:18898/seat/getSeat\",seatRequest,Ticket.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "sendEmail",
              "parameterContents": "\"[Preserve Service][Send Email]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/notification/order_cancel_success",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "sendEmail",
              "parameterContents": "\"http://ts-notification-service:17853/notification/order_cancel_success\",notifyInfo,Boolean.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAccount",
              "parameterContents": "\"[Cancel Order Service][Get By Id]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/account/findById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAccount",
              "parameterContents": "\"http://ts-sso-service:12349/account/findById\",info,GetAccountByIdResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "\"[Preserve Service][Add Assurance For Order]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddAssuranceInfo",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AddAssuranceInfo",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "assuranceType",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTypeIndex",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/assurance/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "\"http://ts-assurance-service:18888/assurance/create\",info,AddAssuranceResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[Preserve Service][Get Station Name]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "queryForId",
              "objectType": "QueryForId",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationName",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/station/queryForId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"http://ts-station-service:12345/station/queryForId\",queryForId,String.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "checkSecurity",
              "parameterContents": "\"[Preserve Service][Check Security] Checking....\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/security/check",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkSecurity",
              "parameterContents": "\"http://ts-security-service:11188/security/check\",info,CheckResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"[Preserve Service][Verify Login] Verifying....\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"http://ts-sso-service:12349/verifyLoginToken/\" + loginToken,VerifyResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"[Preserve Service][Get Trip All Detail Information] Getting....\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/travel/getTripAllDetailInfo",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"http://ts-travel-service:12346/travel/getTripAllDetailInfo/\",gtdi,GetTripAllDetailResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getContactsById",
              "parameterContents": "\"[Preserve Service][Get Contacts By Id] Getting....\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/contacts/getContactsById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getContactsById",
              "parameterContents": "\"http://ts-contacts-service:12347/contacts/getContactsById/\",gci,GetContactsResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createOrder",
              "parameterContents": "\"[Preserve Service][Get Contacts By Id] Creating....\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/order/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/create/\",coi,CreateOrderResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[Preserve Service][Add food Order] Creating....\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/food/createFoodOrder",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"http://ts-food-service:18856/food/createFoodOrder\",afi,AddFoodOrderResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createConsign",
              "parameterContents": "\"[Preserve Service][Add Condign] Creating....\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "println",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/consign/insertConsign",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createConsign",
              "parameterContents": "\"http://ts-consign-service:16111/consign/insertConsign\",cr,InsertConsignRecordResult.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            }
          ],
          "name": "PreserveServiceImpl",
          "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-preserve-service",
              "artifactId": "ts-preserve-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-preserve-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 14568
            },
            "spring": {
              "application": {
                "name": "ts-preserve-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-preserve-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-price-service",
      "path": "/ts-price-service",
      "controllers": [
        {
          "packageName": "price.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/price/query",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryPriceConfigByTrainAndRoute",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "ReturnSinglePriceConfigResult",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/price/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "query",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/price/queryAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "ReturnManyPriceConfigResult",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/price/queryAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "queryAll",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/price/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateAndModifyPriceConfig",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "ReturnSinglePriceConfigResult",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/price/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "create",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/price/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateAndModifyPriceConfig",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/price/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "update",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/price/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateAndModifyPriceConfig",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/price/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "delete",
              "packageAndClassName": "price.controller.PriceController"
            }
          ],
          "fields": [
            {
              "type": "PriceService",
              "name": "service",
              "packageAndClassName": "price.controller.PriceController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "price.controller.PriceController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "query",
              "parameterContents": "info.getRouteId(),info.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "findByRouteIdAndTrainType",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "info",
              "objectType": "QueryPriceConfigByTrainAndRoute",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "getRouteId",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "info",
              "objectType": "QueryPriceConfigByTrainAndRoute",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "getTrainType",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "findAllPriceConfig",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "create",
              "parameterContents": "info",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "createNewPriceConfig",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "delete",
              "parameterContents": "info",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "deletePriceConfig",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "update",
              "parameterContents": "info",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "updatePriceConfig",
              "packageAndClassName": "price.controller.PriceController"
            }
          ],
          "name": "PriceController",
          "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "price.service",
          "implementedTypes": [
            "PriceService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "CreateAndModifyPriceConfig",
                  "annotations": [],
                  "name": "c",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "deletePriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "returnType": "ReturnSinglePriceConfigResult",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "ReturnManyPriceConfigResult",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "findAllPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CreateAndModifyPriceConfig",
                  "annotations": [],
                  "name": "createAndModifyPriceConfig",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "returnType": "ReturnSinglePriceConfigResult",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "createNewPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "PriceConfigRepository",
              "name": "priceConfigRepository",
              "packageAndClassName": "price.service.PriceServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "price.service.PriceServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "\"[Price Service][Create New Price Config]\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "println",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "length",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getBasicPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getFirstClassPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getRouteId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "save",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "true",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "UUID.fromString(createAndModifyPriceConfig.getId())",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "UUID.fromString(createAndModifyPriceConfig.getId())",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getBasicPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getFirstClassPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getRouteId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "save",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "true",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findById",
              "parameterContents": "\"[Price Service][Find By Id] ID:\" + id",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "println",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "findById",
              "parameterContents": "UUID.fromString(id)",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findById",
              "parameterContents": "id",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findById",
              "parameterContents": "false",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findById",
              "parameterContents": "\"Price Config Not Found\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findById",
              "parameterContents": "null",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findById",
              "parameterContents": "true",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findById",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findById",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "\"[Price Service][Find By Route And Train Type] Rote:\" + routeId + \"Train Type:\" + trainType",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "println",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "routeId,trainType",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findByRouteIdAndTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "false",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "\"Price Config Not Found\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "null",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "\"[Price Service][Find By Route Id And Train Type] Fail\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "println",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "true",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnSinglePriceConfigResult",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "\"[Price Service][Find By Route Id And Train Type] Success\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "println",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "findAllPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findAll",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnManyPriceConfigResult",
              "calledFrom": "findAllPriceConfig",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnManyPriceConfigResult",
              "calledFrom": "findAllPriceConfig",
              "parameterContents": "list",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ReturnManyPriceConfigResult",
              "calledFrom": "findAllPriceConfig",
              "parameterContents": "true",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "UUID.fromString(c.getId())",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "c.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "pc",
              "objectType": "PriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "UUID.fromString(c.getId())",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "c.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "pc",
              "objectType": "PriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "c.getRouteId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "pc",
              "objectType": "PriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "c.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "pc",
              "objectType": "PriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "c.getBasicPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "pc",
              "objectType": "PriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "c.getFirstClassPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "pc",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "delete",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "UUID.fromString(c.getId())",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "UUID.fromString(c.getId())",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getBasicPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getFirstClassPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getRouteId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "CreateAndModifyPriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "save",
              "packageAndClassName": "price.service.PriceServiceImpl"
            }
          ],
          "name": "PriceServiceImpl",
          "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "price.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [],
              "returnType": "ArrayList<PriceConfig>",
              "microserviceName": "ts-price-service",
              "annotations": [],
              "className": "PriceConfigRepository",
              "name": "findAll",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "returnType": "PriceConfig",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'id': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "className": "PriceConfigRepository",
              "name": "findById",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "returnType": "PriceConfig",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'routeId': ?0 , 'trainType': ?1 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "className": "PriceConfigRepository",
              "name": "findByRouteIdAndTrainType",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            }
          ],
          "methodCalls": [],
          "name": "PriceConfigRepository",
          "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-price-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-price-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 16579
            }
          },
          "name": "application.yml",
          "path": "/ts-price-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-price-service",
              "artifactId": "ts-price-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-price-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-rebook-service",
      "path": "/ts-rebook-service",
      "controllers": [
        {
          "packageName": "rebook.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/rebook/payDifference",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "rebook.controller.RebookController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "rebook.controller.RebookController"
                },
                {
                  "type": "RebookInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "rebook.controller.RebookController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "returnType": "RebookResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/rebook/payDifference"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "className": "RebookController",
              "name": "payDifference",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "url": "/rebook/rebook",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "rebook.controller.RebookController"
                    }
                  ],
                  "name": "loginId",
                  "packageAndClassName": "rebook.controller.RebookController"
                },
                {
                  "type": "RebookInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "rebook.controller.RebookController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "returnType": "RebookResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/rebook/rebook"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "className": "RebookController",
              "name": "rebook",
              "packageAndClassName": "rebook.controller.RebookController"
            }
          ],
          "fields": [
            {
              "type": "RebookService",
              "name": "service",
              "packageAndClassName": "rebook.controller.RebookController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "rebook.controller.RebookController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "RebookService",
              "calledFrom": "payDifference",
              "parameterContents": "info,loginId,loginToken",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "payDifference",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "rebook",
              "parameterContents": "\"[Rebook Service] OrderId:\" + info.getOrderId() + \"Old Trip Id:\" + info.getOldTripId() + \" New Trip Id:\" + info.getTripId() + \" Date:\" + info.getDate() + \" Seat Type:\" + info.getSeatType()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "println",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getOrderId",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getOldTripId",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getTripId",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getDate",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getSeatType",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "service",
              "objectType": "RebookService",
              "calledFrom": "rebook",
              "parameterContents": "info,loginId,loginToken",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "rebook",
              "packageAndClassName": "rebook.controller.RebookController"
            }
          ],
          "name": "RebookController",
          "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "rebook.service",
          "implementedTypes": [
            "RebookService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "RebookInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "QueryOrderResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "getOrderByRebookInfo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "checkTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "verifySsoLogin",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "queryForStationName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetTripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "GetTripAllDetailResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "CreateOrderResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetTripAllDetailResult",
                  "annotations": [],
                  "name": "gtdr",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "RebookInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "ticketPrice",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "RebookResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "RebookInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "RebookResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "className": "RebookServiceImpl",
              "name": "rebook",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Ticket",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "DeleteOrderResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "deleteOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ChangeOrderInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "ChangeOrderResult",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "info",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderByRebookInfo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "QueryOrderResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "queryOrderResult.getMessage()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "QueryOrderResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "QueryOrderResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"You haven't paid the original ticket!\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"You have already changed your ticket and you can only change one time.\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"You have already collected your ticket and you can change it now.\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"You can't change your ticket.\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "order.getTravelDate(),order.getTravelTime()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "checkTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"You can only change the ticket before the train start or within 2 hours after the train start.\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "rebook",
              "parameterContents": "queryForStationName(order.getFrom())",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "queryForStationName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "rebook",
              "parameterContents": "queryForStationName(order.getTo())",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "queryForStationName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "rebook",
              "parameterContents": "info.getDate()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "rebook",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "gtdi,info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "gtdr.getMessage()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"Seat Not Enough\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"Seat Not Enough\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceOld",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "priceNew",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "compareTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "toString",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceOld",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "priceNew",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "subtract",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "loginId,difference",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "drawBackMoney",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"Can't draw back the difference money, please try again!\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "order,info,gtdr,ticketPrice,loginId,loginToken",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceOld",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "priceNew",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "compareTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "order,info,gtdr,ticketPrice,loginId,loginToken",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "toString",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceNew",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "priceOld",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "subtract",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "\"Please pay the different money!\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "rebook",
              "parameterContents": "difference",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "info",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderByRebookInfo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "QueryOrderResult",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "payDifference",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "payDifference",
              "parameterContents": "queryOrderResult.getMessage()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "QueryOrderResult",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "payDifference",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "QueryOrderResult",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "payDifference",
              "parameterContents": "queryForStationName(order.getFrom())",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "queryForStationName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "payDifference",
              "parameterContents": "queryForStationName(order.getTo())",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "queryForStationName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "payDifference",
              "parameterContents": "info.getDate()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "payDifference",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "gtdi,info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "info.getOrderId(),info.getTripId(),loginId,priceNew.subtract(priceOld).toString()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "payDifferentMoney",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "toString",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceNew",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "priceOld",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "subtract",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "order,info,gtdr,ticketPrice,loginId,loginToken",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "payDifference",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "payDifference",
              "parameterContents": "\"Can't pay the difference,please try again\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "payDifference",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "new Date()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "OrderStatus.CHANGE.getCode()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "ticketPrice",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getSeatType()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getDate()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "trip.getStartingTime()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getDate(),order.getTrainNumber(),order.getFrom(),order.getTo(),SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getDate(),order.getTrainNumber(),order.getFrom(),order.getTo(),SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "oldTripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "oldTripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "changeOrderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "loginToken",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setLoginToken",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "changeOrderInfo",
              "objectType": "ChangeOrderInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "order",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "changeOrderInfo,info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "ChangeOrderResult",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "true",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "\"Success!\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "order",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "false",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "\"Can't update Order!\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "null",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getId().toString(),oldTripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "deleteOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "toString",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "order,loginToken,order.getTrainNumber()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "true",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "\"Success!\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rebookResult",
              "objectType": "RebookResult",
              "calledFrom": "updateOrder",
              "parameterContents": "order",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "date",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "tripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "startStationId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "endStataionId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seatType",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/seat/getSeat",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "dipatchSeat",
              "parameterContents": "\"http://ts-seat-service:18898/seat/getSeat\",seatRequest,Ticket.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "tripGD",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "tripGD",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "verifySsoLogin",
              "parameterContents": "\"http://ts-sso-service:12349/verifyLoginToken/\" + loginToken,VerifyResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "today",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "travelDate",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateC",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "travelTime",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.HOUR_OF_DAY",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateC",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.HOUR_OF_DAY",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.HOUR_OF_DAY",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateC",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.HOUR_OF_DAY",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MINUTE",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateC",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MINUTE",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/travel/getTripAllDetailInfo",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"http://ts-travel-service:12346/travel/getTripAllDetailInfo\",gtdi,GetTripAllDetailResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/travel2/getTripAllDetailInfo",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/getTripAllDetailInfo\",gtdi,GetTripAllDetailResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "createOrderInfo",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createOrder",
              "parameterContents": "order",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "createOrderInfo",
              "objectType": "CreateOrderInfo",
              "calledFrom": "createOrder",
              "parameterContents": "loginToken",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setLoginToken",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "createOrder",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "createOrder",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/order/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/create\",createOrderInfo,CreateOrderResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/orderOther/create",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/create\",createOrderInfo,CreateOrderResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "tripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/order/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/update\",info,ChangeOrderResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/orderOther/update",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/update\",info,ChangeOrderResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "deleteOrderInfo",
              "objectType": "DeleteOrderInfo",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "tripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/order/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"http://ts-order-service:12031/order/delete\",deleteOrderInfo,DeleteOrderResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/orderOther/delete",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/delete\",deleteOrderInfo,DeleteOrderResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOldTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOldTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/order/getById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "\"http://ts-order-service:12031/order/getById\",new QueryOrder(info.getOrderId()),QueryOrderResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/orderOther/getById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/getById\",new QueryOrder(info.getOrderId()),QueryOrderResult.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryById",
              "calledFrom": "queryForStationName",
              "parameterContents": "stationId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStationId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/station/queryById",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationName",
              "parameterContents": "\"http://ts-station-service:12345/station/queryById\",query,QueryStation.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "QueryStation",
              "calledFrom": "queryForStationName",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "orderId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "tripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "userId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "money",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/inside_payment/payDifference",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "\"http://ts-inside-payment-service:18673/inside_payment/payDifference\",info,Boolean.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DrawBackInfo",
              "calledFrom": "drawBackMoney",
              "parameterContents": "userId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DrawBackInfo",
              "calledFrom": "drawBackMoney",
              "parameterContents": "money",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/inside_payment/drawBack",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "drawBackMoney",
              "parameterContents": "\"http://ts-inside-payment-service:18673/inside_payment/drawBack\",info,Boolean.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            }
          ],
          "name": "RebookServiceImpl",
          "path": "/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 18886
            },
            "spring": {
              "application": {
                "name": "ts-rebook-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-rebook-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-rebook-service",
              "artifactId": "ts-rebook-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-rebook-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-register-service",
      "path": "/ts-register-service",
      "controllers": [
        {
          "packageName": "register.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-register-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "register.controller.AccountRegisterController"
                }
              ],
              "className": "AccountRegisterController",
              "name": "home",
              "packageAndClassName": "register.controller.AccountRegisterController"
            },
            {
              "url": "/register",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "CookieValue",
                      "packageAndClassName": "register.controller.AccountRegisterController"
                    }
                  ],
                  "name": "YsbCaptcha",
                  "packageAndClassName": "register.controller.AccountRegisterController"
                },
                {
                  "type": "RegisterInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "register.controller.AccountRegisterController"
                    }
                  ],
                  "name": "ri",
                  "packageAndClassName": "register.controller.AccountRegisterController"
                }
              ],
              "returnType": "RegisterResult",
              "microserviceName": "ts-register-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/register"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "register.controller.AccountRegisterController"
                }
              ],
              "className": "AccountRegisterController",
              "name": "createNewAccount",
              "packageAndClassName": "register.controller.AccountRegisterController"
            }
          ],
          "fields": [
            {
              "type": "RegisterService",
              "name": "accountService",
              "packageAndClassName": "register.controller.AccountRegisterController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "register.controller.AccountRegisterController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createNewAccount",
              "parameterContents": "\"[Register Service][Register] Verification Code:\" + ri.getVerificationCode() + \" VerifyCookie:\" + YsbCaptcha",
              "microserviceName": "ts-register-service",
              "className": "AccountRegisterController",
              "name": "println",
              "packageAndClassName": "register.controller.AccountRegisterController"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "createNewAccount",
              "parameterContents": "",
              "microserviceName": "ts-register-service",
              "className": "AccountRegisterController",
              "name": "getVerificationCode",
              "packageAndClassName": "register.controller.AccountRegisterController"
            },
            {
              "objectName": "accountService",
              "objectType": "RegisterService",
              "calledFrom": "createNewAccount",
              "parameterContents": "ri,YsbCaptcha",
              "microserviceName": "ts-register-service",
              "className": "AccountRegisterController",
              "name": "create",
              "packageAndClassName": "register.controller.AccountRegisterController"
            }
          ],
          "name": "AccountRegisterController",
          "path": "/ts-register-service/src/main/java/register/controller/AccountRegisterController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "register.service",
          "implementedTypes": [
            "RegisterService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "RegisterInfo",
                  "annotations": [],
                  "name": "ri",
                  "packageAndClassName": "register.service.RegisterServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "YsbCaptcha",
                  "packageAndClassName": "register.service.RegisterServiceImpl"
                }
              ],
              "returnType": "RegisterResult",
              "microserviceName": "ts-register-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "register.service.RegisterServiceImpl"
                }
              ],
              "className": "RegisterServiceImpl",
              "name": "create",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "requestHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "create",
              "parameterContents": "\"Cookie\",\"YsbCaptcha=\" + YsbCaptcha",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "add",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "body",
              "objectType": "MultiValueMap",
              "calledFrom": "create",
              "parameterContents": "\"verificationCode\",ri.getVerificationCode()",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "add",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "getVerificationCode",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "url": "/verification/verify",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "create",
              "parameterContents": "\"http://ts-verification-code-service:15678/verification/verify\",HttpMethod.POST,requestEntity,String.class",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "exchange",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "rssResponse",
              "objectType": "ResponseEntity",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "getBody",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Register Service][Register] Verification Result:\" + verifyResult",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "println",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "verifyResult",
              "objectType": "String",
              "calledFrom": "create",
              "parameterContents": "\"true\"",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "contains",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "verifyCodeLr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "null",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "verifyCodeLr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "\"Verification Code Wrong\"",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "verifyCodeLr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "false",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "url": "/account/register",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "create",
              "parameterContents": "\"http://ts-sso-service:12349/account/register\",ri,RegisterResult.class",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "rr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Register Service] Register Success.\"",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "println",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Register Service] Get Price Account.\"",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "println",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "createAccountInfo",
              "objectType": "CreateAccountInfo",
              "calledFrom": "create",
              "parameterContents": "rr.getAccount().getId().toString()",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "toString",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "getId",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "rr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "createAccountInfo",
              "objectType": "CreateAccountInfo",
              "calledFrom": "create",
              "parameterContents": "\"10000\"",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Register Service] Get Price Account.\"",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "println",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            },
            {
              "url": "/inside_payment/createAccount",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "create",
              "parameterContents": "\"http://ts-inside-payment-service:18673/inside_payment/createAccount\",createAccountInfo,Boolean.class",
              "microserviceName": "ts-register-service",
              "className": "RegisterServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "register.service.RegisterServiceImpl"
            }
          ],
          "name": "RegisterServiceImpl",
          "path": "/ts-register-service/src/main/java/register/service/RegisterServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-register-service",
              "artifactId": "ts-register-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-register-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12344
            },
            "spring": {
              "application": {
                "name": "ts-register-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-register-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-route-plan-service",
      "path": "/ts-route-plan-service",
      "controllers": [
        {
          "packageName": "plan.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/routePlan/cheapestRoute",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetRoutePlanInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "returnType": "RoutePlanResults",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/routePlan/cheapestRoute"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "className": "RoutePlanController",
              "name": "getCheapestRoutes",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "url": "/routePlan/quickestRoute",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetRoutePlanInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "returnType": "RoutePlanResults",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/routePlan/quickestRoute"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "className": "RoutePlanController",
              "name": "getQuickestRoutes",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "url": "/routePlan/minStopStations",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetRoutePlanInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "returnType": "RoutePlanResults",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/routePlan/minStopStations"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "className": "RoutePlanController",
              "name": "getMinStopStations",
              "packageAndClassName": "plan.controller.RoutePlanController"
            }
          ],
          "fields": [
            {
              "type": "RoutePlanService",
              "name": "routePlanService",
              "packageAndClassName": "plan.controller.RoutePlanController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "plan.controller.RoutePlanController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "\"[Route Plan Service][Get Cheapest Routes] From:\" + info.getFormStationName() + \" to:\" + info.getToStationName() + \" Num:\" + info.getNum() + \" Date:\" + info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "println",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getFormStationName",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getToStationName",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getNum",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getTravelDate",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "routePlanService",
              "objectType": "RoutePlanService",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "info",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "searchCheapestResult",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "\"[Route Plan Service][Get Quickest Routes] From:\" + info.getFormStationName() + \" to:\" + info.getToStationName() + \" Num:\" + info.getNum() + \" Date:\" + info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "println",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getFormStationName",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getToStationName",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getNum",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getTravelDate",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "routePlanService",
              "objectType": "RoutePlanService",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "info",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "searchQuickestResult",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getMinStopStations",
              "parameterContents": "\"[Route Plan Service][Get Min Stop Stations] From:\" + info.getFormStationName() + \" to:\" + info.getToStationName() + \" Num:\" + info.getNum() + \" Date:\" + info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "println",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getFormStationName",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getToStationName",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getNum",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getTravelDate",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "routePlanService",
              "objectType": "RoutePlanService",
              "calledFrom": "getMinStopStations",
              "parameterContents": "info",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "searchMinStopStations",
              "packageAndClassName": "plan.controller.RoutePlanController"
            }
          ],
          "name": "RoutePlanController",
          "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "plan.service",
          "implementedTypes": [
            "RoutePlanService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-route-plan-service",
              "annotations": [],
              "className": "RoutePlanServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "ArrayList<TripResponse>",
              "microserviceName": "ts-route-plan-service",
              "annotations": [],
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromHighSpeedTravelServive",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-route-plan-service",
              "annotations": [],
              "className": "RoutePlanServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "ArrayList<String>",
              "microserviceName": "ts-route-plan-service",
              "annotations": [],
              "className": "RoutePlanServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetRoutePlanInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "RoutePlanResults",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "className": "RoutePlanServiceImpl",
              "name": "searchCheapestResult",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "queryInfo",
              "objectType": "QueryInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "info.getFormStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getFormStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "QueryInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "info.getToStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "QueryInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "queryInfo",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromHighSpeedTravelServive",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "queryInfo",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromNormalTrainTravelService",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "highSpeed",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "normalTrain",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "5,finalResult.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "min",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Float",
              "objectType": "Float",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "thisRes.getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "parseFloat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "thisRes",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Float",
              "objectType": "Float",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "finalResult.get(j).getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "parseFloat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "finalResult.get(minIndex)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "remove",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "true",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getTrainTypeId()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getStartingStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setFromStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartingStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getTerminalStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTerminalStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "getStationList(tempResponse.getTripId().toString())",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getPriceForConfortClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getStartingTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getEndTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "units",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempUnit",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "units",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setResults",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "QueryInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "info.getFormStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getFormStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "QueryInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "info.getToStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "QueryInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "queryInfo",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromHighSpeedTravelServive",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "queryInfo",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromNormalTrainTravelService",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tr",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tr",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "finalResult.size(),5",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "min",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "thisRes",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "thisRes",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "thisRes",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "thisRes",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "finalResult.get(minIndex)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "remove",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "true",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getTrainTypeId()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getStartingStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setFromStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartingStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getTerminalStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTerminalStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "getStationList(tempResponse.getTripId().toString())",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getPriceForConfortClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getStartingTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getEndTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "units",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempUnit",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "units",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setResults",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getFormStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getFormStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getToStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"From Id:\" + fromStationId + \" To:\" + toStationId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/route/queryByStartAndTerminal",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"http://ts-route-service:11178/route/queryByStartAndTerminal\",searchRouteInfo,GetRoutesListlResult.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeResult",
              "objectType": "GetRoutesListlResult",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getRoutes",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"[Route Plan Service] Candidate Route Number:\" + routeList.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "fromStationId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "toStationId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "indexEnd - indexStart",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getNum(),routeList.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "min",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getNum",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "resultRoutes",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "routeList.get(minIndex).getId()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "remove",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "getTripInfo",
              "objectType": "GetTripsByRouteIdInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "resultRoutes",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setRouteIds",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/travel/getTripsByRouteId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"http://ts-travel-service:12346/travel/getTripsByRouteId\",getTripInfo,GetTripsByRouteIdResult.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/travel2/getTripsByRouteId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/getTripsByRouteId\",getTripInfo,GetTripsByRouteIdResult.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "resultTravel",
              "objectType": "GetTripsByRouteIdResult",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripsSet",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "resultTravel2",
              "objectType": "GetTripsByRouteIdResult",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripsSet",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "travel2Trips",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "travel2Trips",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempList",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "travelTrips.get(i)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "travelTrips",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalTripResult",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tempList",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"[Route Plan Service] Trips Num:\" + finalTripResult.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalTripResult",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tempTrips",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "0",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "charAt",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "0",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "charAt",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "trip.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getFormStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getFormStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getToStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTo",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "//travel/getTripAllDetailInfo",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"http://ts-travel-service:12346//travel/getTripAllDetailInfo\",allDetailInfo,GetTripAllDetailResult.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripDetailResult",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "trip.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getFormStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getFormStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getToStationName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTo",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "//travel2/getTripAllDetailInfo",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"http://ts-travel2-service:16346//travel2/getTripAllDetailInfo\",allDetailInfo,GetTripAllDetailResult.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripDetailResult",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "trip.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getTrainTypeId()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getStartingStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setFromStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartingStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getTerminalStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTerminalStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getStartingTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getEndTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getPriceForConfortClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "routeId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripRoute.getStations()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripRoute",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponses",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "unit",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"[Route Plan Service] Trips Response Unit Num:\" + tripResponses.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponses",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "true",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponses",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setResults",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[Preserve Service][Get Station Name]\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryForId",
              "objectType": "QueryForStationId",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationName",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/station/queryForId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"http://ts-station-service:12345/station/queryForId\",queryForId,String.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Route Plan Service][Get Route By Id] Route ID：\" + routeId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/route/queryById/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"http://ts-route-service:11178/route/queryById/\" + routeId,GetRouteResult.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Travel Service][Get Route By Id] Fail.\" + result.getMessage()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Travel Service][Get Route By Id] Success.\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/travel/queryWithPackage",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "\"http://ts-travel-service:12346/travel/queryWithPackage\",info,QueryTripResponsePackage.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "\"[Route Plan Get Trip][Size]\" + list.getResponses().size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "QueryTripResponsePackage",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "QueryTripResponsePackage",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getResponses",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "QueryTripResponsePackage",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getResponses",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/travel2/queryWithPackage",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/queryWithPackage\",info,QueryTripResponsePackage.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "\"[Route Plan Get TripOther][Size]\" + list.getResponses().size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "println",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "QueryTripResponsePackage",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "QueryTripResponsePackage",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getResponses",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "QueryTripResponsePackage",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getResponses",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getStationList",
              "parameterContents": "0",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "charAt",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getStationList",
              "parameterContents": "0",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "charAt",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getStationList",
              "parameterContents": "path,GetRouteResult.class",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetRouteResult",
              "calledFrom": "getStationList",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "GetRouteResult",
              "calledFrom": "getStationList",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            }
          ],
          "name": "RoutePlanServiceImpl",
          "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-route-plan-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 14578
            }
          },
          "name": "application.yml",
          "path": "/ts-route-plan-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-route-plan-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-route-plan-service",
              "artifactId": "ts-route-plan-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-route-plan-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-route-service",
      "path": "/ts-route-service",
      "controllers": [
        {
          "packageName": "route.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/route/createAndModify",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateAndModifyRouteInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "createAndModifyRouteInfo",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "CreateAndModifyRouteResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/route/createAndModify"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "createAndModifyRoute",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/route/queryByStartAndTerminal",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetRouteByStartAndTerminalInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "getRouteByStartAndTerminalInfo",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "GetRoutesListlResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/route/queryByStartAndTerminal"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "queryByStartAndTerminal",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/route/queryById/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "routeId",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "GetRouteByIdResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/route/queryById/{routeId}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "queryById",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/route/queryAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "GetRoutesListlResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/route/queryAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "queryAll",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/route/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteRouteInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "deleteRouteInfo",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "DeleteRouteResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/route/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "deleteRoute",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "home",
              "packageAndClassName": "route.controller.RouteController"
            }
          ],
          "fields": [
            {
              "type": "RouteService",
              "name": "routeService",
              "packageAndClassName": "route.controller.RouteController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "route.controller.RouteController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "createAndModifyRouteInfo",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "createAndModify",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "deleteRoute",
              "parameterContents": "deleteRouteInfo",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "deleteRoute",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "queryById",
              "parameterContents": "routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getRouteById",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getAllRoutes",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "queryByStartAndTerminal",
              "parameterContents": "getRouteByStartAndTerminalInfo",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getRouteByStartAndTerminal",
              "packageAndClassName": "route.controller.RouteController"
            }
          ],
          "name": "RouteController",
          "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "route.service",
          "implementedTypes": [
            "RouteService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [],
              "returnType": "GetRoutesListlResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "getAllRoutes",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CreateAndModifyRouteInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "returnType": "CreateAndModifyRouteResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "createAndModify",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetRouteByStartAndTerminalInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "returnType": "GetRoutesListlResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "getRouteByStartAndTerminal",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteRouteInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "returnType": "DeleteRouteResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "deleteRoute",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "returnType": "GetRouteByIdResult",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "getRouteById",
              "packageAndClassName": "route.service.RouteServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RouteRepository",
              "name": "routeRepository",
              "packageAndClassName": "route.service.RouteServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "route.service.RouteServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createAndModify",
              "parameterContents": "\"[Route Service] Create And Modify Start:\" + info.getStartStation() + \" End:\" + info.getEndStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "println",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "\",\"",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "split",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "\",\"",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "split",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getDistanceList",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "ArrayList",
              "calledFrom": "createAndModify",
              "parameterContents": "stations[i]",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "add",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "distanceList",
              "objectType": "ArrayList",
              "calledFrom": "createAndModify",
              "parameterContents": "Integer.parseInt(distances[i])",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "add",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "createAndModify",
              "parameterContents": "distances[i]",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "length",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "toString",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getStartStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setStartStationId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getEndStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setTerminalStationId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "stationList",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "distanceList",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setDistances",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "createAndModify",
              "parameterContents": "route",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "save",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findById",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getStartStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setStartStationId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getEndStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setTerminalStationId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateAndModifyRouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "stationList",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "distanceList",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setDistances",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "createAndModify",
              "parameterContents": "route",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "save",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "deleteRoute",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "removeRouteById",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DeleteRouteInfo",
              "calledFrom": "deleteRoute",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "getRouteById",
              "parameterContents": "routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findById",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findAll",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "\"[Route Service] Find All:\" + routes.size()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "println",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routes",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "size",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "info.getStartId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "contains",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRouteByStartAndTerminalInfo",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStartId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "info.getTerminalId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "contains",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRouteByStartAndTerminalInfo",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getTerminalId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "info.getStartId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRouteByStartAndTerminalInfo",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStartId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "info.getTerminalId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetRouteByStartAndTerminalInfo",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getTerminalId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "resultList",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndTerminal",
              "parameterContents": "route",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "add",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "getAllRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findAll",
              "packageAndClassName": "route.service.RouteServiceImpl"
            }
          ],
          "name": "RouteServiceImpl",
          "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "route.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [],
              "returnType": "ArrayList<Route>",
              "microserviceName": "ts-route-service",
              "annotations": [],
              "className": "RouteRepository",
              "name": "findAll",
              "packageAndClassName": "route.repository.RouteRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startingId",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "returnType": "ArrayList<Route>",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'startStationId': ?0 , 'terminalStationId': ?1 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "className": "RouteRepository",
              "name": "findByStartStationIdAndTerminalStationId",
              "packageAndClassName": "route.repository.RouteRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-route-service",
              "annotations": [],
              "className": "RouteRepository",
              "name": "removeRouteById",
              "packageAndClassName": "route.repository.RouteRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'id': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "className": "RouteRepository",
              "name": "findById",
              "packageAndClassName": "route.repository.RouteRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "route.repository.RouteRepository"
            }
          ],
          "methodCalls": [],
          "name": "RouteRepository",
          "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-route-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-route-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 11178
            }
          },
          "name": "application.yml",
          "path": "/ts-route-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-route-service",
              "artifactId": "ts-route-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-route-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-seat-service",
      "path": "/ts-seat-service",
      "controllers": [
        {
          "packageName": "seat.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/seat/getLeftTicketOfInterval",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "SeatRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "seat.controller.SeatController"
                    }
                  ],
                  "name": "seatRequest",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "returnType": "int",
              "microserviceName": "ts-seat-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/seat/getLeftTicketOfInterval"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "seat.controller.SeatController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "className": "SeatController",
              "name": "getLeftTicketOfInterval",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "url": "/seat/getSeat",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "SeatRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "seat.controller.SeatController"
                    }
                  ],
                  "name": "seatRequest",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "returnType": "Ticket",
              "microserviceName": "ts-seat-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "seat.controller.SeatController"
                },
                {
                  "attributes": {
                    "value": "/seat/getSeat"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "className": "SeatController",
              "name": "create",
              "packageAndClassName": "seat.controller.SeatController"
            }
          ],
          "fields": [
            {
              "type": "SeatService",
              "name": "seatService",
              "packageAndClassName": "seat.controller.SeatController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "seat.controller.SeatController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "seatService",
              "objectType": "SeatService",
              "calledFrom": "create",
              "parameterContents": "seatRequest",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "distributeSeat",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatService",
              "objectType": "SeatService",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "seatRequest",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "getLeftTicketOfInterval",
              "packageAndClassName": "seat.controller.SeatController"
            }
          ],
          "name": "SeatController",
          "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "seat.service",
          "implementedTypes": [
            "SeatService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "SeatRequest",
                  "annotations": [],
                  "name": "seatRequest",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "returnType": "Ticket",
              "microserviceName": "ts-seat-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "className": "SeatServiceImpl",
              "name": "distributeSeat",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "SeatRequest",
                  "annotations": [],
                  "name": "seatRequest",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "returnType": "int",
              "microserviceName": "ts-seat-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "className": "SeatServiceImpl",
              "name": "getLeftTicketOfInterval",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seat",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                },
                {
                  "type": "Set<Ticket>",
                  "annotations": [],
                  "name": "soldTickets",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-seat-service",
              "annotations": [],
              "className": "SeatServiceImpl",
              "name": "isContained",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "double",
              "microserviceName": "ts-seat-service",
              "annotations": [],
              "className": "SeatServiceImpl",
              "name": "getDirectProportion",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] TrainNumber start with G|D\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/travel/getRouteByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"http://ts-travel-service:12346/travel/getRouteByTripId/\" + seatRequest.getTrainNumber(),GetRouteResult.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] The result of getRouteResult is \" + routeResult.getMessage()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "routeResult",
              "objectType": "GetRouteResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/order/getTicketListByDateAndTripId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"http://ts-order-service:12031/order/getTicketListByDateAndTripId\",seatRequest,LeftTicketInfo.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/travel/getTrainTypeByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"http://ts-travel-service:12346/travel/getTrainTypeByTripId/\" + seatRequest.getTrainNumber(),GetTrainTypeResult.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] The result of getTrainTypeResult is \" + trainTypeResult.getMessage()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainTypeResult",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService] TrainNumber start with other capital\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/travel/getRouteByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"http://ts-travel2-service:16346/travel/getRouteByTripId/\" + seatRequest.getTrainNumber(),GetRouteResult.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] The result of getRouteResult is \" + routeResult.getMessage()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "routeResult",
              "objectType": "GetRouteResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/order/getTicketListByDateAndTripId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"http://ts-order-other-service:12032/order/getTicketListByDateAndTripId\",seatRequest,LeftTicketInfo.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/travel/getTrainTypeByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"http://ts-travel2-service:16346/travel/getTrainTypeByTripId/\" + seatRequest.getTrainNumber(),GetTrainTypeResult.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] The result of getTrainTypeResult is \" + trainTypeResult.getMessage()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainTypeResult",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetRouteResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStations",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "routeResult",
              "objectType": "GetRouteResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getCode",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainTypeResult",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] The request seat type is confortClass and the total num is \" + seatTotalNum",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainTypeResult",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] The request seat type is economyClass and the total num is \" + seatTotalNum",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "startStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "seatRequest.getDestStation()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSoldTickets",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "distributeSeat",
              "parameterContents": "soldTicketDestStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "distributeSeat",
              "parameterContents": "startStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "soldTicket.getSeatNo()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "setSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] Use the previous distributed seat number!\" + soldTicket.getSeatNo()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "rand",
              "objectType": "Random",
              "calledFrom": "distributeSeat",
              "parameterContents": "range",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "distributeSeat",
              "parameterContents": "soldTickets,seat",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "isContained",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "rand",
              "objectType": "Random",
              "calledFrom": "distributeSeat",
              "parameterContents": "range",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "seat",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "setSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[SeatService distributeSeat] Use a new seat number!\" + seat",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "isContained",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] TrainNumber start with G|D\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/travel/getRouteByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"http://ts-travel-service:12346/travel/getRouteByTripId/\" + seatRequest.getTrainNumber(),GetRouteResult.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] The result of getRouteResult is \" + routeResult.getMessage()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "routeResult",
              "objectType": "GetRouteResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/order/getTicketListByDateAndTripId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"http://ts-order-service:12031/order/getTicketListByDateAndTripId\",seatRequest,LeftTicketInfo.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/travel/getTrainTypeByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"http://ts-travel-service:12346/travel/getTrainTypeByTripId/\" + seatRequest.getTrainNumber(),GetTrainTypeResult.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] The result of getTrainTypeResult is \" + trainTypeResult.getMessage()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainTypeResult",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] TrainNumber start with other capital\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/travel2/getRouteByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/getRouteByTripId/\" + seatRequest.getTrainNumber(),GetRouteResult.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] The result of getRouteResult is \" + routeResult.getMessage()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "routeResult",
              "objectType": "GetRouteResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/orderOther/getTicketListByDateAndTripId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/getTicketListByDateAndTripId\",seatRequest,LeftTicketInfo.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/travel2/getTrainTypeByTripId/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/getTrainTypeByTripId/\" + seatRequest.getTrainNumber(),GetTrainTypeResult.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] The result of getTrainTypeResult is \" + trainTypeResult.getMessage()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainTypeResult",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetRouteResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStations",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "routeResult",
              "objectType": "GetRouteResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getCode",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainTypeResult",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] The request seat type is confortClass and the total num is \" + seatTotalNum",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainTypeResult",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] The request seat type is economyClass and the total num is \" + seatTotalNum",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSoldTickets",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "soldTicketDestStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "startStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[SeatService getLeftTicketOfInterval] The previous distributed seat number is usable!\" + soldTicket.getSeatNo()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "println",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDirectProportion",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "routeResult",
              "objectType": "GetRouteResult",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "seatRequest.getStartStation()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "equals",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "0",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "get",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStations",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "seatRequest.getDestStation()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "equals",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "route.getStations().size() - 1",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "get",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStations",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "size",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStations",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTickets",
              "objectType": "Ticket",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "size",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "//config/query",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getDirectProportion",
              "parameterContents": "\"http://ts-config-service:15679//config/query\",queryConfig,String.class",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "getDirectProportion",
              "parameterContents": "configValue",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "parseDouble",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            }
          ],
          "name": "SeatServiceImpl",
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 18898
            },
            "spring": {
              "application": {
                "name": "ts-seat-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-seat-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-seat-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-seat-service",
              "artifactId": "ts-seat-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-seat-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-security-service",
      "path": "/ts-security-service",
      "controllers": [
        {
          "packageName": "security.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/securityConfig/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "UpdateSecurityConfigInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "UpdateSecurityConfigResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "path": "/securityConfig/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "update",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/security/check",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CheckInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "CheckResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/security/check"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "check",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/securityConfig/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "DeleteConfigInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "DeleteConfigResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "path": "/securityConfig/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "delete",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "home",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/securityConfig/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "CreateSecurityConfigInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "CreateSecurityConfigResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "path": "/securityConfig/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "create",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/securityConfig/findAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "GetAllSecurityConfigResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "path": "/securityConfig/findAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "findAllSecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            }
          ],
          "fields": [
            {
              "type": "SecurityService",
              "name": "securityService",
              "packageAndClassName": "security.controller.SecurityController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "security.controller.SecurityController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "\"[Security Service][Find All]\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "println",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "findAllSecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[Security Service][Create] Name:\" + info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "println",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "info",
              "objectType": "CreateSecurityConfigInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "getName",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "create",
              "parameterContents": "info",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "addNewSecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "update",
              "parameterContents": "\"[Security Service][Update] Name:\" + info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "println",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "info",
              "objectType": "UpdateSecurityConfigInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "getName",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "update",
              "parameterContents": "info",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "modifySecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "delete",
              "parameterContents": "\"[Security Service][Delete] Id:\" + info.getId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "println",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "info",
              "objectType": "DeleteConfigInfo",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "getId",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "delete",
              "parameterContents": "info",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "deleteSecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "check",
              "parameterContents": "\"[Security Service][Check Security] Check Account Id:\" + info.getAccountId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "println",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "info",
              "objectType": "CheckInfo",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "getAccountId",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "check",
              "parameterContents": "info",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "check",
              "packageAndClassName": "security.controller.SecurityController"
            }
          ],
          "name": "SecurityController",
          "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "security.service",
          "implementedTypes": [
            "SecurityService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "GetOrderInfoForSecurity",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "GetOrderInfoForSecurityResult",
              "microserviceName": "ts-security-service",
              "annotations": [],
              "className": "SecurityServiceImpl",
              "name": "getSecurityOrderInfoFromOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CheckInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "CheckResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "className": "SecurityServiceImpl",
              "name": "check",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "GetAllSecurityConfigResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "className": "SecurityServiceImpl",
              "name": "findAllSecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeleteConfigInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "DeleteConfigResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "className": "SecurityServiceImpl",
              "name": "deleteSecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "CreateSecurityConfigInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "CreateSecurityConfigResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "className": "SecurityServiceImpl",
              "name": "addNewSecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UpdateSecurityConfigInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "UpdateSecurityConfigResult",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "className": "SecurityServiceImpl",
              "name": "modifySecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "SecurityRepository",
              "name": "securityRepository",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "result",
              "objectType": "GetAllSecurityConfigResult",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "true",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllSecurityConfigResult",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAllSecurityConfigResult",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "securityRepository.findAll()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setResult",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findAll",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findByName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateSecurityConfigInfo",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateSecurityConfigResult",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "false",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateSecurityConfigResult",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "\"Security Config Already Exist\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateSecurityConfigResult",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "null",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setSecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateSecurityConfigInfo",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "info.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateSecurityConfigInfo",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "info.getDescription()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setDescription",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CreateSecurityConfigInfo",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getDescription",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "config",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "save",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateSecurityConfigResult",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "true",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateSecurityConfigResult",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CreateSecurityConfigResult",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "config",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setSecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "UUID.fromString(info.getId())",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findById",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "fromString",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "UpdateSecurityConfigInfo",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateSecurityConfigResult",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "false",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateSecurityConfigResult",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "\"Security Config Not Exist\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateSecurityConfigResult",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "null",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setResult",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "sc",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "UpdateSecurityConfigInfo",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "sc",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "info.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "UpdateSecurityConfigInfo",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "sc",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "info.getDescription()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setDescription",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "UpdateSecurityConfigInfo",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getDescription",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "sc",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "save",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateSecurityConfigResult",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "true",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateSecurityConfigResult",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "UpdateSecurityConfigResult",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "sc",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setResult",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "UUID.fromString(info.getId())",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "fromString",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DeleteConfigInfo",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "UUID.fromString(info.getId())",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findById",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "fromString",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "DeleteConfigInfo",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteConfigResult",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "true",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteConfigResult",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteConfigResult",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "false",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteConfigResult",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "\"Reason Not clear\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "check",
              "parameterContents": "\"[Security Service][Get Order Num Info]\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "println",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "infoOrder",
              "objectType": "GetOrderInfoForSecurity",
              "calledFrom": "check",
              "parameterContents": "info.getAccountId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CheckInfo",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "infoOrder",
              "objectType": "GetOrderInfoForSecurity",
              "calledFrom": "check",
              "parameterContents": "new Date()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setCheckDate",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "check",
              "parameterContents": "infoOrder",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getSecurityOrderInfoFromOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "check",
              "parameterContents": "infoOrder",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getSecurityOrderOtherInfoFromOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumInLastOneHour",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumInLastOneHour",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumOfValidOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumOfValidOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "check",
              "parameterContents": "\"[Security Service][Get Security Config Info]\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "println",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "check",
              "parameterContents": "\"max_order_1_hour\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findByName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "check",
              "parameterContents": "\"max_order_not_use\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findByName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "check",
              "parameterContents": "\"[Security Service] Max In One Hour:\" + configMaxInHour.getValue() + \" Max Not Use:\" + configMaxNotUse.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "println",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "configMaxInHour",
              "objectType": "SecurityConfig",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "configMaxNotUse",
              "objectType": "SecurityConfig",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "check",
              "parameterContents": "configMaxInHour.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "configMaxInHour",
              "objectType": "SecurityConfig",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "check",
              "parameterContents": "configMaxNotUse.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "configMaxNotUse",
              "objectType": "SecurityConfig",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "check",
              "parameterContents": "false",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "check",
              "parameterContents": "info.getAccountId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CheckInfo",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "check",
              "parameterContents": "\"Too much order in last one hour or too much valid order\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "check",
              "parameterContents": "true",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "check",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "CheckResult",
              "calledFrom": "check",
              "parameterContents": "info.getAccountId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "CheckInfo",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "\"[Security Service][Get Order Info For Security] Getting....\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "println",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "url": "/getOrderInfoForSecurity",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "\"http://ts-order-service:12031/getOrderInfoForSecurity\",info,GetOrderInfoForSecurityResult.class",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "\"[Security Service][Get Order Info For Security] Last One Hour:\" + result.getOrderNumInLastOneHour() + \" Total Valid Order:\" + result.getOrderNumOfValidOrder()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "println",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumInLastOneHour",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumOfValidOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "\"[Security Service][Get Order Other Info For Security] Getting....\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "println",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "url": "/getOrderOtherInfoForSecurity",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "\"http://ts-order-other-service:12032/getOrderOtherInfoForSecurity\",info,GetOrderInfoForSecurityResult.class",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "\"[Security Service][Get Order Other Info For Security] Last One Hour:\" + result.getOrderNumInLastOneHour() + \" Total Valid Order:\" + result.getOrderNumOfValidOrder()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "println",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumInLastOneHour",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetOrderInfoForSecurityResult",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumOfValidOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            }
          ],
          "name": "SecurityServiceImpl",
          "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "security.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "name",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "returnType": "SecurityConfig",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'name': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "className": "SecurityRepository",
              "name": "findByName",
              "packageAndClassName": "security.repository.SecurityRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<SecurityConfig>",
              "microserviceName": "ts-security-service",
              "annotations": [],
              "className": "SecurityRepository",
              "name": "findAll",
              "packageAndClassName": "security.repository.SecurityRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "returnType": "SecurityConfig",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'id': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "className": "SecurityRepository",
              "name": "findById",
              "packageAndClassName": "security.repository.SecurityRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-security-service",
              "annotations": [],
              "className": "SecurityRepository",
              "name": "deleteById",
              "packageAndClassName": "security.repository.SecurityRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "security.repository.SecurityRepository"
            }
          ],
          "methodCalls": [],
          "name": "SecurityRepository",
          "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-security-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-security-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 11188
            }
          },
          "name": "application.yml",
          "path": "/ts-security-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-security-service",
              "artifactId": "ts-security-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-security-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-sso-service",
      "path": "/ts-sso-service",
      "controllers": [
        {
          "packageName": "sso.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/account/login",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "LoginInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "sso.controller.AccountSsoController"
                    }
                  ],
                  "name": "li",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "LoginResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/account/login"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "login",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/account/modify",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ModifyAccountInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "sso.controller.AccountSsoController"
                    }
                  ],
                  "name": "modifyAccountInfo",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "ModifyAccountResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/account/modify"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "modifyAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/account/findById",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetAccountByIdInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "sso.controller.AccountSsoController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "GetAccountByIdResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/account/findById"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "getAccountById",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "PutLoginResult",
              "microserviceName": "ts-sso-service",
              "annotations": [],
              "className": "AccountSsoController",
              "name": "loginPutToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/account/findAllLogin",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "GetLoginAccountList",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/account/findAllLogin"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "findAllLoginAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/account/findAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "FindAllAccountResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/account/findAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "findAllAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "home",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/account/register",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "RegisterInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "sso.controller.AccountSsoController"
                    }
                  ],
                  "name": "ri",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "RegisterResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/account/register"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "createNewAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/verifyLoginToken/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "sso.controller.AccountSsoController"
                    }
                  ],
                  "name": "token",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/verifyLoginToken/{token}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "verifyLoginToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/logout",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "LogoutInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "sso.controller.AccountSsoController"
                    }
                  ],
                  "name": "li",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "LogoutResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/logout"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "logoutDeleteToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/account/adminlogin",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AdminLoginInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "sso.controller.AccountSsoController"
                    }
                  ],
                  "name": "ali",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "Contacts",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/account/adminlogin"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "adminLogin",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "url": "/account/admindelete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AdminDeleteAccountRequest",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "sso.controller.AccountSsoController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "returnType": "DeleteAccountResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                },
                {
                  "attributes": {
                    "path": "/account/admindelete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "sso.controller.AccountSsoController"
                }
              ],
              "className": "AccountSsoController",
              "name": "adminDelete",
              "packageAndClassName": "sso.controller.AccountSsoController"
            }
          ],
          "fields": [
            {
              "type": "AccountSsoService",
              "name": "ssoService",
              "packageAndClassName": "sso.controller.AccountSsoController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "sso.controller.AccountSsoController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "findAllAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "findAllAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "findAllLoginAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "findAllLoginAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "modifyAccount",
              "parameterContents": "modifyAccountInfo",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "saveChanges",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "createNewAccount",
              "parameterContents": "ri",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "create",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "login",
              "parameterContents": "li",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "login",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getStatus",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service][Login] Login Fail. No token generate.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service][Login] Password Right. Put token to sso.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "login",
              "parameterContents": "lr.getAccount().getId().toString()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "loginPutToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "toString",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getId",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service] PutLoginResult Status: \" + tokenResult.isStatus()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "PutLoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "isStatus",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "PutLoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "isStatus",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service][Login] Post to sso:\" + tokenResult.getToken()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "PutLoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "tokenResult.getToken()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "setToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "PutLoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "tokenResult.getMsg()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "setMessage",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "PutLoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getMsg",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service][Login] Token Result Fail.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "null",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "setToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "setStatus",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "tokenResult.getMsg()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "setMessage",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "tokenResult",
              "objectType": "PutLoginResult",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getMsg",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "null",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "setAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "\"[SSO Service][Logout Delete Token] ID:\" + li.getId() + \"Token:\" + li.getToken()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getId",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "li",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "logoutDeleteToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getAccountById",
              "parameterContents": "\"[SSO Service][Find Account By Id] Account Id:\" + info.getAccountId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "info",
              "objectType": "GetAccountByIdInfo",
              "calledFrom": "getAccountById",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getAccountId",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "getAccountById",
              "parameterContents": "info",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getAccountById",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "token",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "verifyLoginToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "loginPutToken",
              "parameterContents": "loginId",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "loginPutToken",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "adminLogin",
              "parameterContents": "\"[SSO Service][Admin Login]\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "adminLogin",
              "parameterContents": "ali.getName(),ali.getPassword()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "adminLogin",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ali",
              "objectType": "AdminLoginInfo",
              "calledFrom": "adminLogin",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getName",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ali",
              "objectType": "AdminLoginInfo",
              "calledFrom": "adminLogin",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getPassword",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "adminDelete",
              "parameterContents": "\"[SSO Service][Admin Delete Account]\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "println",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "ssoService",
              "objectType": "AccountSsoService",
              "calledFrom": "adminDelete",
              "parameterContents": "request.getAccountId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "deleteAccount",
              "packageAndClassName": "sso.controller.AccountSsoController"
            },
            {
              "objectName": "request",
              "objectType": "AdminDeleteAccountRequest",
              "calledFrom": "adminDelete",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoController",
              "name": "getAccountId",
              "packageAndClassName": "sso.controller.AccountSsoController"
            }
          ],
          "name": "AccountSsoController",
          "path": "/ts-sso-service/src/main/java/sso/controller/AccountSsoController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "sso.service",
          "implementedTypes": [
            "AccountSsoService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "LogoutInfo",
                  "annotations": [],
                  "name": "li",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "LogoutResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "logoutDeleteToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "FindAllAccountResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "findAllAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginId",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "PutLoginResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "loginPutToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "LoginInfo",
                  "annotations": [],
                  "name": "li",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "LoginResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "login",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetAccountByIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "GetAccountByIdResult",
              "microserviceName": "ts-sso-service",
              "annotations": [],
              "className": "AccountSsoServiceImpl",
              "name": "getAccountById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "name",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "Contacts",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "adminLogin",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "RegisterInfo",
                  "annotations": [],
                  "name": "ri",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "RegisterResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "create",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "GetLoginAccountList",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "findAllLoginAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ModifyAccountInfo",
                  "annotations": [],
                  "name": "modifyAccountInfo",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "ModifyAccountResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "saveChanges",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "DeleteAccountResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "deleteAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Account",
                  "annotations": [],
                  "name": "account",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "Account",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "createAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "verifyToken",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "returnType": "VerifyResult",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "sso.service.AccountSsoServiceImpl"
                }
              ],
              "className": "AccountSsoServiceImpl",
              "name": "verifyLoginToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "LoginUserListRepository",
              "name": "loginUserListRepository",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "type": "AccountRepository",
              "name": "accountRepository",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "createAccount",
              "parameterContents": "account.getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createAccount",
              "parameterContents": "\"[SSO Service][Init Account] Account Already Exists.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createAccount",
              "parameterContents": "\"[SSO Service][Init Account] Before:\" + account.getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "createAccount",
              "parameterContents": "account",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "save",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "createAccount",
              "parameterContents": "account.getEmail()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findByEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "createAccount",
              "parameterContents": "\"[SSO Service][Init Account] After:\" + oldAcc.getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "oldAcc",
              "objectType": "Account",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "create",
              "parameterContents": "ri.getEmail()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findByEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "rr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "rr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "\"Account Already Exists\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "rr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "null",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[SSO Service][Register] Fail.Account already exists.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[SSO Service][Register] Register Email:\" + ri.getEmail() + \" Exist Email:\" + oldAcc.getEmail()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "oldAcc",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "ri.getEmail()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "ri.getPassword()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "ri.getName()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setName",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getName",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "ri.getDocumentNum()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setDocumentNum",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getDocumentNum",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "ri.getDocumentType()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "ri.getGender()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setGender",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "ri",
              "objectType": "RegisterInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getGender",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "create",
              "parameterContents": "account",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "save",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "resultAcc",
              "objectType": "Account",
              "calledFrom": "create",
              "parameterContents": "\"\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "create",
              "parameterContents": "\"[SSO Service][Register] Success.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "rr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "rr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "rr",
              "objectType": "RegisterResult",
              "calledFrom": "create",
              "parameterContents": "account",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service][Login] Fail.Account not found.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "\"Account Not Found\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "null",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "login",
              "parameterContents": "li.getEmail()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findByEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Account",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Account",
              "calledFrom": "login",
              "parameterContents": "li.getPassword()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "equals",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Account",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LoginInfo",
              "calledFrom": "login",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Account",
              "calledFrom": "login",
              "parameterContents": "\"\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service][Login] Success.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "result",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "null",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "\"Account Not Exist\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service][Login] Fail.Account Not Exist.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LoginResult",
              "calledFrom": "login",
              "parameterContents": "\"Password Wrong\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "login",
              "parameterContents": "\"[SSO Service][Login] Fail.Wrong Password.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "loginUserListRepository",
              "objectType": "LoginUserListRepository",
              "calledFrom": "loginPutToken",
              "parameterContents": "loginId",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "loginPutToken",
              "parameterContents": "\"[SSO Service][Login] Already Login. Old login session will be kick off\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "loginPutToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "toString",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "loginPutToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "loginUserListRepository",
              "objectType": "LoginUserListRepository",
              "calledFrom": "loginPutToken",
              "parameterContents": "new LoginValue(loginId, token)",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "save",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "plr",
              "objectType": "PutLoginResult",
              "calledFrom": "loginPutToken",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "plr",
              "objectType": "PutLoginResult",
              "calledFrom": "loginPutToken",
              "parameterContents": "loginId",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setLoginId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "plr",
              "objectType": "PutLoginResult",
              "calledFrom": "loginPutToken",
              "parameterContents": "\"Success.Other login session has been kick off.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "plr",
              "objectType": "PutLoginResult",
              "calledFrom": "loginPutToken",
              "parameterContents": "token",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "loginPutToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "toString",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "loginPutToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "loginUserListRepository",
              "objectType": "LoginUserListRepository",
              "calledFrom": "loginPutToken",
              "parameterContents": "new LoginValue(loginId, token)",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "save",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "loginPutToken",
              "parameterContents": "\"[SSO Service][Login] Login Success. Id:\" + loginId + \" Token:\" + token",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "plr",
              "objectType": "PutLoginResult",
              "calledFrom": "loginPutToken",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "plr",
              "objectType": "PutLoginResult",
              "calledFrom": "loginPutToken",
              "parameterContents": "loginId",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setLoginId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "plr",
              "objectType": "PutLoginResult",
              "calledFrom": "loginPutToken",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "plr",
              "objectType": "PutLoginResult",
              "calledFrom": "loginPutToken",
              "parameterContents": "token",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "loginUserListRepository",
              "objectType": "LoginUserListRepository",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "li.getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "\"[SSO Service][Logout] Already Logout. LogoutId:\" + li.getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LogoutResult",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LogoutResult",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "\"Not Login\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getLoginToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "loginUserListRepository",
              "objectType": "LoginUserListRepository",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "li.getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "savedToken",
              "objectType": "String",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "li.getToken()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "equals",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "loginUserListRepository",
              "objectType": "LoginUserListRepository",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "li.getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "delete",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "li",
              "objectType": "LogoutInfo",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LogoutResult",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LogoutResult",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LogoutResult",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lr",
              "objectType": "LogoutResult",
              "calledFrom": "logoutDeleteToken",
              "parameterContents": "\"Token Wrong\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "\"[SSO Service][Verify] Verify token:\" + verifyToken",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "loginUserListRepository",
              "objectType": "LoginUserListRepository",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "verifyToken",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findByloginToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "verifyToken",
              "objectType": "String",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "\"admin\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "equals",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "vr",
              "objectType": "VerifyResult",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "vr",
              "objectType": "VerifyResult",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "\"Verify Success.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "\"[SSO Service][Verify] Success.Token:\" + verifyToken",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "vr",
              "objectType": "VerifyResult",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "vr",
              "objectType": "VerifyResult",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "\"Verify Fail.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "verifyLoginToken",
              "parameterContents": "\"[SSO Service][Verify] Fail.Token:\" + verifyToken",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "findAllAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findAll",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accounts",
              "objectType": "Account",
              "calledFrom": "findAllAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "size",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "findAllAccount",
              "parameterContents": "\"[SSO Service][Find All Account]\" + accounts.get(i).getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Account",
              "calledFrom": "findAllAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accounts",
              "objectType": "Account",
              "calledFrom": "findAllAccount",
              "parameterContents": "i",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "get",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "findAllAccountResult",
              "objectType": "FindAllAccountResult",
              "calledFrom": "findAllAccount",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "findAllAccountResult",
              "objectType": "FindAllAccountResult",
              "calledFrom": "findAllAccount",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "findAllAccountResult",
              "objectType": "FindAllAccountResult",
              "calledFrom": "findAllAccount",
              "parameterContents": "accounts",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccountArrayList",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "loginUserListRepository",
              "objectType": "LoginUserListRepository",
              "calledFrom": "findAllLoginAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findAll",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lv",
              "objectType": "LoginValue",
              "calledFrom": "findAllLoginAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "lv",
              "objectType": "LoginValue",
              "calledFrom": "findAllLoginAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getLoginToken",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "values",
              "objectType": "LoginAccountValue",
              "calledFrom": "findAllLoginAccount",
              "parameterContents": "value",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "add",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "getLoginAccountList",
              "objectType": "GetLoginAccountList",
              "calledFrom": "findAllLoginAccount",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "getLoginAccountList",
              "objectType": "GetLoginAccountList",
              "calledFrom": "findAllLoginAccount",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "getLoginAccountList",
              "objectType": "GetLoginAccountList",
              "calledFrom": "findAllLoginAccount",
              "parameterContents": "values",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setLoginAccountList",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "modifyAccountInfo.getNewEmail()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findByEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getNewEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "existAccount.getId().toString()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "equals",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Account",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "toString",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "existAccount",
              "objectType": "Account",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[SSO Service][Modify Info] Email exists.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyAccountResult",
              "calledFrom": "saveChanges",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyAccountResult",
              "calledFrom": "saveChanges",
              "parameterContents": "\"Email Has Been Occupied.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[SSO Service][Modify Info] Account Id:\" + modifyAccountInfo.getAccountId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "UUID.fromString(modifyAccountInfo.getAccountId())",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "saveChanges",
              "parameterContents": "modifyAccountInfo.getAccountId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "fromString",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[SSO Service][Modify Info] Fail.Can not found account.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyAccountResult",
              "calledFrom": "saveChanges",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyAccountResult",
              "calledFrom": "saveChanges",
              "parameterContents": "\"Account Not Found.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "oldAccount",
              "objectType": "Account",
              "calledFrom": "saveChanges",
              "parameterContents": "modifyAccountInfo.getNewEmail()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getNewEmail",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "oldAccount",
              "objectType": "Account",
              "calledFrom": "saveChanges",
              "parameterContents": "modifyAccountInfo.getNewPassword()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getNewPassword",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "oldAccount",
              "objectType": "Account",
              "calledFrom": "saveChanges",
              "parameterContents": "modifyAccountInfo.getNewName()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setName",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getNewName",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "oldAccount",
              "objectType": "Account",
              "calledFrom": "saveChanges",
              "parameterContents": "modifyAccountInfo.getNewGender()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setGender",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getNewGender",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "oldAccount",
              "objectType": "Account",
              "calledFrom": "saveChanges",
              "parameterContents": "modifyAccountInfo.getNewDocumentType()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getNewDocumentType",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "oldAccount",
              "objectType": "Account",
              "calledFrom": "saveChanges",
              "parameterContents": "modifyAccountInfo.getNewDocumentNumber()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setDocumentNum",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "modifyAccountInfo",
              "objectType": "ModifyAccountInfo",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getNewDocumentNumber",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "oldAccount",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "save",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[SSO Service][ModifyInfo] Success.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyAccountResult",
              "calledFrom": "saveChanges",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ModifyAccountResult",
              "calledFrom": "saveChanges",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "getAccountById",
              "parameterContents": "UUID.fromString(info.getAccountId())",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getAccountById",
              "parameterContents": "info.getAccountId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "fromString",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetAccountByIdInfo",
              "calledFrom": "getAccountById",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "getAccountById",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "getAccountById",
              "parameterContents": "\"Order Not Found\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "getAccountById",
              "parameterContents": "null",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "getAccountById",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "getAccountById",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetAccountByIdResult",
              "calledFrom": "getAccountById",
              "parameterContents": "account",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "adminLogin",
              "parameterContents": "name",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "equals",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "adminLogin",
              "parameterContents": "password",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "equals",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "Contacts",
              "calledFrom": "adminLogin",
              "parameterContents": "UUID.fromString(\"1d1a11c1-11cb-1cf1-b1bb-b11111d1da1f\")",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "adminLogin",
              "parameterContents": "\"1d1a11c1-11cb-1cf1-b1bb-b11111d1da1f\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "fromString",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "Contacts",
              "calledFrom": "adminLogin",
              "parameterContents": "\"adminroot\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setName",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "adminLogin",
              "parameterContents": "\"[SSO Service][Admin Login successfully!]\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "adminLogin",
              "parameterContents": "\"[SSO Service][Admin Login fail!]\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "println",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "deleteAccount",
              "parameterContents": "UUID.fromString(accountId)",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "findById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteAccount",
              "parameterContents": "accountId",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "fromString",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteAccountResult",
              "calledFrom": "deleteAccount",
              "parameterContents": "false",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteAccountResult",
              "calledFrom": "deleteAccount",
              "parameterContents": "\"Delete account failed!\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteAccountResult",
              "calledFrom": "deleteAccount",
              "parameterContents": "null",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "accountRepository",
              "objectType": "AccountRepository",
              "calledFrom": "deleteAccount",
              "parameterContents": "account.getId()",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "account",
              "objectType": "Account",
              "calledFrom": "deleteAccount",
              "parameterContents": "",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "getId",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteAccountResult",
              "calledFrom": "deleteAccount",
              "parameterContents": "true",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteAccountResult",
              "calledFrom": "deleteAccount",
              "parameterContents": "\"Delete account successfully!\"",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "DeleteAccountResult",
              "calledFrom": "deleteAccount",
              "parameterContents": "account",
              "microserviceName": "ts-sso-service",
              "className": "AccountSsoServiceImpl",
              "name": "setAccount",
              "packageAndClassName": "sso.service.AccountSsoServiceImpl"
            }
          ],
          "name": "AccountSsoServiceImpl",
          "path": "/ts-sso-service/src/main/java/sso/service/AccountSsoServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "sso.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "sso.repository.AccountRepository"
                }
              ],
              "returnType": "Account",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'id': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "sso.repository.AccountRepository"
                }
              ],
              "className": "AccountRepository",
              "name": "findById",
              "packageAndClassName": "sso.repository.AccountRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Account>",
              "microserviceName": "ts-sso-service",
              "annotations": [],
              "className": "AccountRepository",
              "name": "findAll",
              "packageAndClassName": "sso.repository.AccountRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "sso.repository.AccountRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-sso-service",
              "annotations": [],
              "className": "AccountRepository",
              "name": "deleteById",
              "packageAndClassName": "sso.repository.AccountRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "email",
                  "packageAndClassName": "sso.repository.AccountRepository"
                }
              ],
              "returnType": "Account",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'email': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "sso.repository.AccountRepository"
                }
              ],
              "className": "AccountRepository",
              "name": "findByEmail",
              "packageAndClassName": "sso.repository.AccountRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "sso.repository.AccountRepository"
            }
          ],
          "methodCalls": [],
          "name": "AccountRepository",
          "path": "/ts-sso-service/src/main/java/sso/repository/AccountRepository.java",
          "fileType": "JCLASS"
        },
        {
          "packageName": "sso.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "loginToken",
                  "packageAndClassName": "sso.repository.LoginUserListRepository"
                }
              ],
              "returnType": "LoginValue",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'loginToken': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "sso.repository.LoginUserListRepository"
                }
              ],
              "className": "LoginUserListRepository",
              "name": "findByloginToken",
              "packageAndClassName": "sso.repository.LoginUserListRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<LoginValue>",
              "microserviceName": "ts-sso-service",
              "annotations": [],
              "className": "LoginUserListRepository",
              "name": "findAll",
              "packageAndClassName": "sso.repository.LoginUserListRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "sso.repository.LoginUserListRepository"
                }
              ],
              "returnType": "LoginValue",
              "microserviceName": "ts-sso-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'id': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "sso.repository.LoginUserListRepository"
                }
              ],
              "className": "LoginUserListRepository",
              "name": "findById",
              "packageAndClassName": "sso.repository.LoginUserListRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "sso.repository.LoginUserListRepository"
            }
          ],
          "methodCalls": [],
          "name": "LoginUserListRepository",
          "path": "/ts-sso-service/src/main/java/sso/repository/LoginUserListRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-sso-service",
              "artifactId": "ts-sso-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-sso-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-sso-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-account-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 12349
            }
          },
          "name": "application.yml",
          "path": "/ts-sso-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-station-service",
      "path": "/ts-station-service",
      "controllers": [
        {
          "packageName": "fdse.microservice.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/station/exist",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryStation",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/station/exist"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "exist",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/station/queryByIdForName",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryById",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "queryById",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "attributes": {
                    "value": "/station/queryByIdForName"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "queryByIdForName",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/station/query",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<Station>",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/station/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "query",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/station/queryById",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryById",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "queryById",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "QueryStation",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "attributes": {
                    "value": "/station/queryById"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "queryById",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/station/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/station/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "update",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/station/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/station/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "create",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/station/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/station/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "delete",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/station/queryForId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryForId",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/station/queryForId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "queryForId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            }
          ],
          "fields": [
            {
              "type": "StationService",
              "name": "stationService",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "create",
              "parameterContents": "info",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "create",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "exist",
              "parameterContents": "info",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "exist",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "update",
              "parameterContents": "info",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "update",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "delete",
              "parameterContents": "info",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "delete",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "query",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "queryForId",
              "parameterContents": "info",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "queryForId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryById",
              "parameterContents": "\"[Station Service] Query By Id:\" + queryById.getStationId()",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "println",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "queryById",
              "objectType": "QueryById",
              "calledFrom": "queryById",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "getStationId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "queryById",
              "parameterContents": "queryById.getStationId()",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "queryById",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "queryById",
              "objectType": "QueryById",
              "calledFrom": "queryById",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "getStationId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryByIdForName",
              "parameterContents": "\"[Station Service] Query By Id For Name:\" + queryById.getStationId()",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "println",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "queryById",
              "objectType": "QueryById",
              "calledFrom": "queryByIdForName",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "getStationId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryByIdForName",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "queryByIdForName",
              "parameterContents": "queryById.getStationId()",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "queryById",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "queryById",
              "objectType": "QueryById",
              "calledFrom": "queryByIdForName",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "getStationId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            }
          ],
          "name": "StationController",
          "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "fdse.microservice.service",
          "implementedTypes": [
            "StationService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "QueryStation",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "exist",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "List<Station>",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "query",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "QueryForId",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "queryForId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "create",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationId",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "QueryStation",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "queryById",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "StationRepository",
              "name": "repository",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "create",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findById",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "create",
              "parameterContents": "info.getStayTime()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "setStayTime",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getStayTime",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "create",
              "parameterContents": "station",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "save",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "exist",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findByName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryStation",
              "calledFrom": "exist",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "info.getStayTime()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "setStayTime",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getStayTime",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "update",
              "parameterContents": "station",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "save",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "delete",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findById",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "delete",
              "parameterContents": "station",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "delete",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findAll",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "queryForId",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findByName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryForId",
              "calledFrom": "queryForId",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "queryForId",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "queryById",
              "parameterContents": "stationId",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findById",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "queryById",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            }
          ],
          "name": "StationServiceImpl",
          "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-station-service",
              "artifactId": "ts-station-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-station-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-station-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-station-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 12345
            }
          },
          "name": "application.yml",
          "path": "/ts-station-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-ticketinfo-service",
      "path": "/ts-ticketinfo-service",
      "controllers": [
        {
          "packageName": "ticketinfo.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/ticketinfo/queryForTravel",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryForTravel",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "ticketinfo.controller.TicketInfoController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "ticketinfo.controller.TicketInfoController"
                }
              ],
              "returnType": "ResultForTravel",
              "microserviceName": "ts-ticketinfo-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/ticketinfo/queryForTravel"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "ticketinfo.controller.TicketInfoController"
                }
              ],
              "className": "TicketInfoController",
              "name": "queryForTravel",
              "packageAndClassName": "ticketinfo.controller.TicketInfoController"
            },
            {
              "url": "/ticketinfo/queryForStationId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryForStationId",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "ticketinfo.controller.TicketInfoController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "ticketinfo.controller.TicketInfoController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-ticketinfo-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/ticketinfo/queryForStationId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "ticketinfo.controller.TicketInfoController"
                }
              ],
              "className": "TicketInfoController",
              "name": "queryForStationId",
              "packageAndClassName": "ticketinfo.controller.TicketInfoController"
            }
          ],
          "fields": [
            {
              "type": "TicketInfoService",
              "name": "service",
              "packageAndClassName": "ticketinfo.controller.TicketInfoController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "ticketinfo.controller.TicketInfoController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "TicketInfoService",
              "calledFrom": "queryForTravel",
              "parameterContents": "info",
              "microserviceName": "ts-ticketinfo-service",
              "className": "TicketInfoController",
              "name": "queryForTravel",
              "packageAndClassName": "ticketinfo.controller.TicketInfoController"
            },
            {
              "objectName": "service",
              "objectType": "TicketInfoService",
              "calledFrom": "queryForStationId",
              "parameterContents": "info",
              "microserviceName": "ts-ticketinfo-service",
              "className": "TicketInfoController",
              "name": "queryForStationId",
              "packageAndClassName": "ticketinfo.controller.TicketInfoController"
            }
          ],
          "name": "TicketInfoController",
          "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "ticketinfo.service",
          "implementedTypes": [
            "TicketInfoService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "QueryForTravel",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
                }
              ],
              "returnType": "ResultForTravel",
              "microserviceName": "ts-ticketinfo-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
                }
              ],
              "className": "TicketInfoServiceImpl",
              "name": "queryForTravel",
              "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "QueryForStationId",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-ticketinfo-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
                }
              ],
              "className": "TicketInfoServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "url": "/basic/queryForTravel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"http://ts-basic-service:15680/basic/queryForTravel\",info,ResultForTravel.class",
              "microserviceName": "ts-ticketinfo-service",
              "className": "TicketInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
            },
            {
              "url": "/basic/queryForStationId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"http://ts-basic-service:15680/basic/queryForStationId\",info,String.class",
              "microserviceName": "ts-ticketinfo-service",
              "className": "TicketInfoServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "ticketinfo.service.TicketInfoServiceImpl"
            }
          ],
          "name": "TicketInfoServiceImpl",
          "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-ticketinfo-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": "",
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-ticketinfo-service",
              "artifactId": "ts-ticketinfo-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-ticketinfo-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 15681
            },
            "spring": {
              "application": {
                "name": "ts-ticketinfo-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-ticketinfo-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-train-service",
      "path": "/ts-train-service",
      "controllers": [
        {
          "packageName": "train.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/train/retrieve",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/train/retrieve"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "retrieve",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/train/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/train/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "update",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/train/query",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<TrainType>",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "value": "/train/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "query",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/train/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "value": "/train/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "create",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/train/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/train/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "delete",
              "packageAndClassName": "train.controller.TrainController"
            }
          ],
          "fields": [
            {
              "type": "TrainService",
              "name": "trainService",
              "packageAndClassName": "train.controller.TrainController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "train.controller.TrainController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "create",
              "parameterContents": "info",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "create",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "retrieve",
              "parameterContents": "info",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "retrieve",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "update",
              "parameterContents": "info",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "update",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "delete",
              "parameterContents": "info",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "delete",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "query",
              "packageAndClassName": "train.controller.TrainController"
            }
          ],
          "name": "TrainController",
          "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "train.service",
          "implementedTypes": [
            "TrainService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [],
              "returnType": "List<TrainType>",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "className": "TrainServiceImpl",
              "name": "query",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-train-service",
              "annotations": [],
              "className": "TrainServiceImpl",
              "name": "retrieve",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-train-service",
              "annotations": [],
              "className": "TrainServiceImpl",
              "name": "delete",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-train-service",
              "annotations": [],
              "className": "TrainServiceImpl",
              "name": "create",
              "packageAndClassName": "train.service.TrainServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "TrainTypeRepository",
              "name": "repository",
              "packageAndClassName": "train.service.TrainServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "train.service.TrainServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "create",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "type",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "info.getAverageSpeed()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "setAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "create",
              "parameterContents": "type",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "save",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "retrieve",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "retrieve",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "retrieve",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "retrieve",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "update",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "type",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "info.getAverageSpeed()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "setAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "update",
              "parameterContents": "type",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "save",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "type",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "info.getAverageSpeed()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "setAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "update",
              "parameterContents": "type",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "save",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "delete",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "delete",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findAll",
              "packageAndClassName": "train.service.TrainServiceImpl"
            }
          ],
          "name": "TrainServiceImpl",
          "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-train-service",
              "artifactId": "ts-train-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-train-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "application": {
                "name": "ts-train-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-train-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            },
            "server": {
              "port": 14567
            }
          },
          "name": "application.yml",
          "path": "/ts-train-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-travel-plan-service",
      "path": "/ts-travel-plan-service",
      "controllers": [
        {
          "packageName": "travelplan.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/travelPlan/getMinStation",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "queryInfo",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "returnType": "TravelAdvanceResult",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travelPlan/getMinStation"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "getByMinStation",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "url": "/travelPlan/getCheapest",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "queryInfo",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "returnType": "TravelAdvanceResult",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travelPlan/getCheapest"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "getByCheapest",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "url": "/travelPlan/getTransferResult",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TransferTravelSearchInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "returnType": "TransferTravelSearchResult",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travelPlan/getTransferResult"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "getTransferResult",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "url": "/travelPlan/getQuickest",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "queryInfo",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "returnType": "TravelAdvanceResult",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travelPlan/getQuickest"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "getByQuickest",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            }
          ],
          "fields": [
            {
              "type": "TravelPlanService",
              "name": "travelPlanService",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTransferResult",
              "parameterContents": "\"[Search Transit]\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "println",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "travelPlanService",
              "objectType": "TravelPlanService",
              "calledFrom": "getTransferResult",
              "parameterContents": "info",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getTransferSearch",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getByCheapest",
              "parameterContents": "\"[Search Cheapest]\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "println",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "travelPlanService",
              "objectType": "TravelPlanService",
              "calledFrom": "getByCheapest",
              "parameterContents": "queryInfo",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getCheapest",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getByQuickest",
              "parameterContents": "\"[Search Quickest]\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "println",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "travelPlanService",
              "objectType": "TravelPlanService",
              "calledFrom": "getByQuickest",
              "parameterContents": "queryInfo",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getQuickest",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getByMinStation",
              "parameterContents": "\"[Search Min Station]\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "println",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "travelPlanService",
              "objectType": "TravelPlanService",
              "calledFrom": "getByMinStation",
              "parameterContents": "queryInfo",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getMinStation",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            }
          ],
          "name": "TravelPlanController",
          "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "travelplan.service",
          "implementedTypes": [
            "TravelPlanService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "TransferTravelSearchInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "TransferTravelSearchResult",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "className": "TravelPlanServiceImpl",
              "name": "getTransferSearch",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainNumber",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "int",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "TravelAdvanceResult",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "className": "TravelPlanServiceImpl",
              "name": "getCheapest",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "ArrayList<TripResponse>",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromHighSpeed",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "ArrayList<String>",
                  "annotations": [],
                  "name": "stations",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "ArrayList<String>",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "transferStationIdToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetRoutePlanInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "RoutePlanResults",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "getRoutePlanResultCheapest",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "queryInfoFirstSection",
              "objectType": "QueryInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelSearchInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoFirstSection",
              "objectType": "QueryInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getFromStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelSearchInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoFirstSection",
              "objectType": "QueryInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getViaStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelSearchInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getViaStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferSearch",
              "parameterContents": "queryInfoFirstSection",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromHighSpeed",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferSearch",
              "parameterContents": "queryInfoFirstSection",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromNormal",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoSecondSectoin",
              "objectType": "QueryInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelSearchInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoSecondSectoin",
              "objectType": "QueryInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getViaStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelSearchInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getViaStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoSecondSectoin",
              "objectType": "QueryInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getToStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelSearchInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferSearch",
              "parameterContents": "queryInfoSecondSectoin",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromHighSpeed",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferSearch",
              "parameterContents": "queryInfoSecondSectoin",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromNormal",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "firstSection",
              "objectType": "TripResponse",
              "calledFrom": "getTransferSearch",
              "parameterContents": "firstSectionFromHighSpeed",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "firstSection",
              "objectType": "TripResponse",
              "calledFrom": "getTransferSearch",
              "parameterContents": "firstSectionFromNormal",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "secondSection",
              "objectType": "TripResponse",
              "calledFrom": "getTransferSearch",
              "parameterContents": "secondSectionFromHighSpeed",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "secondSection",
              "objectType": "TripResponse",
              "calledFrom": "getTransferSearch",
              "parameterContents": "secondSectionFromNormal",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TransferTravelSearchResult",
              "calledFrom": "getTransferSearch",
              "parameterContents": "true",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TransferTravelSearchResult",
              "calledFrom": "getTransferSearch",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TransferTravelSearchResult",
              "calledFrom": "getTransferSearch",
              "parameterContents": "firstSection",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setFirstSectionResult",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TransferTravelSearchResult",
              "calledFrom": "getTransferSearch",
              "parameterContents": "secondSection",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setSecondSectionResult",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "5",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNum",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getStartingPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setFormStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapest",
              "parameterContents": "routePlanInfo",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRoutePlanResultCheapest",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getResults",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getCheapest",
              "parameterContents": "true",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getCheapest",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "size",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "i",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "get",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getTripId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getTrainTypeId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getFromStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getToStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getStopStations()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "transferStationIdToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "stops",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getPriceForFirstClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getPriceForSecondClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getStartingTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getEndTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getFromStationName(),tempUnit.getToStationName(),SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getFromStationName(),tempUnit.getToStationName(),SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "first",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketFirstClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "second",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketSecondClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "lists",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "newUnit",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "add",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getCheapest",
              "parameterContents": "lists",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelAdvanceResultUnits",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getCheapest",
              "parameterContents": "false",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getCheapest",
              "parameterContents": "\"Cannot Find\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getCheapest",
              "parameterContents": "new ArrayList<>()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelAdvanceResultUnits",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "5",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNum",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getStartingPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setFormStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickest",
              "parameterContents": "routePlanInfo",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRoutePlanResultQuickest",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getResults",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getQuickest",
              "parameterContents": "true",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getQuickest",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "size",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "i",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "get",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getTripId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getTrainTypeId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getFromStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getToStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getStopStations()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "transferStationIdToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "stops",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getPriceForFirstClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getPriceForSecondClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getStartingTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getEndTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getFromStationName(),tempUnit.getToStationName(),SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getFromStationName(),tempUnit.getToStationName(),SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "first",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketFirstClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "second",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketSecondClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "lists",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "newUnit",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "add",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getQuickest",
              "parameterContents": "lists",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelAdvanceResultUnits",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getQuickest",
              "parameterContents": "false",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getQuickest",
              "parameterContents": "\"Cannot Find\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getQuickest",
              "parameterContents": "new ArrayList<>()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelAdvanceResultUnits",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "5",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNum",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getStartingPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setFormStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "GetRoutePlanInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStation",
              "parameterContents": "routePlanInfo",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRoutePlanResultMinStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResults",
              "objectType": "RoutePlanResults",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getResults",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getMinStation",
              "parameterContents": "true",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getMinStation",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "size",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "i",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "get",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getTripId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getTrainTypeId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getFromStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getToStationName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getStopStations()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "transferStationIdToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "stops",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getPriceForFirstClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getPriceForSecondClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getStartingTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getEndTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getFromStationName(),tempUnit.getToStationName(),SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getFromStationName(),tempUnit.getToStationName(),SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getFromStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getToStationName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "first",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketFirstClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "second",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketSecondClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "lists",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "newUnit",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "add",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getMinStation",
              "parameterContents": "lists",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelAdvanceResultUnits",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getMinStation",
              "parameterContents": "false",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getMinStation",
              "parameterContents": "\"Cannot Find\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "travelAdvanceResult",
              "objectType": "TravelAdvanceResult",
              "calledFrom": "getMinStation",
              "parameterContents": "new ArrayList<>()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelAdvanceResultUnits",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "startStationName",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "endStationName",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "toId",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "fromId",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "trainNumber",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "travelDate",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seatType",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/seat/getLeftTicketOfInterval",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"http://ts-seat-service:18898/seat/getLeftTicketOfInterval\",seatRequest,Integer.class",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/routePlan/cheapestRoute",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRoutePlanResultCheapest",
              "parameterContents": "\"http://ts-route-plan-service:14578/routePlan/cheapestRoute\",info,RoutePlanResults.class",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/routePlan/quickestRoute",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRoutePlanResultQuickest",
              "parameterContents": "\"http://ts-route-plan-service:14578/routePlan/quickestRoute\",info,RoutePlanResults.class",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/routePlan/minStopStations",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRoutePlanResultMinStation",
              "parameterContents": "\"http://ts-route-plan-service:14578/routePlan/minStopStations\",info,RoutePlanResults.class",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/travel/query",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "tripsFromHighSpeed",
              "parameterContents": "\"http://ts-travel-service:12346/travel/query\",info,result.getClass()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TripResponse",
              "calledFrom": "tripsFromHighSpeed",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/travel2/query",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "tripsFromNormal",
              "parameterContents": "\"http://ts-travel2-service:16346/travel2/query\",info,result.getClass()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TripResponse",
              "calledFrom": "tripsFromNormal",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForStationId",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationName",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/ticketinfo/queryForStationId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"http://ts-ticketinfo-service:15681/ticketinfo/queryForStationId\",query,String.class",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "ArrayList",
              "calledFrom": "transferStationIdToStationName",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "size",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "transferStationIdToStationName",
              "parameterContents": "stations.get(i)",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "queryForStaionNameByStationId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "ArrayList",
              "calledFrom": "transferStationIdToStationName",
              "parameterContents": "i",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "get",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "stationNames",
              "objectType": "ArrayList",
              "calledFrom": "transferStationIdToStationName",
              "parameterContents": "name",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "add",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/station/queryByIdForName",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStaionNameByStationId",
              "parameterContents": "\"http://ts-station-service:12345/station/queryByIdForName\",queryByStationIdForName,String.class",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            }
          ],
          "name": "TravelPlanServiceImpl",
          "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 14322
            },
            "spring": {
              "application": {
                "name": "ts-travel-plan-service"
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-travel-plan-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-travel-plan-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-travel-plan-service",
              "artifactId": "ts-travel-plan-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-travel-plan-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-travel-service",
      "path": "/ts-travel-service",
      "controllers": [
        {
          "packageName": "travel.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/travel/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/travel/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "create",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/retrieve",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "Trip",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/travel/retrieve"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "retrieve",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/travel/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "delete",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/queryAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<Trip>",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/travel/queryAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "queryAll",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/getTrainTypeByTripId/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "GetTrainTypeResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel/getTrainTypeByTripId/{tripId}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/getTripsByRouteId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetTripsByRouteIdInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "GetTripsByRouteIdResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel/getTripsByRouteId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "getTripsByRouteId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/adminQueryAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "AdminFindAllResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel/adminQueryAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "adminQueryAll",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/queryWithPackage",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "QueryTripResponsePackage",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/travel/queryWithPackage"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "queryPackage",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/travel/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "update",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/getTripAllDetailInfo",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetTripAllDetailInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "gtdi",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "GetTripAllDetailResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel/getTripAllDetailInfo"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/getRouteByTripId/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "GetRouteResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel/getRouteByTripId/{tripId}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/travel/query",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "ArrayList<TripResponse>",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/travel/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "query",
              "packageAndClassName": "travel.controller.TravelController"
            }
          ],
          "fields": [
            {
              "type": "TravelService",
              "name": "travelService",
              "packageAndClassName": "travel.controller.TravelController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "travel.controller.TravelController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] TripId:\" + tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "println",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "info",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTripByRoute",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "create",
              "parameterContents": "info",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "create",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "retrieve",
              "parameterContents": "info",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "retrieve",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "update",
              "parameterContents": "info",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "update",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "delete",
              "parameterContents": "info",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "delete",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getStartingPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "length",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getStartingPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getEndPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "length",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getEndPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "query",
              "parameterContents": "\"[Travel Service][Travel Query] Fail.Something null.\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "println",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "query",
              "parameterContents": "\"[Travel Service] Query TripResponse\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "println",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "query",
              "parameterContents": "info",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "query",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getStartingPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "length",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getStartingPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getEndPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "length",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getEndPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryPackage",
              "parameterContents": "\"[Travel Service][Travel Query] Fail.Something null.\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "println",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryPackage",
              "parameterContents": "\"[Travel Service] Query TripResponse\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "println",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "queryPackage",
              "parameterContents": "info",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "query",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "gtdi",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "queryAll",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "adminQueryAll",
              "packageAndClassName": "travel.controller.TravelController"
            }
          ],
          "name": "TravelController",
          "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "travel.service",
          "implementedTypes": [
            "TravelService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "ArrayList<TripResponse>",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "query",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeId",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "List<Trip>",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "queryAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "create",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "AdminFindAllResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "adminQueryAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Trip",
                  "annotations": [],
                  "name": "trip",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "departureTime",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "Route",
                  "annotations": [],
                  "name": "route",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startingPlaceId",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "TripResponse",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainNumber",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "int",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetTripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "GetTripAllDetailResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Trip",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "retrieve",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "GetRouteResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "GetTrainTypeResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetTripsByRouteIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "GetTripsByRouteIdResult",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getTripByRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "delete",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "TripRepository",
              "name": "repository",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "length",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "tripId1",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"Trip Not Found\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] Trip Not Found:\" + tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "trip.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"Route Not Found\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] Route Not Found:\" + trip.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "true",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] Success\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "route",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] TripId is invaild\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"TripId is invaild\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "tripId1",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"Trip Not Found\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "trip.getTrainTypeId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"Route Not Found\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "true",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "train",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetTripsByRouteIdInfo",
              "calledFrom": "getTripByRoute",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteIds",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripByRoute",
              "parameterContents": "routeId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tripList",
              "objectType": "Trip",
              "calledFrom": "getTripByRoute",
              "parameterContents": "tempTripList",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTripsByRouteIdResult",
              "calledFrom": "getTripByRoute",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTripsByRouteIdResult",
              "calledFrom": "getTripByRoute",
              "parameterContents": "tripList",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripsSet",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "create",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartingStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStationsId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTerminalStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "create",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "create",
              "parameterContents": "trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "save",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "ti",
              "objectType": "TripId",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "retrieve",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "retrieve",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "retrieve",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "update",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartingStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStationsId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTerminalStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "update",
              "parameterContents": "trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "save",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "ti",
              "objectType": "TripId",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "delete",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "delete",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "deleteByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "tempTrip.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempTrip",
              "objectType": "Trip",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "startingPlaceId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "contains",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempRoute",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "endPlaceId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "contains",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempRoute",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "startingPlaceId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempRoute",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "endPlaceId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempRoute",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "tempTrip,tempRoute,startingPlaceId,endPlaceId,startingPlaceName,endPlaceName,info.getDepartureTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "TripResponse",
              "calledFrom": "query",
              "parameterContents": "response",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[TravelService] [GetTripAllDetailInfo] TripId:\" + gtdi.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "new TripId(gtdi.getTripId())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "false",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"Trip Not Exist\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTo",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "trip.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "trip,tempRoute,startingPlaceId,endPlaceId,gtdi.getFrom(),gtdi.getTo(),gtdi.getTravelDate()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTo",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "false",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"Cannot found TripResponse\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "true",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "tripResponse",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "repository.findByTripId(new TripId(gtdi.getTripId()))",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "new TripId(gtdi.getTripId())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/ticketinfo/queryForTravel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTickets",
              "parameterContents": "\"http://ts-ticketinfo-service:15681/ticketinfo/queryForTravel\",query,ResultForTravel.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/order/calculate",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTickets",
              "parameterContents": "\"http://ts-order-service:12031/order/calculate\",information,ResultSoldTicket.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTickets",
              "parameterContents": "\"soldticket Info doesn't exist\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getStartingStationId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "equals",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartingStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getTerminalStationId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "equals",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTerminalStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "50",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "50",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "50",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "50",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime,trip.getTripId().toString(),startingPlaceName,endPlaceName,SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime,trip.getTripId().toString(),startingPlaceName,endPlaceName,SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "first",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "second",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartingStation",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTerminalStation",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "startingPlaceId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "indexStart",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "0",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "indexEnd",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "0",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getTrainTypeId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getStartingTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "Calendar.MINUTE,minutesStart",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "calendarStart.getTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTickets",
              "parameterContents": "\"[Train Service]计算时间：\" + minutesStart + \" 时间:\" + calendarStart.getTime().toString()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getStartingTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "Calendar.MINUTE,minutesEnd",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "calendarEnd.getTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTickets",
              "parameterContents": "\"[Train Service]计算时间：\" + minutesEnd + \" 时间:\" + calendarEnd.getTime().toString()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "new TripId(result.getTrainNumber())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ResultSoldTicket",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getTrainTypeId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "resultForTravel.getPrices().get(\"confortClass\")",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setPriceForConfortClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResultForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "ResultForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "resultForTravel.getPrices().get(\"economyClass\")",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setPriceForEconomyClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResultForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "ResultForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "today",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "date",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetTrainTypeInformation",
              "calledFrom": "getTrainType",
              "parameterContents": "trainTypeId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/train/retrieve",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTrainType",
              "parameterContents": "\"http://ts-train-service:14567/train/retrieve\",info,TrainType.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForStationId",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/ticketinfo/queryForStationId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"http://ts-ticketinfo-service:15681/ticketinfo/queryForStationId\",query,String.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Travel Service][Get Route By Id] Route ID：\" + routeId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/route/queryById/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"http://ts-route-service:11178/route/queryById/\" + routeId,GetRouteResult.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Travel Service][Get Route By Id] Fail.\" + result.getMessage()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Travel Service][Get Route By Id] Success.\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "println",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "startStationName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "endStationName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "toId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "fromId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "trainNumber",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "travelDate",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seatType",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/seat/getLeftTicketOfInterval",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"http://ts-seat-service:18898/seat/getLeftTicketOfInterval\",seatRequest,Integer.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "getRouteByRouteId(trip.getRouteId())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "getTrainType(trip.getTrainTypeId())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip.getTrainTypeId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrips",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "adminTrip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "adminQueryAll",
              "parameterContents": "true",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "adminQueryAll",
              "parameterContents": "\"Travel Service Admin Query All Travel Success\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "adminQueryAll",
              "parameterContents": "adminTrips",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrips",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            }
          ],
          "name": "TravelServiceImpl",
          "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-travel-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-travel-service",
              "artifactId": "ts-travel-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-travel-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12346
            },
            "spring": {
              "application": {
                "name": "ts-travel-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-travel-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-travel-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-travel2-service",
      "path": "/ts-travel2-service",
      "controllers": [
        {
          "packageName": "travel2.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/travel2/query",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "ArrayList<TripResponse>",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/query"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "query",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/queryAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "List<Trip>",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "value": "/travel2/queryAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "queryAll",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/getTripsByRouteId",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetTripsByRouteIdInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "GetTripsByRouteIdResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/getTripsByRouteId"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "getTripsByRouteId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/queryWithPackage",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "QueryTripResponsePackage",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "value": "/travel2/queryWithPackage"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "queryPackage",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/retrieve",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "Trip",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/retrieve"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "retrieve",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/update",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/update"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "update",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/getTrainTypeByTripId/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "GetTrainTypeResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/getTrainTypeByTripId/{tripId}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/getRouteByTripId/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "GetRouteResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/getRouteByTripId/{tripId}"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/create",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/create"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "create",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/delete",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/delete"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "delete",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/getTripAllDetailInfo",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "GetTripAllDetailInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "gtdi",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "GetTripAllDetailResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travel2/getTripAllDetailInfo"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/travel2/adminQueryAll",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "AdminFindAllResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "value": "/travel2/adminQueryAll"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "adminQueryAll",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            }
          ],
          "fields": [
            {
              "type": "Travel2Service",
              "name": "service",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            }
          ],
          "methodCalls": [
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "tripId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] TripId:\" + tripId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "println",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "tripId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "info",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTripByRoute",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "create",
              "parameterContents": "info",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "create",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "retrieve",
              "parameterContents": "info",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "retrieve",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "update",
              "parameterContents": "info",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "update",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "delete",
              "parameterContents": "info",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "delete",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getStartingPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "length",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getStartingPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "length",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getDepartureTime",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "query",
              "parameterContents": "\"[Travel Other Service][Travel Query] Fail.Something null.\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "println",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "query",
              "parameterContents": "\"[Travel2 Service] Query TripResponse\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "println",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "query",
              "parameterContents": "info",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "query",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getStartingPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "length",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getStartingPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "length",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "queryPackage",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getDepartureTime",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryPackage",
              "parameterContents": "\"[Travel Other Service][Travel Query] Fail.Something null.\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "println",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "queryPackage",
              "parameterContents": "\"[Travel Other Servicee] Query TripResponse\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "println",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "queryPackage",
              "parameterContents": "info",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "query",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "gtdi",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "queryAll",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "Travel2Service",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "adminQueryAll",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            }
          ],
          "name": "Travel2Controller",
          "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "travel2.service",
          "implementedTypes": [
            "Travel2Service"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "Trip",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "retrieve",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetTripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "GetTripAllDetailResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainNumber",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "int",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "Travel2ServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "Travel2ServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "create",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Information2",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "delete",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "Travel2ServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "GetRouteResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "List<Trip>",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "queryAll",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "GetTripsByRouteIdInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "GetTripsByRouteIdResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "getTripByRoute",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeId",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "Travel2ServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "ArrayList<TripResponse>",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "query",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "GetTrainTypeResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "AdminFindAllResult",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "className": "Travel2ServiceImpl",
              "name": "adminQueryAll",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Trip",
                  "annotations": [],
                  "name": "trip",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "departureTime",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                },
                {
                  "type": "Route",
                  "annotations": [],
                  "name": "route",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startingPlaceId",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "TripResponse",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "Travel2ServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "travel2.service.Travel2ServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "TripRepository",
              "name": "repository",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "tripId1",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"Trip Not Found\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] Trip Not Found:\" + tripId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "trip.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"Route Not Found\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] Route Not Found:\" + trip.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "true",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[Get Route By Trip ID] Success\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "route",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "tripId1",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"Trip Not Found\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "trip.getTrainTypeId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "false",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"Route Not Found\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "true",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTrainTypeResult",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "train",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetTripsByRouteIdInfo",
              "calledFrom": "getTripByRoute",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteIds",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripByRoute",
              "parameterContents": "routeId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "tripList",
              "objectType": "Trip",
              "calledFrom": "getTripByRoute",
              "parameterContents": "tempTripList",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTripsByRouteIdResult",
              "calledFrom": "getTripByRoute",
              "parameterContents": "\"Success.\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetTripsByRouteIdResult",
              "calledFrom": "getTripByRoute",
              "parameterContents": "tripList",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTripsSet",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "create",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStartingStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStationsId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTerminalStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "create",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "create",
              "parameterContents": "trip",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "save",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "ti",
              "objectType": "TripId",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "retrieve",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "retrieve",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "retrieve",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "update",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStartingStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStationsId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTerminalStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "update",
              "parameterContents": "trip",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "save",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "ti",
              "objectType": "TripId",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "delete",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "delete",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "deleteByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Information2",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStartingPlace",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "tempTrip.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "tempTrip",
              "objectType": "Trip",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "startingPlaceId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "contains",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "tempRoute",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "endPlaceId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "contains",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "tempRoute",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "startingPlaceId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "tempRoute",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "endPlaceId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "tempRoute",
              "objectType": "Route",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "tempTrip,tempRoute,startingPlaceId,endPlaceId,startingPlaceName,endPlaceName,info.getDepartureTime()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "QueryInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "TripResponse",
              "calledFrom": "query",
              "parameterContents": "response",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[TravelService] [GetTripAllDetailInfo] TripId:\" + gtdi.getTripId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "new TripId(gtdi.getTripId())",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "false",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"Trip Not Exist\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTo",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "trip.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "trip,tempRoute,startingPlaceId,endPlaceId,gtdi.getFrom(),gtdi.getTo(),gtdi.getTravelDate()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTo",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "false",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"Cannot found TripResponse\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "true",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "tripResponse",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "GetTripAllDetailResult",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "repository.findByTripId(new TripId(gtdi.getTripId()))",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "new TripId(gtdi.getTripId())",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "GetTripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "trip",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStartingPlace",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "url": "/ticketinfo/queryForTravel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTickets",
              "parameterContents": "\"http://ts-ticketinfo-service:15681/ticketinfo/queryForTravel\",query,ResultForTravel.class",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "url": "/orderOther/calculate",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTickets",
              "parameterContents": "\"http://ts-order-other-service:12032/orderOther/calculate\",information,ResultSoldTicket.class",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTickets",
              "parameterContents": "\"soldticket Info doesn't exist\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getStartingStationId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "equals",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStartingStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getTerminalStationId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "equals",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTerminalStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "50",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "50",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "50",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "50",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime,trip.getTripId().toString(),startingPlaceName,endPlaceName,SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime,trip.getTripId().toString(),startingPlaceName,endPlaceName,SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "first",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "second",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "startingPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStartingStation",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTerminalStation",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "startingPlaceId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "indexStart",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "0",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "indexEnd",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "0",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getTrainTypeId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getStartingTime()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "Calendar.MINUTE,minutesStart",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "calendarStart.getTime()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStartingTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTickets",
              "parameterContents": "\"[Train Service]计算时间：\" + minutesStart + \" 时间:\" + calendarStart.getTime().toString()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getStartingTime()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getStartingTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "Calendar.MINUTE,minutesEnd",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "calendarEnd.getTime()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getTickets",
              "parameterContents": "\"[Train Service]计算时间：\" + minutesEnd + \" 时间:\" + calendarEnd.getTime().toString()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "new TripId(result.getTrainNumber())",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ResultSoldTicket",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "trip.getTrainTypeId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "resultForTravel.getPrices().get(\"confortClass\")",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setPriceForConfortClass",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResultForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "ResultForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "getTickets",
              "parameterContents": "resultForTravel.getPrices().get(\"economyClass\")",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setPriceForEconomyClass",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResultForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "ResultForTravel",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "today",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "date",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "GetTrainTypeInformation",
              "calledFrom": "getTrainType",
              "parameterContents": "trainTypeId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "url": "/train/retrieve",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTrainType",
              "parameterContents": "\"http://ts-train-service:14567/train/retrieve\",info,TrainType.class",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "QueryForStationId",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setName",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "url": "/ticketinfo/queryForStationId",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"http://ts-ticketinfo-service:15681/ticketinfo/queryForStationId\",query,String.class",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Travel Service][Get Route By Id] Route ID：\" + routeId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "url": "/route/queryById/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"http://ts-route-service:11178/route/queryById/\" + routeId,GetRouteResult.class",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getForObject",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "isStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Travel Other Service][Get Route By Id] Fail.\" + result.getMessage()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PrintStream",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[Travel Other Service][Get Route By Id] Success.\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "println",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "GetRouteResult",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "startStationName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "endStationName",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "toId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "fromId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "trainNumber",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "travelDate",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "SeatRequest",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seatType",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "url": "/seat/getLeftTicketOfInterval",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"http://ts-seat-service:18898/seat/getLeftTicketOfInterval\",seatRequest,Integer.class",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "postForObject",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "getRouteByRouteId(trip.getRouteId())",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "getTrainType(trip.getTrainTypeId())",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip.getTrainTypeId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "getTrainTypeId",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "adminTrips",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "adminTrip",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "adminQueryAll",
              "parameterContents": "true",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "adminQueryAll",
              "parameterContents": "\"Travel Service Admin Query All Travel Success\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setMessage",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "AdminFindAllResult",
              "calledFrom": "adminQueryAll",
              "parameterContents": "adminTrips",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2ServiceImpl",
              "name": "setTrips",
              "packageAndClassName": "travel2.service.Travel2ServiceImpl"
            }
          ],
          "name": "Travel2ServiceImpl",
          "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 16346
            },
            "spring": {
              "application": {
                "name": "ts-travel2-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-travel2-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-travel2-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-travel2-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-travel2-service",
              "artifactId": "ts-travel2-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-travel2-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-ui-test",
      "path": "/ts-ui-test",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "executions": {
                      "execution": {
                        "phase": "package",
                        "configuration": {
                          "transformers": {
                            "transformer": {
                              "mainClass": "example.RemoteDriverTest2",
                              "implementation": "org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"
                            }
                          }
                        },
                        "goals": {
                          "goal": "shade"
                        }
                      }
                    },
                    "groupId": "org.apache.maven.plugins",
                    "artifactId": "maven-shade-plugin",
                    "version": "3.0.0"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "ts-ui-test",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.seleniumhq.selenium",
                    "artifactId": "selenium-server",
                    "version": "3.3.1"
                  },
                  {
                    "groupId": "org.testng",
                    "scope": "test",
                    "artifactId": "testng",
                    "version": 6.11
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-ui-test/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-verification-code-service",
      "path": "/ts-verification-code-service",
      "controllers": [
        {
          "packageName": "com.trainticket.verificationcode.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/verification/generate",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/verification/generate"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
                }
              ],
              "className": "VerificationCodeController",
              "name": "imagecode",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "url": "/error",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/error"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
                }
              ],
              "className": "VerificationCodeController",
              "name": "welcome",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "url": "/verification/verify",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/verification/verify"
                  },
                  "name": "RequestMapping",
                  "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
                }
              ],
              "className": "VerificationCodeController",
              "name": "verifyCode",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            }
          ],
          "fields": [
            {
              "type": "VerificationCodeService",
              "name": "verificationCodeService",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "response",
              "objectType": "HttpServletResponse",
              "calledFrom": "imagecode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "getOutputStream",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "verificationCodeService",
              "objectType": "VerificationCodeService",
              "calledFrom": "imagecode",
              "parameterContents": "60,20,os,request,response",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "getImageCode",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "",
              "objectType": "HttpServletRequest",
              "calledFrom": "imagecode",
              "parameterContents": "simpleCaptcha,map.get(\"strEnsure\").toString().toLowerCase()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "setAttribute",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "request",
              "objectType": "HttpServletRequest",
              "calledFrom": "imagecode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "getSession",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "imagecode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "toLowerCase",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "",
              "objectType": "Object",
              "calledFrom": "imagecode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "toString",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "map",
              "objectType": "Map",
              "calledFrom": "imagecode",
              "parameterContents": "\"strEnsure\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "get",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "",
              "objectType": "HttpServletRequest",
              "calledFrom": "imagecode",
              "parameterContents": "\"codeTime\",new Date().getTime()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "setAttribute",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "request",
              "objectType": "HttpServletRequest",
              "calledFrom": "imagecode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "getSession",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "imagecode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "getTime",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "ImageIO",
              "objectType": "ImageIO",
              "calledFrom": "imagecode",
              "parameterContents": "(BufferedImage) map.get(\"image\"),\"JPEG\",os",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "write",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "map",
              "objectType": "Map",
              "calledFrom": "imagecode",
              "parameterContents": "\"image\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "get",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "os",
              "objectType": "OutputStream",
              "calledFrom": "imagecode",
              "parameterContents": "error.getBytes()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "write",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            },
            {
              "objectName": "error",
              "objectType": "String",
              "calledFrom": "imagecode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeController",
              "name": "getBytes",
              "packageAndClassName": "com.trainticket.verificationcode.controller.VerificationCodeController"
            }
          ],
          "name": "VerificationCodeController",
          "path": "/ts-verification-code-service/src/main/java/com/trainticket/verificationcode/controller/VerificationCodeController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "com.trainticket.verificationcode.service",
          "implementedTypes": [
            "VerificationCodeService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "receivedCode",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-verification-code-service",
              "annotations": [],
              "className": "VerificationCodeServiceImpl",
              "name": "verifyCode",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "width",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                },
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                },
                {
                  "type": "OutputStream",
                  "annotations": [],
                  "name": "os",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                }
              ],
              "returnType": "Map<String,Object>",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                }
              ],
              "className": "VerificationCodeServiceImpl",
              "name": "getImageCode",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "fc",
                  "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
                }
              ],
              "returnType": "Color",
              "microserviceName": "ts-verification-code-service",
              "annotations": [],
              "className": "VerificationCodeServiceImpl",
              "name": "getRandColor",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "char[]",
              "name": "mapTable",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "type": "String",
              "name": "CAPTCHA",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "type": "VerificationCodeRepository",
              "name": "verificationCodeRepository",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "type": "int",
              "name": "CAPTCHA_EXPIRED",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "image",
              "objectType": "BufferedImage",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getGraphics",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "getRandColor(200, 250)",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "setColor",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getImageCode",
              "parameterContents": "200,250",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getRandColor",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "0,0,width,height",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "fillRect",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "new Font(\"Times New Roman\", Font.PLAIN, 18)",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "setFont",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "getRandColor(160, 200)",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "setColor",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getImageCode",
              "parameterContents": "160,200",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getRandColor",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "width",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "height",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "12",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "12",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "x,y,x + xl,y + yl",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "drawLine",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "random",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "new Color(20 + random.nextInt(110), 20 + random.nextInt(110), 20 + random.nextInt(110))",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "setColor",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "110",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "110",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "110",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "strEnsure",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "i,i + 1",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "substring",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "str,13 * i + 6,16",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "drawString",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "dispose",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "returnMap",
              "objectType": "Map",
              "calledFrom": "getImageCode",
              "parameterContents": "\"image\",image",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "put",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "returnMap",
              "objectType": "Map",
              "calledFrom": "getImageCode",
              "parameterContents": "\"strEnsure\",strEnsure",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "put",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "getImageCode",
              "parameterContents": "request,\"YsbCaptcha\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getCookieByName",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "toUpperCase",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "\"-\",\"\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "replace",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "toString",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "getImageCode",
              "parameterContents": "response,\"YsbCaptcha\",cookieId,CAPTCHA_EXPIRED",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "addCookie",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "cookie",
              "objectType": "Cookie",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getValue",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "toUpperCase",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "\"-\",\"\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "replace",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "toString",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "getImageCode",
              "parameterContents": "response,\"YsbCaptcha\",cookieId,CAPTCHA_EXPIRED",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "addCookie",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "cookie",
              "objectType": "Cookie",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getValue",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "verificationCodeRepository",
              "objectType": "VerificationCodeRepository",
              "calledFrom": "getImageCode",
              "parameterContents": "new VerificationCodeValue(cookieId, strEnsure)",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "save",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "verifyCode",
              "parameterContents": "request,\"YsbCaptcha\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getCookieByName",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "toUpperCase",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "verifyCode",
              "parameterContents": "\"-\",\"\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "replace",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "toString",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "verifyCode",
              "parameterContents": "response,\"YsbCaptcha\",cookieId,CAPTCHA_EXPIRED",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "addCookie",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "cookie",
              "objectType": "Cookie",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getValue",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "verificationCodeRepository",
              "objectType": "VerificationCodeRepository",
              "calledFrom": "verifyCode",
              "parameterContents": "cookieId",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "findByCookie",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "value",
              "objectType": "VerificationCodeValue",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "getVerificationCode",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "code",
              "objectType": "String",
              "calledFrom": "verifyCode",
              "parameterContents": "receivedCode.toUpperCase()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "equals",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "receivedCode",
              "objectType": "String",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "toUpperCase",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getRandColor",
              "parameterContents": "bc - fc",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getRandColor",
              "parameterContents": "bc - fc",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getRandColor",
              "parameterContents": "bc - fc",
              "microserviceName": "ts-verification-code-service",
              "className": "VerificationCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "com.trainticket.verificationcode.service.VerificationCodeServiceImpl"
            }
          ],
          "name": "VerificationCodeServiceImpl",
          "path": "/ts-verification-code-service/src/main/java/com/trainticket/verificationcode/service/VerificationCodeServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "com.trainticket.verificationcode.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "verificationCode",
                  "packageAndClassName": "com.trainticket.verificationcode.repository.VerificationCodeRepository"
                }
              ],
              "returnType": "VerificationCodeValue",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'verificationCode': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "com.trainticket.verificationcode.repository.VerificationCodeRepository"
                }
              ],
              "className": "VerificationCodeRepository",
              "name": "findByVerificationCode",
              "packageAndClassName": "com.trainticket.verificationcode.repository.VerificationCodeRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "cookie",
                  "packageAndClassName": "com.trainticket.verificationcode.repository.VerificationCodeRepository"
                }
              ],
              "returnType": "VerificationCodeValue",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "{ 'cookie': ?0 }"
                  },
                  "name": "Query",
                  "packageAndClassName": "com.trainticket.verificationcode.repository.VerificationCodeRepository"
                }
              ],
              "className": "VerificationCodeRepository",
              "name": "findByCookie",
              "packageAndClassName": "com.trainticket.verificationcode.repository.VerificationCodeRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<VerificationCodeValue>",
              "microserviceName": "ts-verification-code-service",
              "annotations": [],
              "className": "VerificationCodeRepository",
              "name": "findAll",
              "packageAndClassName": "com.trainticket.verificationcode.repository.VerificationCodeRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "com.trainticket.verificationcode.repository.VerificationCodeRepository"
            }
          ],
          "methodCalls": [],
          "name": "VerificationCodeRepository",
          "path": "/ts-verification-code-service/src/main/java/com/trainticket/verificationcode/repository/VerificationCodeRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 15678
            },
            "spring": {
              "application": {
                "name": "ts-verification-code-service"
              },
              "data": {
                "mongodb": {
                  "host": "ts-verification-code-mongo",
                  "database": "ts",
                  "port": 27017
                }
              },
              "zipkin": {
                "baseUrl": "http://zipkin:9411/"
              },
              "sleuth": {
                "sampler": {
                  "percentage": 1.0
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-verification-code-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.springframework.boot",
                  "artifactId": "spring-boot-starter-data-mongodb"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-verification-code-service",
              "artifactId": "ts-verification-code-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-verification-code-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    }
  ],
  "orphans": [
    {
      "data": {
        "version": "3",
        "services": {
          "rabbitmq": {
            "image": "10.141.212.25:5555/cluster-ts-rabbitmq-management",
            "ports": [
              "5672:5672",
              "15672:15672"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "zipkin": {
            "image": "10.141.212.25:5555/cluster-ts-openzipkin-zipkin",
            "ports": [
              "9411:9411"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "redis": {
            "image": "10.141.212.25:5555/cluster-ts-redis",
            "ports": [
              "6379:6379"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-ui-dashboard": {
            "build": "ts-ui-dashboard",
            "image": "10.141.212.25:5555/cluster-ts-ui-dashboard",
            "restart": "always",
            "ports": [
              "80:8080"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-login-service": {
            "build": "ts-login-service",
            "image": "10.141.212.25:5555/cluster-ts-login-service",
            "restart": "always",
            "ports": [
              "12342:12342"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-account-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-route-service": {
            "build": "ts-route-service",
            "image": "10.141.212.25:5555/cluster-ts-route-service",
            "restart": "always",
            "ports": [
              "11178:11178"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-register-service": {
            "build": "ts-register-service",
            "image": "10.141.212.25:5555/cluster-ts-register-service",
            "restart": "always",
            "ports": [
              "12344:12344"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-sso-service": {
            "build": "ts-sso-service",
            "image": "10.141.212.25:5555/cluster-ts-sso-service",
            "restart": "always",
            "ports": [
              "12349:12349"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-verification-code-service": {
            "build": "ts-verification-code-service",
            "image": "10.141.212.25:5555/cluster-ts-verification-code-service",
            "restart": "always",
            "ports": [
              "15678:15678"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-service": {
            "build": "ts-contacts-service",
            "image": "10.141.212.25:5555/cluster-ts-contacts-service",
            "restart": "always",
            "ports": [
              "12347:12347"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-order-service": {
            "build": "ts-order-service",
            "image": "10.141.212.25:5555/cluster-ts-order-service",
            "restart": "always",
            "ports": [
              "12031:12031"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-order-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-service": {
            "build": "ts-order-other-service",
            "image": "10.141.212.25:5555/cluster-ts-order-other-service",
            "restart": "always",
            "ports": [
              "12032:12032"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-config-service": {
            "build": "ts-config-service",
            "image": "10.141.212.25:5555/cluster-ts-config-service",
            "restart": "always",
            "ports": [
              "15679:15679"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-config-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-station-service": {
            "build": "ts-station-service",
            "image": "10.141.212.25:5555/cluster-ts-station-service",
            "restart": "always",
            "ports": [
              "12345:12345"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-station-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-train-service": {
            "build": "ts-train-service",
            "image": "10.141.212.25:5555/cluster-ts-train-service",
            "restart": "always",
            "ports": [
              "14567:14567"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-train-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-service": {
            "build": "ts-travel-service",
            "image": "10.141.212.25:5555/cluster-ts-travel-service",
            "restart": "always",
            "ports": [
              "12346:12346"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-service": {
            "build": "ts-travel2-service",
            "image": "10.141.212.25:5555/cluster-ts-travel2-service",
            "restart": "always",
            "ports": [
              "16346:16346"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-service": {
            "build": "ts-preserve-service",
            "image": "10.141.212.25:5555/cluster-ts-preserve-service",
            "restart": "always",
            "ports": [
              "14568:14568"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-other-service": {
            "build": "ts-preserve-other-service",
            "image": "10.141.212.25:5555/cluster-ts-preserve-other-service",
            "restart": "always",
            "ports": [
              "14569:14569"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-basic-service": {
            "build": "ts-basic-service",
            "image": "10.141.212.25:5555/cluster-ts-basic-service",
            "restart": "always",
            "ports": [
              "15680:15680"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-ticketinfo-service": {
            "build": "ts-ticketinfo-service",
            "image": "10.141.212.25:5555/cluster-ts-ticketinfo-service",
            "restart": "always",
            "ports": [
              "15681:15681"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-price-service": {
            "build": "ts-price-service",
            "image": "10.141.212.25:5555/cluster-ts-price-service",
            "restart": "always",
            "ports": [
              "16579:16579"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-price-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-notification-service": {
            "build": "ts-notification-service",
            "image": "10.141.212.25:5555/cluster-ts-notification-service",
            "restart": "always",
            "ports": [
              "17853:17853"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-security-service": {
            "build": "ts-security-service",
            "image": "10.141.212.25:5555/cluster-ts-security-service",
            "restart": "always",
            "ports": [
              "11188:11188"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-security-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-service": {
            "build": "ts-inside-payment-service",
            "image": "10.141.212.25:5555/cluster-ts-inside-payment-service",
            "restart": "always",
            "ports": [
              "18673:18673"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-execute-service": {
            "build": "ts-execute-service",
            "image": "10.141.212.25:5555/cluster-ts-execute-service",
            "restart": "always",
            "ports": [
              "12386:12386"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-service": {
            "build": "ts-payment-service",
            "image": "10.141.212.25:5555/cluster-ts-payment-service",
            "restart": "always",
            "ports": [
              "19001:19001"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-service": {
            "build": "ts-rebook-service",
            "image": "10.141.212.25:5555/cluster-ts-rebook-service",
            "restart": "always",
            "ports": [
              "18886:18886"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-cancel-service": {
            "build": "ts-cancel-service",
            "image": "10.141.212.25:5555/cluster-ts-cancel-service",
            "restart": "always",
            "ports": [
              "18885:18885"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-service": {
            "build": "ts-assurance-service",
            "image": "10.141.212.25:5555/cluster-ts-assurance-service",
            "restart": "always",
            "ports": [
              "18888:18888"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-seat-service": {
            "build": "ts-seat-service",
            "image": "10.141.212.25:5555/cluster-ts-seat-service",
            "restart": "always",
            "ports": [
              "18898:18898"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-plan-service": {
            "build": "ts-travel-plan-service",
            "image": "10.141.212.25:5555/cluster-ts-travel-plan-service",
            "restart": "always",
            "ports": [
              "14322:14322"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-ticket-office-service": {
            "build": "ts-ticket-office-service",
            "image": "10.141.212.25:5555/cluster-ts-ticket-office-service",
            "restart": "always",
            "ports": [
              "16108:16108"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-ticket-office-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-news-service": {
            "build": "ts-news-service",
            "image": "10.141.212.25:5555/cluster-ts-news-service",
            "restart": "always",
            "ports": [
              "12862:12862"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-news-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-mysql": {
            "image": "10.141.212.25:5555/cluster-ts-mysql",
            "expose": [
              "3306"
            ],
            "environment": {
              "MYSQL_ROOT_PASSWORD": "root"
            },
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-service": {
            "build": "ts-voucher-service",
            "image": "10.141.212.25:5555/cluster-ts-voucher-service",
            "restart": "always",
            "ports": [
              "16101:16101"
            ],
            "depends_on": [
              "ts-voucher-mysql"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "volumes": [
              "/var/lib/mysql"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-map-service": {
            "build": "ts-food-map-service",
            "image": "10.141.212.25:5555/cluster-ts-food-map-service",
            "restart": "always",
            "ports": [
              "18855:18855"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-food-map-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-route-plan-service": {
            "build": "ts-route-plan-service",
            "image": "10.141.212.25:5555/cluster-ts-route-plan-service",
            "restart": "always",
            "ports": [
              "14578:14578"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-food-service": {
            "build": "ts-food-service",
            "image": "10.141.212.25:5555/cluster-ts-food-service",
            "restart": "always",
            "ports": [
              "18856:18856"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-service": {
            "build": "ts-consign-service",
            "image": "10.141.212.25:5555/cluster-ts-consign-service",
            "restart": "always",
            "ports": [
              "16111:16111"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-service": {
            "build": "ts-consign-price-service",
            "image": "10.141.212.25:5555/cluster-ts-consign-price-service",
            "restart": "always",
            "ports": [
              "16110:16110"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-food-mongo": {
            "image": "10.141.212.25:5555/cluster-ts-mongo",
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-basic-info-service": {
            "build": "ts-admin-basic-info-service",
            "image": "10.141.212.25:5555/cluster-ts-admin-basic-info-service",
            "restart": "always",
            "ports": [
              "18767:18767"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-order-service": {
            "build": "ts-admin-order-service",
            "image": "10.141.212.25:5555/cluster-ts-admin-order-service",
            "restart": "always",
            "ports": [
              "16112:16112"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-route-service": {
            "build": "ts-admin-route-service",
            "image": "10.141.212.25:5555/cluster-ts-admin-route-service",
            "restart": "always",
            "ports": [
              "16113:16113"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-travel-service": {
            "build": "ts-admin-travel-service",
            "image": "10.141.212.25:5555/cluster-ts-admin-travel-service",
            "restart": "always",
            "ports": [
              "16114:16114"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-user-service": {
            "build": "ts-admin-user-service",
            "image": "10.141.212.25:5555/cluster-ts-admin-user-service",
            "restart": "always",
            "ports": [
              "16115:16115"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          }
        },
        "networks": {
          "my-network": {
            "driver": "overlay"
          }
        }
      },
      "name": "docker-compose-swarm.yml",
      "path": "/docker-compose-swarm.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "sudo": false,
        "language": "node_js",
        "before_install": [
          "npm install -g npm@2",
          "npm install -g npm"
        ],
        "notifications": {
          "email": false
        },
        "matrix": {
          "fast_finish": true,
          "include": [
            {
              "node_js": "0.8",
              "env": "TASK=test"
            },
            {
              "node_js": "0.10",
              "env": "TASK=test"
            },
            {
              "node_js": "0.11",
              "env": "TASK=test"
            },
            {
              "node_js": "0.12",
              "env": "TASK=test"
            },
            {
              "node_js": 1,
              "env": "TASK=test"
            },
            {
              "node_js": 2,
              "env": "TASK=test"
            },
            {
              "node_js": 3,
              "env": "TASK=test"
            },
            {
              "node_js": 4,
              "env": "TASK=test"
            },
            {
              "node_js": 5,
              "env": "TASK=test"
            },
            {
              "node_js": 6,
              "env": "TASK=test"
            },
            {
              "node_js": 7,
              "env": "TASK=test"
            },
            {
              "node_js": 5,
              "env": "TASK=browser BROWSER_NAME=ie BROWSER_VERSION=\"9..latest\""
            },
            {
              "node_js": 5,
              "env": "TASK=browser BROWSER_NAME=opera BROWSER_VERSION=\"11..latest\""
            },
            {
              "node_js": 5,
              "env": "TASK=browser BROWSER_NAME=chrome BROWSER_VERSION=\"-3..latest\""
            },
            {
              "node_js": 5,
              "env": "TASK=browser BROWSER_NAME=firefox BROWSER_VERSION=\"-3..latest\""
            },
            {
              "node_js": 5,
              "env": "TASK=browser BROWSER_NAME=safari BROWSER_VERSION=\"5..latest\""
            },
            {
              "node_js": 5,
              "env": "TASK=browser BROWSER_NAME=microsoftedge BROWSER_VERSION=latest"
            }
          ]
        },
        "script": "npm run $TASK",
        "env": {
          "global": [
            {
              "secure": "rE2Vvo7vnjabYNULNyLFxOyt98BoJexDqsiOnfiD6kLYYsiQGfr/sbZkPMOFm9qfQG7pjqx+zZWZjGSswhTt+626C0t/njXqug7Yps4c3dFblzGfreQHp7wNX5TFsvrxd6dAowVasMp61sJcRnB2w8cUzoe3RAYUDHyiHktwqMc="
            },
            {
              "secure": "g9YINaKAdMatsJ28G9jCGbSaguXCyxSTy+pBO6Ch0Cf57ZLOTka3HqDj8p3nV28LUIHZ3ut5WO43CeYKwt4AUtLpBS3a0dndHdY6D83uY6b2qh5hXlrcbeQTq2cvw2y95F7hm4D1kwrgZ7ViqaKggRcEupAL69YbJnxeUDKWEdI="
            }
          ]
        }
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/readable-stream/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.8",
          "0.10",
          "0.11",
          "0.12",
          "1.7.1",
          1,
          2,
          3,
          4,
          5
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/process-nextick-args/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.11"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/void-elements/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.11",
          "0.12",
          "iojs"
        ],
        "after_script": "NODE_ENV=test YOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha --require patched-blanket --reporter mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js"
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/cliui/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/constantinople/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/transformers/node_modules/is-promise/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.8",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/minimist/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.4",
          "0.6",
          "0.8",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/utils-merge/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "extensions/v1beta1",
        "kind": "Deployment",
        "metadata": {
          "name": "rest-service-1-deployment"
        },
        "spec": {
          "replicas": 2,
          "template": {
            "metadata": {
              "labels": {
                "app": "rest-service-1"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "rest-service-1",
                  "image": "10.141.212.25:5555/rest-service-1",
                  "imagePullPolicy": "IfNotPresent",
                  "ports": [
                    {
                      "containerPort": 16001
                    }
                  ]
                },
                {
                  "name": "istio-proxy",
                  "image": "docker.io/istio/proxy_debug:0.2.6"
                }
              ],
              "initContainers": [
                {
                  "name": "istio-init",
                  "image": "docker.io/istio/proxy_init:0.2.6",
                  "imagePullPolicy": "IfNotPresent"
                }
              ]
            }
          }
        }
      },
      "name": "service1-deployment.yml",
      "path": "/kubernetes-services/service1-deployment.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.8",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/isarray/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "name": "rest-service-2"
        },
        "spec": {
          "type": "NodePort",
          "ports": [
            {
              "port": 16002,
              "nodePort": 30002
            }
          ],
          "selector": {
            "app": "rest-service-2"
          }
        }
      },
      "name": "service2-service.yml",
      "path": "/kubernetes-services/service2-service.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "repo_token": "SIAeZjKYlHK74rbcFvNHMUzjRiMpflxve"
      },
      "name": ".coveralls.yml",
      "path": "/ts-ticket-office-service/node_modules/debug/.coveralls.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "sudo": false,
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.11",
          "0.12",
          "iojs",
          "4",
          "6",
          "8",
          "node"
        ],
        "env": [
          "CXX=g++-4.8"
        ],
        "addons": {
          "apt": {
            "sources": [
              "ubuntu-toolchain-r-test"
            ],
            "packages": [
              "gcc-4.8",
              "g++-4.8"
            ]
          }
        }
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/iconv-lite/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/is-promise/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "config.istio.io/v1alpha2",
        "kind": "RouteRule",
        "metadata": {
          "name": "rest-service-delay"
        },
        "spec": {
          "destination": {
            "name": "rest-service-2"
          },
          "route": [
            {
              "labels": {
                "version": "v1"
              }
            }
          ],
          "httpFault": {
            "delay": {
              "percent": 100,
              "fixedDelay": "10s"
            }
          }
        }
      },
      "name": "rule.yml",
      "path": "/kubernetes-services/rule.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "version": "3",
        "services": {
          "mongodb": {
            "image": "mongo",
            "ports": [
              "27017:27017"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rabbitmq": {
            "image": "rabbitmq:management",
            "ports": [
              "5672:5672",
              "15672:15672"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "zipkin": {
            "image": "openzipkin/zipkin",
            "ports": [
              "9411:9411"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-6": {
            "build": "rest-service-6",
            "image": "10.141.212.25:5555/my-rest-service-6",
            "restart": "always",
            "ports": [
              "16006:16006"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-5": {
            "build": "rest-service-5",
            "image": "10.141.212.25:5555/my-rest-service-5",
            "restart": "always",
            "ports": [
              "16005:16005"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-4": {
            "build": "rest-service-4",
            "image": "10.141.212.25:5555/my-rest-service-4",
            "restart": "always",
            "ports": [
              "16004:16004"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-3": {
            "build": "rest-service-3",
            "image": "10.141.212.25:5555/my-rest-service-3",
            "restart": "always",
            "ports": [
              "16003:16003"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-2": {
            "build": "rest-service-2",
            "image": "10.141.212.25:5555/my-rest-service-2",
            "restart": "always",
            "ports": [
              "16002:16002"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-1": {
            "build": "rest-service-1",
            "image": "10.141.212.25:5555/my-rest-service-1",
            "restart": "always",
            "ports": [
              "16001:16001"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-end": {
            "build": "rest-service-end",
            "image": "10.141.212.25:5555/my-rest-service-end",
            "restart": "always",
            "ports": [
              "16000:16000"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-nodejs": {
            "build": "rest-service-nodejs",
            "image": "10.141.212.25:5555/rest-service-nodejs",
            "restart": "always",
            "ports": [
              "16100:16100"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-python": {
            "build": "rest-service-python",
            "image": "10.141.212.25:5555/rest-service-python",
            "restart": "always",
            "ports": [
              "16101:16101"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-go": {
            "build": "rest-service-go",
            "image": "my-service-cluster/rest-service-go",
            "restart": "always",
            "ports": [
              "16102:16102"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          }
        },
        "networks": {
          "my-network": {
            "driver": "overlay"
          }
        }
      },
      "name": "docker-compose-swarm.yml",
      "path": "/1-services/docker-compose-swarm.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "version": "3",
        "services": {
          "rabbitmq": {
            "image": "rabbitmq:management",
            "ports": [
              "5672:5672",
              "15672:15672"
            ],
            "networks": [
              "my-network"
            ]
          },
          "zipkin": {
            "image": "openzipkin/zipkin",
            "ports": [
              "9411:9411"
            ],
            "networks": [
              "my-network"
            ]
          },
          "redis": {
            "image": "redis",
            "ports": [
              "6379:6379"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ui-dashboard": {
            "build": "ts-ui-dashboard",
            "image": "ts/ts-ui-dashboard",
            "restart": "always",
            "ports": [
              "80:8080"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-login-service": {
            "build": "ts-login-service",
            "image": "ts/ts-login-service",
            "restart": "always",
            "ports": [
              "12342:12342"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-account-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-route-service": {
            "build": "ts-route-service",
            "image": "ts/ts-route-service",
            "restart": "always",
            "ports": [
              "11178:11178"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-register-service": {
            "build": "ts-register-service",
            "image": "ts/ts-register-service",
            "restart": "always",
            "ports": [
              "12344:12344"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-sso-service": {
            "build": "ts-sso-service",
            "image": "ts/ts-sso-service",
            "restart": "always",
            "ports": [
              "12349:12349"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-verification-code-service": {
            "build": "ts-verification-code-service",
            "image": "ts/ts-verification-code-service",
            "restart": "always",
            "ports": [
              "15678:15678"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-verification-code-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-service": {
            "build": "ts-contacts-service",
            "image": "ts/ts-contacts-service",
            "restart": "always",
            "ports": [
              "12347:12347"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-order-service": {
            "build": "ts-order-service",
            "image": "ts/ts-order-service",
            "restart": "always",
            "ports": [
              "12031:12031"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-order-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-service": {
            "build": "ts-order-other-service",
            "image": "ts/ts-order-other-service",
            "restart": "always",
            "ports": [
              "12032:12032"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-config-service": {
            "build": "ts-config-service",
            "image": "ts/ts-config-service",
            "restart": "always",
            "ports": [
              "15679:15679"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-config-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-station-service": {
            "build": "ts-station-service",
            "image": "ts/ts-station-service",
            "restart": "always",
            "ports": [
              "12345:12345"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-station-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-train-service": {
            "build": "ts-train-service",
            "image": "ts/ts-train-service",
            "restart": "always",
            "ports": [
              "14567:14567"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-train-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-service": {
            "build": "ts-travel-service",
            "image": "ts/ts-travel-service",
            "restart": "always",
            "ports": [
              "12346:12346"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-service": {
            "build": "ts-travel2-service",
            "image": "ts/ts-travel2-service",
            "restart": "always",
            "ports": [
              "16346:16346"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-service": {
            "build": "ts-preserve-service",
            "image": "ts/ts-preserve-service",
            "restart": "always",
            "ports": [
              "14568:14568"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-other-service": {
            "build": "ts-preserve-other-service",
            "image": "ts/ts-preserve-other-service",
            "restart": "always",
            "ports": [
              "14569:14569"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-basic-service": {
            "build": "ts-basic-service",
            "image": "ts/ts-basic-service",
            "restart": "always",
            "ports": [
              "15680:15680"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ticketinfo-service": {
            "build": "ts-ticketinfo-service",
            "image": "ts/ts-ticketinfo-service",
            "restart": "always",
            "ports": [
              "15681:15681"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-price-service": {
            "build": "ts-price-service",
            "image": "ts/ts-price-service",
            "restart": "always",
            "ports": [
              "16579:16579"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-price-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-notification-service": {
            "build": "ts-notification-service",
            "image": "ts/ts-notification-service",
            "restart": "always",
            "ports": [
              "17853:17853"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-security-service": {
            "build": "ts-security-service",
            "image": "ts/ts-security-service",
            "restart": "always",
            "ports": [
              "11188:11188"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-security-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-service": {
            "build": "ts-inside-payment-service",
            "image": "ts/ts-inside-payment-service",
            "restart": "always",
            "ports": [
              "18673:18673"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-execute-service": {
            "build": "ts-execute-service",
            "image": "ts/ts-execute-service",
            "restart": "always",
            "ports": [
              "12386:12386"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-service": {
            "build": "ts-payment-service",
            "image": "ts/ts-payment-service",
            "restart": "always",
            "ports": [
              "19001:19001"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-service": {
            "build": "ts-rebook-service",
            "image": "ts/ts-rebook-service",
            "restart": "always",
            "ports": [
              "18886:18886"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-cancel-service": {
            "build": "ts-cancel-service",
            "image": "ts/ts-cancel-service",
            "restart": "always",
            "ports": [
              "18885:18885"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-service": {
            "build": "ts-assurance-service",
            "image": "ts/ts-assurance-service",
            "restart": "always",
            "ports": [
              "18888:18888"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-seat-service": {
            "build": "ts-seat-service",
            "image": "ts/ts-seat-service",
            "restart": "always",
            "ports": [
              "18898:18898"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-plan-service": {
            "build": "ts-travel-plan-service",
            "image": "ts/ts-travel-plan-service",
            "restart": "always",
            "ports": [
              "14322:14322"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ticket-office-service": {
            "build": "ts-ticket-office-service",
            "image": "ts/ts-ticket-office-service",
            "restart": "always",
            "ports": [
              "16108:16108"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ticket-office-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-news-service": {
            "build": "ts-news-service",
            "image": "ts/ts-news-service",
            "restart": "always",
            "ports": [
              "12862:12862"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-news-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-mysql": {
            "image": "mysql",
            "expose": [
              "3306"
            ],
            "environment": {
              "MYSQL_ROOT_PASSWORD": "root"
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-service": {
            "build": "ts-voucher-service",
            "image": "ts/ts-voucher-service",
            "restart": "always",
            "ports": [
              "16101:16101"
            ],
            "depends_on": [
              "ts-voucher-mysql"
            ],
            "volumes": [
              "/var/lib/mysql"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-map-service": {
            "build": "ts-food-map-service",
            "image": "ts/ts-food-map-service",
            "restart": "always",
            "ports": [
              "18855:18855"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-map-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-route-plan-service": {
            "build": "ts-route-plan-service",
            "image": "ts/ts-route-plan-service",
            "restart": "always",
            "ports": [
              "14578:14578"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-service": {
            "build": "ts-food-service",
            "image": "ts/ts-food-service",
            "restart": "always",
            "ports": [
              "18856:18856"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-service": {
            "build": "ts-consign-service",
            "image": "ts/ts-consign-service",
            "restart": "always",
            "ports": [
              "16111:16111"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-service": {
            "build": "ts-consign-price-service",
            "image": "ts/ts-consign-price-service",
            "restart": "always",
            "ports": [
              "16110:16110"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-food-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-basic-info-service": {
            "build": "ts-admin-basic-info-service",
            "image": "ts/ts-admin-basic-info-service",
            "restart": "always",
            "ports": [
              "18767:18767"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-order-service": {
            "build": "ts-admin-order-service",
            "image": "ts/ts-admin-order-service",
            "restart": "always",
            "ports": [
              "16112:16112"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-route-service": {
            "build": "ts-admin-route-service",
            "image": "ts/ts-admin-route-service",
            "restart": "always",
            "ports": [
              "16113:16113"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-travel-service": {
            "build": "ts-admin-travel-service",
            "image": "ts/ts-admin-travel-service",
            "restart": "always",
            "ports": [
              "16114:16114"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-user-service": {
            "build": "ts-admin-user-service",
            "image": "ts/ts-admin-user-service",
            "restart": "always",
            "ports": [
              "16115:16115"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          }
        },
        "networks": {
          "my-network": {
            "driver": "bridge"
          }
        }
      },
      "name": "docker-compose.yml",
      "path": "/docker-compose.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "project": {
          "pluginRepositories": {
            "pluginRepository": [
              {
                "snapshots": {
                  "enabled": true
                },
                "name": "Spring Snapshots",
                "id": "spring-snapshots",
                "url": "http://repo.spring.io/snapshot"
              },
              {
                "snapshots": {
                  "enabled": false
                },
                "name": "Spring Milestones",
                "id": "spring-milestones",
                "url": "http://repo.spring.io/milestone"
              },
              {
                "snapshots": {
                  "enabled": false
                },
                "name": "Spring Releases",
                "id": "spring-releases",
                "url": "http://repo.spring.io/release"
              }
            ]
          },
          "parent": {
            "groupId": "org.springframework.boot",
            "artifactId": "spring-boot-starter-parent",
            "version": "1.5.3.RELEASE"
          },
          "modelVersion": "4.0.0",
          "groupId": "fdse.jichao",
          "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
          "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
          "packaging": "pom",
          "version": 1,
          "modules": {
            "module": [
              "rest-service-2",
              "rest-service-1",
              "rest-service-3"
            ]
          },
          "dependencies": {
            "dependency": [
              {
                "groupId": "org.springframework.cloud",
                "artifactId": "spring-cloud-sleuth-core",
                "version": "1.2.2.BUILD-SNAPSHOT"
              },
              {
                "groupId": "org.springframework.cloud",
                "artifactId": "spring-cloud-sleuth-zipkin",
                "version": "1.2.2.BUILD-SNAPSHOT"
              },
              {
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-aop"
              },
              {
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-integration"
              },
              {
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-actuator"
              }
            ]
          },
          "xmlns": "http://maven.apache.org/POM/4.0.0",
          "build": {
            "plugins": {
              "plugin": {
                "configuration": "",
                "groupId": "org.apache.maven.plugins",
                "artifactId": "maven-eclipse-plugin"
              }
            }
          },
          "repositories": {
            "repository": [
              {
                "snapshots": {
                  "enabled": true
                },
                "name": "Spring Snapshots",
                "id": "spring-snapshots",
                "url": "http://repo.spring.io/snapshot"
              },
              {
                "snapshots": {
                  "enabled": false
                },
                "name": "Spring Milestones",
                "id": "spring-milestones",
                "url": "http://repo.spring.io/milestone"
              }
            ]
          },
          "name": "kubernetes-services",
          "artifactId": "kubernetes-services"
        }
      },
      "name": "pom.xml",
      "path": "/kubernetes-services/pom.xml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "node",
          "5",
          "4",
          "0.12",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/safe-buffer/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "name": "ts-ui-dashboard"
        },
        "spec": {
          "type": "NodePort",
          "ports": [
            {
              "port": 8080,
              "nodePort": 30004
            }
          ],
          "selector": {
            "app": "ts-ui-dashboard"
          }
        }
      },
      "name": "ts-service-part3.yml",
      "path": "/ts-service-part3.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "version": "3",
        "services": {
          "mongodb": {
            "image": "mongo",
            "ports": [
              "27017:27017"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rabbitmq": {
            "image": "rabbitmq:management",
            "ports": [
              "5672:5672",
              "15672:15672"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "zipkin": {
            "image": "openzipkin/zipkin",
            "ports": [
              "9411:9411"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-6": {
            "build": "rest-service-6",
            "image": "my-service-cluster/rest-service-6",
            "restart": "always",
            "ports": [
              "16006:16006"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-5": {
            "build": "rest-service-5",
            "image": "my-service-cluster/rest-service-5",
            "restart": "always",
            "ports": [
              "16005:16005"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-4": {
            "build": "rest-service-4",
            "image": "my-service-cluster/rest-service-4",
            "restart": "always",
            "ports": [
              "16004:16004"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-3": {
            "build": "rest-service-3",
            "image": "my-service-cluster/rest-service-3",
            "restart": "always",
            "ports": [
              "16003:16003"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-2": {
            "build": "rest-service-2",
            "image": "my-service-cluster/rest-service-2",
            "restart": "always",
            "ports": [
              "16002:16002"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-1": {
            "build": "rest-service-1",
            "image": "my-service-cluster/rest-service-1",
            "restart": "always",
            "ports": [
              "16001:16001"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-end": {
            "build": "rest-service-end",
            "image": "my-service-cluster/rest-service-end",
            "restart": "always",
            "ports": [
              "16000:16000"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-nodejs": {
            "build": "rest-service-nodejs",
            "image": "my-service-cluster/rest-service-nodejs",
            "restart": "always",
            "ports": [
              "16100:16100"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-python": {
            "build": "rest-service-python",
            "image": "my-service-cluster/rest-service-python",
            "restart": "always",
            "ports": [
              "16101:16101"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "rest-service-go": {
            "build": "rest-service-go",
            "image": "my-service-cluster/rest-service-go",
            "restart": "always",
            "ports": [
              "16102:16102"
            ],
            "deploy": {
              "replicas": 3,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          }
        },
        "networks": {
          "my-network": {
            "driver": "bridge"
          }
        }
      },
      "name": "docker-compose.yml",
      "path": "/1-services/docker-compose.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "extensions/v1beta1",
        "kind": "Deployment",
        "metadata": {
          "name": "rest-service-2-deployment"
        },
        "spec": {
          "replicas": 2,
          "template": {
            "metadata": {
              "labels": {
                "app": "rest-service-2"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "rest-service-2",
                  "image": "10.141.212.25:5555/rest-service-2",
                  "imagePullPolicy": "IfNotPresent",
                  "ports": [
                    {
                      "containerPort": 16002
                    }
                  ]
                },
                {
                  "name": "istio-proxy",
                  "image": "docker.io/istio/proxy_debug:0.2.6"
                }
              ],
              "initContainers": [
                {
                  "name": "istio-init",
                  "image": "docker.io/istio/proxy_init:0.2.6",
                  "imagePullPolicy": "IfNotPresent"
                }
              ]
            }
          }
        }
      },
      "name": "service2-deployment.yml",
      "path": "/kubernetes-services/service2-deployment.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.12",
          "io.js"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/graceful-readlink/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.11",
          "0.12",
          "4.0",
          "4.1",
          "4.2",
          "5"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/ipaddr.js/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "project": {
          "pluginRepositories": {
            "pluginRepository": [
              {
                "snapshots": {
                  "enabled": true
                },
                "name": "Spring Snapshots",
                "id": "spring-snapshots",
                "url": "http://repo.spring.io/snapshot"
              },
              {
                "snapshots": {
                  "enabled": false
                },
                "name": "Spring Milestones",
                "id": "spring-milestones",
                "url": "http://repo.spring.io/milestone"
              },
              {
                "snapshots": {
                  "enabled": false
                },
                "name": "Spring Releases",
                "id": "spring-releases",
                "url": "http://repo.spring.io/release"
              }
            ]
          },
          "parent": {
            "groupId": "org.springframework.boot",
            "artifactId": "spring-boot-starter-parent",
            "version": "1.5.3.RELEASE"
          },
          "modelVersion": "4.0.0",
          "groupId": "org.myrestservice.sample",
          "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
          "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
          "packaging": "pom",
          "version": "0.1.0",
          "modules": {
            "module": [
              "rest-service-6",
              "rest-service-5",
              "rest-service-4",
              "rest-service-3",
              "rest-service-2",
              "rest-service-1",
              "rest-service-end"
            ]
          },
          "dependencies": {
            "dependency": [
              {
                "groupId": "org.springframework.cloud",
                "artifactId": "spring-cloud-sleuth-core",
                "version": "1.2.2.BUILD-SNAPSHOT"
              },
              {
                "groupId": "org.springframework.cloud",
                "artifactId": "spring-cloud-sleuth-zipkin",
                "version": "1.2.2.BUILD-SNAPSHOT"
              },
              {
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-aop"
              },
              {
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-integration"
              },
              {
                "groupId": "org.springframework.boot",
                "artifactId": "spring-boot-starter-actuator"
              }
            ]
          },
          "xmlns": "http://maven.apache.org/POM/4.0.0",
          "build": {
            "plugins": {
              "plugin": {
                "configuration": "",
                "groupId": "org.apache.maven.plugins",
                "artifactId": "maven-eclipse-plugin"
              }
            }
          },
          "repositories": {
            "repository": [
              {
                "snapshots": {
                  "enabled": true
                },
                "name": "Spring Snapshots",
                "id": "spring-snapshots",
                "url": "http://repo.spring.io/snapshot"
              },
              {
                "snapshots": {
                  "enabled": false
                },
                "name": "Spring Milestones",
                "id": "spring-milestones",
                "url": "http://repo.spring.io/milestone"
              }
            ]
          },
          "name": "rest-service-cluster",
          "artifactId": "rest-service-cluster"
        }
      },
      "name": "pom.xml",
      "path": "/1-services/pom.xml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "sudo": false,
        "node_js": [
          "0.10",
          "0.12",
          "4"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/acorn/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.8",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/optimist/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "repo_token": "NiRhyj91Z2vtgob6XdEAqs83rzNnbMZUu"
      },
      "name": ".coveralls.yml",
      "path": "/ts-ticket-office-service/node_modules/cliui/.coveralls.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "version": "3",
        "services": {
          "rest-service-3": {
            "build": "rest-service-3",
            "image": "my-service-cluster/rest-service-3",
            "restart": "always",
            "ports": [
              "16003:16003"
            ],
            "networks": [
              "my-network"
            ]
          },
          "rest-service-2": {
            "build": "rest-service-2",
            "image": "my-service-cluster/rest-service-2",
            "restart": "always",
            "ports": [
              "16002:16002"
            ],
            "networks": [
              "my-network"
            ]
          },
          "rest-service-1": {
            "build": "rest-service-1",
            "image": "my-service-cluster/rest-service-1",
            "restart": "always",
            "ports": [
              "16001:16001"
            ],
            "networks": [
              "my-network"
            ]
          }
        },
        "networks": {
          "my-network": {
            "driver": "bridge"
          }
        }
      },
      "name": "docker-compose.yml",
      "path": "/kubernetes-services/docker-compose.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "config.istio.io/v1alpha2",
        "kind": "RouteRule",
        "metadata": {
          "name": "rest-service-delay"
        },
        "spec": {
          "destination": {
            "name": "rest-service-2"
          },
          "route": [
            {
              "labels": {
                "version": "v1"
              }
            }
          ],
          "httpFault": {
            "delay": {
              "percent": 100,
              "fixedDelay": "4s"
            }
          }
        }
      },
      "name": "rule-delay.yml",
      "path": "/kubernetes-services/rule-delay.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": "0.10"
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/with/node_modules/acorn/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "repo_token": "47iIZ0B3llo2Wc4dxWRltvgdImqcrVDTi"
      },
      "name": ".coveralls.yml",
      "path": "/ts-ticket-office-service/node_modules/mongodb-core/.coveralls.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.12",
          "4",
          "6",
          "7",
          "8"
        ],
        "sudo": false
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/require_optional/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/uglify-to-browserify/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "name": "rest-service-1"
        },
        "spec": {
          "type": "NodePort",
          "ports": [
            {
              "port": 16001,
              "nodePort": 30001
            }
          ],
          "selector": {
            "app": "rest-service-1"
          }
        }
      },
      "name": "service1-service.yml",
      "path": "/kubernetes-services/service1-service.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "6",
          "5",
          "4"
        ],
        "install": [
          "make node_modules"
        ],
        "script": [
          "make lint",
          "make test",
          "make coveralls"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/debug/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "repo_token": "GZFmqKPy7XEX0uOl9TDZFUoOQ5AHADMkU"
      },
      "name": ".coveralls.yml",
      "path": "/ts-ticket-office-service/node_modules/mongodb/.coveralls.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          0.8,
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/transformers/node_modules/source-map/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.8",
          "0.10",
          "0.12",
          "iojs"
        ],
        "before_install": [
          "npm install -g npm@~1.4.6"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/mkdirp/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "config.istio.io/v1alpha2",
        "kind": "RouteRule",
        "metadata": {
          "name": "rest-service-timeout"
        },
        "spec": {
          "destination": {
            "name": "rest-service-2"
          },
          "route": [
            {
              "labels": {
                "version": "v1"
              }
            }
          ],
          "httpReqTimeout": {
            "simpleTimeout": {
              "timeout": "5s"
            }
          }
        }
      },
      "name": "rule-timeout.yml",
      "path": "/kubernetes-services/rule-timeout.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "extensions/v1beta1",
        "kind": "Deployment",
        "metadata": {
          "name": "ts-ui-dashboard"
        },
        "spec": {
          "replicas": 1,
          "template": {
            "metadata": {
              "labels": {
                "app": "ts-ui-dashboard"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "ts-ui-dashboard",
                  "image": "10.141.212.25:5555/cluster-ts-ui-dashboard",
                  "imagePullPolicy": "Always",
                  "ports": [
                    {
                      "containerPort": 8080
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "name": "ts-deployment-part3.yml",
      "path": "/ts-deployment-part3.yml",
      "fileType": "CONFIG"
    }
  ]
}